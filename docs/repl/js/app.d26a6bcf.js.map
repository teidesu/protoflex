{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?9b05","webpack:///../src/longbits.js","webpack:///src/App.vue","webpack:///../src/readers.js","webpack:///../src/writers.js","webpack:///../utils.js","webpack:///../src/deserializer.js","webpack:///../src/constants.js","webpack:///../src/utils.js","webpack:///./src/App.vue?d9f9","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///../src/serializer.js","webpack:///../src/input-message.js","webpack:///./src/base64-helper.js","webpack:///./src/output-dumper.js","webpack:///../src/index.js","webpack:///./src/components/Repl.vue?c1ee","webpack:///../src/json-api.js","webpack:///../src/math.js","webpack:///./src/components/Repl.vue?ac19","webpack:///./src/inspect.js","webpack:///./src/collections.js","webpack:///./src/sandbox.js","webpack:///src/components/Repl.vue","webpack:///./src/components/Repl.vue?7b39","webpack:///./src/components/Repl.vue","webpack:///../src/output-message.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","require","TWO_TO_32","Long","LongBits","lo","hi","this","unsigned","mask","zero","sign","fromNumber","fromString","low","high","toNumber","zzEncode","zzDecode","lazyReadVarint","offset","readVarint","ret","RangeError","Error","fullyReadVarint","readFixed32","readFixed64","readLengthDelimited","len","start","end","writeNumberVarint","val","pos","writeLongVarint","from","writeFixed32","writeFixed64","bits","writeLengthDelimited","WIRE_TYPES_NAMES","Deserializer","ArrayBuffer","Uint8Array","Array","isArray","Buffer","field","_parseField","header","_parseHeader","type","func","0","1","2","5","VARINT_TYPES","PACKABLE_TYPES","PROTOBUF_TYPES","WIRE_TYPES","varint","fixed64","lengthDelimited","fixed32","undefined","DEFAULT_VALUES","int32","int64","uint32","uint64","sint32","sint64","bool","sfixed32","sfixed64","bytes","string","message","double","float","TWO_TO_20","TWO_TO_23","TWO_TO_33","TWO_TO_52","TWO_TO_63","TWO_TO_64","MIN_UINT32","MAX_UINT32","MIN_INT32","MAX_INT32","MIN_INT64","MAX_INT64","MIN_UINT64","MAX_UINT64","MAX_FLOAT","MIN_FLOAT","MIN_DOUBLE","MAX_DOUBLE","keyByMultiple","arr","forEach","v","toHex","ar","toByteArray","toString","fromHex","str","parseInt","isNaN","charCodeAt","fromByteArray","out","c1","String","fromCharCode","c2","c3","c4","u","join","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","expression","attrs","model","callback","$$v","inputData","on","asHex","asB64","asRaw","jsonToPB","jsonToHex","jsonToFile","ref","aceInit","inputJson","class","left","PB","$event","_s","staticRenderFns","component","Vue","directive","deep","el","binding","targets","querySelectorAll","target","textContent","hljs","highlightBlock","componentUpdated","use","Buefy","config","productionTip","render","h","App","$mount","splitFloat","splitDouble","writers","Serializer","msg","indexOf","run","_getPrimitiveType","_coerceTo","packed","fields","vals","k","_coerce","_unpacked","obj","writer","preprocessed","_preProcess","ja","InputMessage","_parent","index","has","it","editable","self","next","done","typ","ind","set","iterator","items","last","_addField","constructor","fromValue","unpacked","map","toWire","toUint8Array","buffer","inputToJson","_varints","to","long","item","for","toJSON","encode","a","b","chunk","base64","encodings","byteLength","byteRemainder","mainLength","_dump","html","indentSize","indent","raw","spaces","split","tab","stab","JSON","stringify","possibleTypes","_knownFields","DUMPER_POSSIBLE_TYPES","possiblePackedTypes","concat","filter","div","types","ptype","oldFields","err","repeated","array","e","res","trimEnd","dump","OutputMessage","utils","parse","_prepareJsonInput","ip","fromJson","jsonToInput","inferTypeByValue","_coerceInputTo","json","itype","outputToJson","f","_varint","toLong","zigZagDecode","isBigint","and","shiftRight","xor","joinDouble","exp","mant","NaN","Infinity","Math","pow","joinFloat","round","floor","log","LN2","mantHigh","mantLow","maxDoubleExponent","minDoubleExponent","x","sym","_t","staticStyle","resetSandbox","clear","_l","domProps","expr","_e","error","style","height","min","inputLines","nativeOn","_k","keyCode","evaluate","fromHistoryEvent","input","LinkedList","_first","_last","prev","_get","pop","cur","sep","toArray","LogList","capacity","_checkCapacity","Sandbox","iframe","document","createElement","display","body","appendChild","contentWindow","contentDocument","open","write","_eval","loadScript","eval","src","Promise","resolve","reject","onload","onerror","onreadystatechange","removeChild","inspect","util","compact","depth","_cache","_throwHas","sub","_assertHas","_typeToWireType","_checkType","tag","known","ignoreKnown","_assertType","_string","_buffer","deserializer","_message","_cached","clone","output","state","lengthDelimitedIndex","newFields","_processPacked"],"mappings":"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","file":"js/app.d26a6bcf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","const { TWO_TO_32 } = require('./constants')\nconst Long = require('long')\n\nclass LongBits {\n    constructor (lo, hi) {\n        this.lo = lo >>> 0\n        this.hi = hi >>> 0\n    }\n\n    toNumber (unsigned = false) {\n        if (!unsigned && this.hi >>> 31) {\n            let lo = ~this.lo + 1 >>> 0\n            let hi = ~this.hi >>> 0\n            if (!lo) {\n                hi = hi + 1 >>> 0\n            }\n            return -(lo + hi * TWO_TO_32)\n        }\n        return this.lo + this.hi * TWO_TO_32\n    }\n\n    toLong (unsigned) {\n        return new Long(this.lo, this.hi, unsigned)\n    }\n\n    zzEncode () {\n        let mask = this.hi >>> 31\n        this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\n        this.lo = (this.lo << 1 ^ mask) >>> 0\n        return this\n    }\n\n    zzDecode () {\n        let mask = -(this.lo & 1)\n        this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\n        this.hi = (this.hi >>> 1 ^ mask) >>> 0\n        return this\n    }\n\n    clone () {\n        return new LongBits(this.lo, this.hi)\n    }\n\n    static fromNumber (value) {\n        if (value === 0) {\n            return zero\n        }\n        let sign = value < 0\n        if (sign) {\n            value = -value\n        }\n        let lo = value >>> 0\n        let hi = (value - lo) / TWO_TO_32 >>> 0\n        if (sign) {\n            hi = ~hi >>> 0\n            lo = ~lo >>> 0\n            if (++lo > TWO_TO_32) {\n                lo = 0\n                if (++hi > TWO_TO_32) {\n                    hi = 0\n                }\n            }\n        }\n        return new LongBits(lo, hi)\n    }\n\n    static from (value) {\n        if (typeof value === 'number') {\n            return LongBits.fromNumber(value)\n        }\n        if (typeof value === 'string') {\n            value = Long.fromString(value)\n        }\n        if (value.low || value.high) {\n            return new LongBits(value.low >>> 0, value.high >>> 0)\n        } else if (value.lo || value.hi) {\n            return new LongBits(value.lo >>> 0, value.hi >>> 0)\n        } else {\n            return zero\n        }\n    }\n}\n\nconst zero = new LongBits(0, 0)\nzero.toNumber = () => 0\nzero.zzEncode = zero.zzDecode = function () { return this }\nzero.length = () => 1\n\nLongBits.zero = zero\n\nmodule.exports = LongBits\n","<template>\n    <div class=\"container\">\n        <h2 class=\"page-title\">Protoflex REPL</h2>\n        <div class=\"columns\">\n            <div class=\"column\" v-show=\"left\">\n                <b-tabs position=\"is-centered\">\n                    <b-tab-item icon=\"book-open-outline\" label=\"Parsing\">\n                        <b-field label=\"Protobuf data\">\n                            <b-input type=\"textarea\" class=\"is-family-monospace\" v-model=\"inputData\"/>\n                        </b-field>\n                        <b-field label=\"Parse as\">\n                            <div class=\"buttons\">\n                                <b-button @click=\"asHex\">Hex</b-button>\n                                <b-button @click=\"asB64\">Base64</b-button>\n                                <b-button @click=\"asRaw\">Raw</b-button>\n                            </div>\n                        </b-field>\n                    </b-tab-item>\n                    <b-tab-item icon=\"code-braces\" label=\"Serializing\">\n                        <b-button @click=\"jsonToPB\">To Protobuf message</b-button>\n                        <b-button @click=\"jsonToHex\">To Hex</b-button>\n                        <b-button @click=\"jsonToFile\">Download as binary</b-button>\n                        <Ace\n                                v-model=\"inputJson\"\n                                @init=\"aceInit\"\n                                lang=\"javascript\"\n                                theme=\"chrome\"\n                                class=\"json-input\"\n                                ref=\"editor\"\n                        />\n                    </b-tab-item>\n                </b-tabs>\n                <b-message type=\"is-info\">\n                    <b>Common</b>\n                    <p>You can use REPL without using left pane, Protoflex is in <code>PB</code> and utils are in <code>PB.utils</code></p>\n                    <b>Parsing</b>\n                    <p>Your object is in <code>$</code>, to get full info use <code>$.dump()</code></p>\n                    <b>Creating</b>\n                    <p>Code in editor is evaluated as JS, you can use stuff like <i>variables</i> and <i>functions</i>,\n                        and object is read from <code>$</code> variable</p>\n                    <p>To export your object: <code>$.toHex()</code>, <code>$.download()</code></p>\n                    <p><a href=\"/protoflex/api/\">Full API documentation</a></p>\n                </b-message>\n            </div>\n            <div class=\"column\">\n                <Repl ref=\"repl\" :globals=\"{ PB }\" :class=\"left ? '' : 'repl-full-width'\">\n                    <b-button class=\"hide-btn\" @click=\"left = !left\">{{left ? '< hide' : '> show'}}</b-button>\n                </Repl>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n// code is mess but idc\nimport Ace from 'vue2-ace-editor'\nimport PB from '../..'\n\nimport protoflexUtils from '../../utils'\nPB.utils = protoflexUtils\n\nimport Repl from './components/Repl'\nimport dumper from './output-dumper'\nimport { encode } from './base64-helper'\n\nlet download = (filename, buffer) => {\n    let el = document.createElement('a')\n    el.setAttribute('href', 'data:application/x-protobuf;base64,' + encode(buffer))\n    el.setAttribute('download', filename)\n\n    el.style.display = 'none'\n    document.body.appendChild(el)\n    el.click()\n    document.body.removeChild(el)\n}\n\nconst ellipsisMiddle = (s, len) => {\n    if (s.length <= len) return s\n    let l = (len - 3) / 2\n    return s.substring(0, l % 1 === 0 ? l : Math.round(l)) + '...' + s.substring(s.length - l)\n}\n\nexport default {\n    name: 'app',\n    components: {\n        Repl,\n        Ace,\n    },\n    data: () => ({\n        PB,\n        inputData: '',\n        inputJson: '$ = {\\n  \\n};',\n        left: true,\n    }),\n    methods: {\n        asHex () {\n            let it = {\n                expr: `$ = PB.fromHex('${ellipsisMiddle(this.inputData, 25)}')`,\n            }\n            this.$refs.repl.addResult(it)\n            try {\n                this.$refs.repl.sandbox.window.$ = PB.fromHex(this.inputData)\n            } catch (e) {\n                this.$set(it, 'error', e)\n            }\n        },\n        asB64 () {\n            let it = {\n                expr: `$ = parse('${ellipsisMiddle(this.inputData, 25)}')`,\n            }\n            this.$refs.repl.addResult(it)\n            try {\n                this.$refs.repl.sandbox.window.$ = PB.parse(PB.utils.toByteArray(atob(this.inputData)))\n            } catch (e) {\n                this.$set(it, 'error', e)\n            }\n        },\n        asRaw () {\n            let it = {\n                expr: `$ = parse('${ellipsisMiddle(this.inputData, 25)}')`,\n            }\n            this.$refs.repl.addResult(it)\n            try {\n                this.$refs.repl.sandbox.window.$ = PB.parse(PB.utils.toByteArray(this.inputData))\n            } catch (e) {\n                this.$set(it, 'error', e)\n            }\n        },\n        aceInit () {\n            require('brace/ext/language_tools')\n            require('brace/mode/javascript')\n            require('brace/theme/chrome')\n\n            this.$refs.editor.editor.session.setOptions({\n                tabSize: 2,\n            })\n        },\n        jsonToPB () {\n            let it = {\n                expr: `$ = PB.fromJson({...})`,\n            }\n            this.$refs.repl.addResult(it)\n\n            let $\n\n            try {\n                eval(this.inputJson)\n                if (!$) {\n                    throw Error('$ not found, please check if it is present in your code.')\n                }\n                this.$refs.repl.sandbox.window.$ = PB.fromJson($)\n            } catch (e) {\n                this.$set(it, 'error', e)\n            }\n        },\n        jsonToHex () {\n            let it = {\n                expr: `PB.fromJson({...}).toHex()`,\n            }\n            this.$refs.repl.addResult(it)\n\n            let $\n\n            try {\n                eval(this.inputJson)\n                if (!$) {\n                    throw Error('$ not found, please check if it is present in your code.')\n                }\n                let result = PB.fromJson($).toHex()\n                this.$set(it, 'result', JSON.stringify(result))\n            } catch (e) {\n                this.$set(it, 'error', e)\n            }\n        },\n        jsonToFile () {\n            let it = {\n                expr: `PB.fromJson({...}).download()`,\n            }\n            this.$refs.repl.addResult(it)\n\n            let $\n\n            try {\n                eval(this.inputJson)\n                if (!$) {\n                    throw Error('$ not found, please check if it is present in your code.')\n                }\n                PB.fromJson($).download()\n            } catch (e) {\n                this.$set(it, 'error', e)\n            }\n        }\n    },\n    watch: {\n        left (v) {\n            localStorage.left = v\n        }\n    },\n    mounted () {\n        PB.OutputMessage.prototype._dump = dumper._dump\n        PB.OutputMessage.prototype._dump_ = dumper.dump\n        const self = this\n        PB.OutputMessage.prototype.dump = function (h, i, s) {\n            self.$refs.repl.addResult({ console: true, html: PB.OutputMessage.prototype._dump_.call(this, true, i, s) })\n        }\n\n        PB.InputMessage.prototype.download = function (filename = 'protoflex.bin') {\n            download(filename, this.toWire())\n        }\n\n        if (!localStorage.left) {\n            localStorage.left = 'true'\n        }\n\n        this.left = localStorage.left === 'true'\n    },\n}\n</script>\n\n<style>\n@import url(dump.css);\n\n.page-title {\n    font-size: 21px;\n    font-weight: 500;\n    text-align: center;\n    border-bottom: 1px solid #dbdbdb;\n    margin: 8px 25%;\n    padding: 4px;\n}\n\n.is-family-monospace textarea, .is-family-monospace input {\n    font-family: monospace !important;\n}\n\n.json-input {\n    height: 50vh !important;\n    max-height: 50vh;\n    width: 35vw !important;\n    max-width: 35vw;\n\n    margin-top: 4px;\n}\n\n.hide-btn {\n    margin-right: 8px;\n}\n\n.repl-full-width {\n    width: 100%!important;\n    max-width: 100%!important;\n}\n</style>\n","const LongBits = require('./longbits')\n\nfunction lazyReadVarint () {\n    let offset = this.offset\n    while (this.data[this.offset++] & 0x80) {}\n    return offset\n}\n\nfunction readVarint (offset, data, length = data.length) {\n    let ret = new LongBits(0, 0)\n    let i = 0\n    if (length - offset > 4) {\n        for (; i < 4; ++i) {\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << 28) >>> 0\n        ret.hi = (ret.hi | (data[offset] & 0x7f) >> 4) >>> 0\n        if (data[offset++] < 0x80) {\n            return ret\n        }\n        i = 0\n    } else {\n        for (; i < 3; ++i) {\n            if (offset >= length) {\n                throw RangeError('Unexpected end while reading varint')\n            }\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\n        return ret\n    }\n    if (length - offset > 4) {\n        for (; i < 5; ++i) {\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n    } else {\n        for (; i < 5; ++i) {\n            if (offset >= length) {\n                throw RangeError('Unexpected end while reading varint')\n            }\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n    }\n    throw Error('Invalid varint encoding')\n}\n\nfunction fullyReadVarint () {\n    let offset = lazyReadVarint.call(this)\n    return readVarint(offset, this.data, this.length)\n}\n\nfunction readFixed32 () {\n    return this.data[this.offset++] |\n        this.data[this.offset++] << 8 |\n        this.data[this.offset++] << 16 |\n        this.data[this.offset++] << 24\n\n}\n\nfunction readFixed64 () {\n    let lo = readFixed32.call(this)\n    let hi = readFixed32.call(this)\n    return new LongBits(lo, hi)\n}\n\nfunction readLengthDelimited () {\n    let len = fullyReadVarint.call(this).toNumber(true)\n    let start = this.offset\n    return {\n        start,\n        end: this.offset += len,\n        length: len,\n    }\n}\n\nmodule.exports = {\n    readVarint,\n    readFixed32,\n    readFixed64,\n    readLengthDelimited,\n    lazyReadVarint,\n    fullyReadVarint,\n}\n","const Long = require('long')\nconst LongBits = require('./longbits')\n\nfunction writeNumberVarint (val) {\n    if (val === 0) {\n        this.data[this.pos] = val\n    }\n    if (val < 0) {\n        // filling 9 bytes\n        for (let i = 0; i < 9; i++) {\n            this.data[this.pos++] = (val & 0x7f) | 0x80\n            val >>= 7\n        }\n        // and 10th byte: sign\n        this.data[this.pos++] = 0x1\n    } else {\n        while (val > 127) {\n            this.data[this.pos++] = (val & 0x7f) | 0x80\n            val >>>= 7\n        }\n        this.data[this.pos++] = val\n    }\n}\n\nfunction writeLongVarint (val) {\n    if (val instanceof Long) {\n        val = LongBits.from(val)\n    }\n    while (val.hi) {\n        this.data[this.pos++] = val.lo & 127 | 128\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\n        val.hi >>>= 7\n    }\n    while (val.lo > 0x7f) {\n        this.data[this.pos++] = val.lo & 127 | 128\n        val.lo = val.lo >>> 7\n    }\n    this.data[this.pos++] = val.lo\n}\n\nfunction writeFixed32 (val) {\n    this.data[this.pos++] = val & 0xff\n    this.data[this.pos++] = val >>> 8 & 0xff\n    this.data[this.pos++] = val >>> 16 & 0xff\n    this.data[this.pos++] = val >>> 24 & 0xff\n}\n\nfunction writeFixed64 (val) {\n    let bits = LongBits.from(val)\n    writeFixed32.call(this, bits.lo)\n    writeFixed32.call(this, bits.hi)\n}\n\nfunction writeLengthDelimited (val) {\n    writeNumberVarint.call(this, val.length)\n    for (let i = 0; i < val.length; i++) {\n        this.data[this.pos++] = val[i]\n    }\n}\n\nmodule.exports = {\n    writeLongVarint,\n    writeNumberVarint,\n    writeFixed32,\n    writeFixed64,\n    writeLengthDelimited\n}\n","/* included so utils can be imported like require('protoflex/utils') */\n\nmodule.exports = require('./src/utils')\n","const {\n    WIRE_TYPES_NAMES,\n} = require('./constants')\nconst {\n    readFixed32,\n    readFixed64,\n    readLengthDelimited,\n    lazyReadVarint,\n    fullyReadVarint\n} = require('./readers')\n\nclass Deserializer {\n    constructor (data) {\n        if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n            data = new Uint8Array(data)\n        }\n        if (!(Array.isArray(data)\n            || (typeof Buffer !== 'undefined' && data instanceof Buffer)\n            || (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array)\n        )) {\n            throw Error('Input for deserializer must be an array/buffer')\n        }\n        this.data = data\n        this.offset = 0\n        this.length = data.length\n    }\n\n    parse () {\n        let ret = []\n        while (this.offset < this.length) {\n            const field = this._parseField()\n            ret.push(field)\n        }\n        if (this.offset > this.length) {\n            throw Error('Buffer exhausted')\n        }\n        return ret\n    }\n\n    _parseField () {\n        let header = this._parseHeader()\n        let type = header.type\n        let key = header.key\n        let start = this.offset\n        let func = {\n            0: lazyReadVarint,\n            1: readFixed64,\n            2: readLengthDelimited,\n            5: readFixed32,\n        }[type]\n        if (!func) {\n            throw Error('Unknown wire type: ' + type)\n        }\n        let value = func.call(this)\n        return {\n            key,\n            value,\n            type: WIRE_TYPES_NAMES[type],\n        }\n    }\n\n    _parseHeader () {\n        let value = fullyReadVarint.call(this).toNumber(true)\n\n        return {\n            type: value & 0x07,\n            key: value >> 3\n        }\n    }\n}\n\nmodule.exports = Deserializer\n","const VARINT_TYPES = [\n    'int32',\n    'int64',\n    'uint32',\n    'uint64',\n    'sint32',\n    'sint64',\n    'varint',\n    'bool',\n]\nconst PACKABLE_TYPES = [\n    ...VARINT_TYPES,\n    'fixed32',\n    'fixed64',\n    'sfixed32',\n    'sfixed64',\n    'double',\n    'float',\n]\n\nconst PROTOBUF_TYPES = [\n    'int32',\n    'int64',\n    'uint32',\n    'uint64',\n    'sint32',\n    'sint64',\n    'bool',\n    'fixed32',\n    'fixed64',\n    'sfixed32',\n    'sfixed64',\n    'bytes',\n    'string',\n    'message',\n    'double',\n    'float',\n]\n\nconst WIRE_TYPES = {\n    varint: 0,\n    fixed64: 1,\n    lengthDelimited: 2,\n    fixed32: 5,\n}\n\nconst WIRE_TYPES_NAMES = [\n    'varint',\n    'fixed64',\n    'lengthDelimited',\n    undefined,\n    undefined,\n    'fixed32',\n]\nconst DEFAULT_VALUES = {\n    int32: 0,\n    int64: 0,\n    uint32: 0,\n    uint64: 0,\n    sint32: 0,\n    sint64: 0,\n    bool: false,\n    fixed32: 0,\n    fixed64: 0,\n    sfixed32: 0,\n    sfixed64: 0,\n    bytes: '',\n    string: '',\n    message: null,\n    double: 0,\n    float: 0,\n}\n\n\nmodule.exports = {\n    TWO_TO_20: 1048576,\n    TWO_TO_23: 8388608,\n    TWO_TO_32: 4294967296,\n    TWO_TO_33: 8589934592,\n    TWO_TO_52: 4503599627370496,\n    TWO_TO_63: 9223372036854775808,\n    TWO_TO_64: 18446744073709551616,\n\n    VARINT_TYPES,\n    PACKABLE_TYPES,\n    WIRE_TYPES,\n    WIRE_TYPES_NAMES,\n    PROTOBUF_TYPES,\n    DEFAULT_VALUES,\n\n    MIN_UINT32: 0,\n    MAX_UINT32: 0xFFFFFFFF,\n    MIN_INT32: -0x80000000,\n    MAX_INT32: 0x7FFFFFFF,\n    MIN_INT64: '-9223372036854775808',\n    MAX_INT64: '9223372036854775807',\n    MIN_UINT64: 0,\n    MAX_UINT64: '18446744073709551615',\n    MAX_FLOAT: 3.4028234663852886e+38,\n    MIN_FLOAT: 1.1754943508222875e-38,\n    MIN_DOUBLE: 2.2250738585072014e-308,\n    MAX_DOUBLE: 1.7976931348623157e+308,\n}\n","function keyByMultiple (arr, key) {\n    let ret = {}\n    arr.forEach((v) => {\n        if (v[key] in ret) {\n            ret[v[key]].push(v)\n        } else {\n            ret[v[key]] = [v]\n        }\n    })\n    return ret\n}\n\n\nfunction toHex (ar) {\n    if (typeof ar === 'string') {\n        ar = toByteArray(ar)\n    }\n    let ret = ''\n    for (let i = 0; i < ar.length; i++) {\n        if (ar[i] > 255 || ar[i] < 0) throw RangeError(`${ar[i]} is not in range [0, 255]`)\n        let t = ar[i].toString(16)\n        ret += t.length > 1 ? t : '0' + t\n    }\n    return ret\n}\n\nfunction fromHex (str) {\n    if (str.length % 2 !== 0) throw Error('Invalid hex')\n    let ret = []\n    for (let i = 0, j = 0; j < str.length; i++, j += 2) {\n        let v = parseInt(str[j] + str[j + 1], 16)\n        if (isNaN(v)) {\n            throw Error('Invalid hex')\n        }\n        ret[i] = v\n    }\n    return ret\n}\n\nfunction toByteArray (str) {\n    let ret = []\n    let j = 0\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i)\n        if (c < 0x80) {\n            ret[j++] = c\n        } else if (c < 0x800) {\n            ret[j++] = 0xc0 | (c >> 6)\n            ret[j++] = 0x80 | (c & 0x3f)\n        } else if (c < 0xd800 || c >= 0xe000) {\n            ret[j++] = 0xe0 | (c >> 12)\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\n            ret[j++] = 0x80 | (c & 0x3f)\n        } else {\n            // pair\n            i++\n            c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff))\n\n            ret[j++] = 0xf0 | (c >> 18)\n            ret[j++] = 0x80 | ((c >> 12) & 0x3f)\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\n            ret[j++] = 0x80 | (c & 0x3f)\n        }\n    }\n    return ret\n}\n\nfunction fromByteArray (bytes, start = 0, end = bytes.length) {\n    if (!bytes) return ''\n    let out = []\n    let j = 0\n\n    for (let i = start; i < end; i++) {\n        let c1 = bytes[i]\n        if (c1 > 0xff) throw Error('Invalid byte array')\n\n        if (c1 < 0x80) {\n            out[j++] = String.fromCharCode(c1)\n        } else if (c1 > 0xbf && c1 < 0xe0) {\n            let c2 = bytes[++i]\n            out[j++] = String.fromCharCode(\n                (c1 & 0x1f) << 6 | c2 & 0x3f\n            )\n        } else if (c1 > 0xdf && c1 < 0xf0) {\n            let c2 = bytes[++i]\n            let c3 = bytes[++i]\n            out[j++] = String.fromCharCode((c1 & 0xf) << 12 | (c2 & 0x3f) << 6 | c3 & 0x3f)\n        } else {\n            // pair\n            let c2 = bytes[++i]\n            let c3 = bytes[++i]\n            let c4 = bytes[++i]\n            let u = (\n                (c1 & 0x07) << 18 |\n                (c2 & 0x3f) << 12 |\n                (c3 & 0x3f) << 6 |\n                (c4 & 0x3f)\n            ) - 0x10000\n            out[j++] = String.fromCharCode(0xd800 | (u >> 10))\n            out[j++] = String.fromCharCode(0xdc00 | (u & 0x3ff))\n\n        }\n    }\n\n    return out.join('')\n}\n\nmodule.exports = {\n    keyByMultiple,\n\n    toByteArray,\n    fromByteArray,\n    toHex,\n    fromHex\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('h2',{staticClass:\"page-title\"},[_vm._v(\"Protoflex REPL\")]),_c('div',{staticClass:\"columns\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.left),expression:\"left\"}],staticClass:\"column\"},[_c('b-tabs',{attrs:{\"position\":\"is-centered\"}},[_c('b-tab-item',{attrs:{\"icon\":\"book-open-outline\",\"label\":\"Parsing\"}},[_c('b-field',{attrs:{\"label\":\"Protobuf data\"}},[_c('b-input',{staticClass:\"is-family-monospace\",attrs:{\"type\":\"textarea\"},model:{value:(_vm.inputData),callback:function ($$v) {_vm.inputData=$$v},expression:\"inputData\"}})],1),_c('b-field',{attrs:{\"label\":\"Parse as\"}},[_c('div',{staticClass:\"buttons\"},[_c('b-button',{on:{\"click\":_vm.asHex}},[_vm._v(\"Hex\")]),_c('b-button',{on:{\"click\":_vm.asB64}},[_vm._v(\"Base64\")]),_c('b-button',{on:{\"click\":_vm.asRaw}},[_vm._v(\"Raw\")])],1)])],1),_c('b-tab-item',{attrs:{\"icon\":\"code-braces\",\"label\":\"Serializing\"}},[_c('b-button',{on:{\"click\":_vm.jsonToPB}},[_vm._v(\"To Protobuf message\")]),_c('b-button',{on:{\"click\":_vm.jsonToHex}},[_vm._v(\"To Hex\")]),_c('b-button',{on:{\"click\":_vm.jsonToFile}},[_vm._v(\"Download as binary\")]),_c('Ace',{ref:\"editor\",staticClass:\"json-input\",attrs:{\"lang\":\"javascript\",\"theme\":\"chrome\"},on:{\"init\":_vm.aceInit},model:{value:(_vm.inputJson),callback:function ($$v) {_vm.inputJson=$$v},expression:\"inputJson\"}})],1)],1),_c('b-message',{attrs:{\"type\":\"is-info\"}},[_c('b',[_vm._v(\"Common\")]),_c('p',[_vm._v(\"You can use REPL without using left pane, Protoflex is in \"),_c('code',[_vm._v(\"PB\")]),_vm._v(\" and utils are in \"),_c('code',[_vm._v(\"PB.utils\")])]),_c('b',[_vm._v(\"Parsing\")]),_c('p',[_vm._v(\"Your object is in \"),_c('code',[_vm._v(\"$\")]),_vm._v(\", to get full info use \"),_c('code',[_vm._v(\"$.dump()\")])]),_c('b',[_vm._v(\"Creating\")]),_c('p',[_vm._v(\"Code in editor is evaluated as JS, you can use stuff like \"),_c('i',[_vm._v(\"variables\")]),_vm._v(\" and \"),_c('i',[_vm._v(\"functions\")]),_vm._v(\", and object is read from \"),_c('code',[_vm._v(\"$\")]),_vm._v(\" variable\")]),_c('p',[_vm._v(\"To export your object: \"),_c('code',[_vm._v(\"$.toHex()\")]),_vm._v(\", \"),_c('code',[_vm._v(\"$.download()\")])]),_c('p',[_c('a',{attrs:{\"href\":\"/protoflex/api/\"}},[_vm._v(\"Full API documentation\")])])])],1),_c('div',{staticClass:\"column\"},[_c('Repl',{ref:\"repl\",class:_vm.left ? '' : 'repl-full-width',attrs:{\"globals\":{ PB: _vm.PB }}},[_c('b-button',{staticClass:\"hide-btn\",on:{\"click\":function($event){_vm.left = !_vm.left}}},[_vm._v(_vm._s(_vm.left ? '< hide' : '> show'))])],1)],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=02f75578&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport Buefy from 'buefy'\nimport 'buefy/dist/buefy.css'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/atom-one-light.css'\n\nVue.directive('hljs', {\n    deep: true,\n    bind: function (el, binding) {\n        // on first bind, highlight all targets\n        let targets = el.querySelectorAll('code')\n        targets.forEach((target) => {\n            // if a value is directly assigned to the directive, use this\n            // instead of the element content.\n            if (binding.value) {\n                target.textContent = binding.value\n            }\n            hljs.highlightBlock(target)\n        })\n    },\n    componentUpdated: function (el, binding) {\n        // after an update, re-fill the content and then highlight\n        let targets = el.querySelectorAll('code')\n        targets.forEach((target) => {\n            if (binding.value) {\n                target.textContent = binding.value\n                hljs.highlightBlock(target)\n            }\n        })\n    },\n})\n\nVue.use(Buefy)\n\n\nVue.config.productionTip = false\n\nnew Vue({\n    render: h => h(App),\n}).$mount('#app')\n","const {\n    writeNumberVarint,\n    writeLongVarint,\n    writeFixed64,\n    writeFixed32,\n    writeLengthDelimited\n} = require('./writers')\nconst { toByteArray } = require('./utils')\nconst { splitFloat, splitDouble } = require('./math')\nconst { WIRE_TYPES, VARINT_TYPES } = require('./constants')\nconst Long = require('long')\nconst LongBits = require('./longbits')\nconst writers = {\n    varint: writeLongVarint,\n    fixed32: writeFixed32,\n    fixed64: writeFixed64,\n    lengthDelimited: writeLengthDelimited,\n}\n\nclass Serializer {\n    constructor (msg) {\n        this.msg = msg\n        this.data = []\n        this.pos = 0\n    }\n\n    _getPrimitiveType (type) {\n        if (VARINT_TYPES.indexOf(type) > -1) {\n            return 'varint'\n        }\n        if (type === 'fixed32' || type === 'fixed64') {\n            return type\n        }\n        if (type === 'float' || type === 'sfixed32') {\n            return 'fixed32'\n        }\n        if (type === 'double' || type === 'sfixed64') {\n            return 'fixed64'\n        }\n        if (type === 'string' || type === 'bytes' || type === 'message') {\n            return 'lengthDelimited'\n        }\n        throw Error(`Can't find primitive for ${type}`)\n    }\n\n    _coerceTo (field, type) {\n        let value = field.value\n        if (type === 'lengthDelimited') {\n            switch (field.type) {\n            case 'message':\n                return new Serializer(value).run()\n            case 'string':\n                return toByteArray(value)\n            case 'bytes':\n            case 'lengthDelimited':\n                return field.value\n            default:\n                throw Error(`${field.type} cannot be coerced to ${type}`)\n            }\n        }\n        if (field.type === 'sint32' || field.type === 'sint64') {\n            return LongBits.from(value).zzEncode()\n        }\n        if (field.type === 'float') {\n            return splitFloat(value)\n        }\n        if (field.type === 'double') {\n            return splitDouble(value)\n        }\n        if (field.type === 'bool' && type === 'varint') {\n            return !!field.value\n        }\n        return field.value\n    }\n\n    _coerce (field) {\n        let type = this._getPrimitiveType(field.type)\n        return {\n            type,\n            value: this._coerceTo(field, type),\n        }\n    }\n\n    _preProcess () {\n        let ret = []\n        let packed = {}  // temp storage for further packing repeateds\n        let j = 0\n\n        for (let i in this.msg.fields) {\n            if (this.msg.fields.hasOwnProperty(i)) {\n                let vals = this.msg.fields[i]\n                for (let k = 0; k < vals.length; k++) {\n                    let field = vals[k]\n                    if (field === undefined) continue // sparse\n                    field = this._coerce(field)\n                    let { type, value } = field\n\n                    if (type === 'lengthDelimited' && value.length === 0) {\n                        // l-delim has 0 length, thus skipping.\n                        continue\n                    }\n\n                    if ((type === 'varint' || type === 'fixed32' || type === 'fixed64') && !this.msg._unpacked[i]) {\n                        // packing this boi\n                        if (!(i in packed)) {\n                            packed[i] = []\n                        }\n                        packed[i].push(field)\n                    } else {\n                        ret[j++] = {\n                            type,\n                            value,\n                            key: i\n                        }\n                    }\n                }\n            }\n        }\n\n        // second pass for packed\n        for (let i in packed) {\n            if (packed.hasOwnProperty(i)) {\n                if (packed[i].length > 1) {\n                    let obj = {\n                        data: [],\n                        pos: 0\n                    }\n                    for (let k = 0; k < packed[i].length; k++) {\n                        let { type, value } = packed[i][k]\n                        if (type === 'varint' && typeof value === 'number') {\n                            writeNumberVarint.call(obj, value)\n                        } else {\n                            let writer = writers[type]\n                            writer.call(obj, value)\n                        }\n                    }\n                    ret[j++] = {\n                        key: i,\n                        type: 'lengthDelimited',\n                        value: obj.data\n                    }\n                } else {\n                    let { type, value } = packed[i][0]\n                    ret[j++] = {\n                        type,\n                        value,\n                        key: i\n                    }\n                }\n            }\n        }\n\n        return ret\n    }\n\n    run () {\n        let preprocessed = this._preProcess()\n\n        for (let i = 0; i < preprocessed.length; i++) {\n            let { key, type, value } = preprocessed[i]\n\n            if (!value || value.length === 0) {\n                continue\n            }\n\n            // header\n            writeNumberVarint.call(this, key * 8 + WIRE_TYPES[type])\n\n            if (type === 'varint' && typeof value === 'number') {\n                writeNumberVarint.call(this, value)\n            } else {\n                let writer = writers[type]\n                writer.call(this, value)\n            }\n        }\n\n        return this.data\n    }\n}\n\nmodule.exports = Serializer\n","const Long = require('long')\nconst {\n    MIN_INT32,\n    MIN_INT64,\n    MIN_UINT32,\n    MIN_UINT64,\n    MAX_INT32,\n    MAX_INT64,\n    MAX_UINT32,\n    MAX_UINT64,\n} = require('./constants')\nconst Serializer = require('./serializer')\nconst ja = require('./json-api')\nconst { toHex } = require('./utils')\n\n/**\n * @class protoflex.InputMessage\n */\nclass InputMessage {\n    constructor () {\n        this.fields = {}\n        this._parent = null\n        this._unpacked = {}\n    }\n\n    has (key, index = 0) {\n        return key in this.fields && index in this.fields[key]\n    }\n\n    get (key, type = null, index = 0) {\n        if (!this.has(key)) {\n            throw Error(`Message does not have ${key}:${index}`)\n        }\n        if (typeof type === 'number' && index === 0) {\n            index = type\n            type = null\n        }\n        let it = this.fields[key][index]\n        if (type !== null && type !== it.type) {\n            throw Error(`${key}:${index} is not ${type}`)\n        } else {\n            return it.value\n        }\n    }\n\n    array (key, type = null) {\n        if (!this.has(key)) {\n            throw Error(`Message does not have ${key}`)\n        }\n\n        let ret = []\n        for (let i = 0; i < this.fields[key].length; i++) {\n            let it = this.fields[key][i]\n            if (it === undefined) {\n                ret[i] = undefined\n            } else if (type !== null && it.type !== type) {\n                throw Error(`${key}:${i} is not ${type}`)\n            } else {\n                ret[i] = it.value\n            }\n        }\n        return ret\n    }\n\n    iter (key, editable = false, type = null) {\n        if (!this.has(key)) {\n            throw Error(`Message does not have ${key}`)\n        }\n\n        let index = 0\n        let self = this\n        let length = self.fields[key].length\n\n        let ret = {\n            next() {\n                if (index >= length) {\n                    return { done: true, value: undefined }\n                }\n\n                if (self.fields[key].length !== length) {\n                    throw Error('Data size changed during iteration')\n                }\n                let typ = self.fields[key][index].type\n\n                if (type !== null && typ !== type) {\n                    throw Error(`${key}:${index} is not ${type}`)\n                }\n\n                let value\n                if (editable) {\n                    let ind = index\n\n                    value = {\n                        get() {\n                            return self.fields[key][ind].value\n                        },\n                        set(v) {\n                            self[typ](key, v, ind)\n                        }\n                    }\n                } else {\n                    value = self.fields[key][index].value\n                }\n\n                index += 1\n\n                return {\n                    value,\n                    done: false\n                }\n            }\n        }\n\n        if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n            ret[Symbol.iterator] = () => ret\n        }\n\n        return ret\n    }\n\n    clear (key = null, index = null) {\n        if (key === null) {\n            this.fields = {}\n        } else if (key in this.fields) {\n            if (index !== null) {\n                if (index < 0) {\n                    index = this.fields[key].length + index\n                }\n\n                if (index < 0 || index >= this.fields[key].length) {\n                    throw RangeError('Out of array bounds')\n                }\n\n                this.fields[key].splice(index, 1)\n            } else {\n                this.fields[key] = []\n            }\n        }\n        return this\n    }\n\n    append (key, value, type = null) {\n        if (!this.has(key)) {\n            if (type === null) {\n                throw Error('First item in array must have type set explicitly')\n            }\n            this._addField(key, 0, value, type)\n        } else {\n            let items = this.fields[key]\n            let last = items[items.length - 1]\n            if (type !== null && type !== last.type) {\n                throw Error(`Previous item(s) in array have type ${last.type}, not ${type}`)\n            }\n            if (type === null) type = last.type\n            this._addField(key, items.length, value, type)\n        }\n        return this\n    }\n\n    string (key, value, index = 0) {\n        this._addField(key, index, value + '', 'string')\n        return this\n    }\n\n    bytes (key, value, index = 0) {\n        if (Array.isArray(value) || (typeof Buffer !== 'undefined' && value instanceof Buffer)) {\n            this._addField(key, index, Array.from(value), 'bytes')\n            return this\n        }\n        throw Error(`${value ? value.constructor.name : value} cannot be cast to bytes.`)\n    }\n\n    bool (key, value, index = 0) {\n        this._addField(key, index, !!value, 'bool')\n        return this\n    }\n\n    float (key, value, index = 0) {\n        this._addField(key, index, value, 'float')\n        return this\n    }\n\n    double (key, value, index = 0) {\n        this._addField(key, index, value, 'double')\n        return this\n    }\n\n    fixed32 (key, value, index = 0) {\n        this._addField(key, index, value, 'fixed32')\n        return this\n    }\n\n    sfixed32 (key, value, index = 0) {\n        this._addField(key, index, value, 'sfixed32')\n        return this\n    }\n\n    fixed64 (key, value, index = 0) {\n        if (!(value instanceof Long)) {\n            value = Long.fromValue(value)\n        }\n        this._addField(key, index, value, 'fixed64')\n        return this\n    }\n\n    sfixed64 (key, value, index = 0) {\n        if (!(value instanceof Long)) {\n            value = Long.fromValue(value)\n        }\n        this._addField(key, index, value, 'sfixed64')\n        return this\n    }\n\n    message (key, index = 0) {\n        let msg = new InputMessage()\n        msg._parent = this\n        this._addField(key, index, msg, 'message')\n        return msg\n    }\n\n    parent () {\n        return this._parent\n    }\n\n    end () {\n        if (this._parent === null) {\n            throw Error('Root doesn\\'t have parent')\n        }\n        return this._parent\n    }\n\n    unpacked (...fields) {\n        for (let i = 0; i < fields.length; i++) {\n            if (Array.isArray(fields[i])) {\n                this.unpacked(...fields[i])\n            } else {\n                this._unpacked[fields[i]] = 1\n            }\n        }\n        return this\n    }\n\n    _addField (key, index, value, type) {\n        if (!(key in this.fields)) {\n            this.fields[key] = []\n        }\n        if (Array.isArray(value) && type !== 'bytes') {\n            if (index !== 0) {\n                throw Error('index != 0 when inserting multiple values')\n            }\n            this.fields[key] = value.map(it => ({\n                type,\n                value: it,\n            }))\n        } else {\n            this.fields[key][index] = {\n                value,\n                type,\n            }\n        }\n    }\n\n    toWire () {\n        return new Serializer(this).run()\n    }\n\n    serialize () {\n        return this.toWire()\n    }\n\n    toHex () {\n        return toHex(this.toWire())\n    }\n\n    toBuffer () {\n        if (typeof Buffer === 'undefined') {\n            throw Error('Buffer is not supported in current environment')\n        }\n        return Buffer.from(this.toWire())\n    }\n\n    toUint8Array () {\n        if (typeof Uint8Array === 'undefined') {\n            throw Error('Uint8Array is not supported in current environment')\n        }\n        return new Uint8Array(this.toWire())\n    }\n\n    toArrayBuffer () {\n        return this.toUint8Array().buffer\n    }\n\n    toJSON () {\n        return ja.inputToJson(this, InputMessage)\n    }\n}\n\n// varints\nInputMessage._varints = [\n    { name: 'int32', from: MIN_INT32, to: MAX_INT32 },\n    { name: 'int64', from: MIN_INT64, to: MAX_INT64, long: true },\n    { name: 'uint32', from: MIN_UINT32, to: MAX_UINT32 },\n    { name: 'uint64', from: MIN_UINT64, to: MAX_UINT64, long: true, unsigned: true },\n    { name: 'sint32', from: MIN_INT32, to: MAX_INT32 },\n    { name: 'sint64', from: MIN_INT64, to: MAX_INT64, long: true },\n]\n\nInputMessage._varints.forEach((item) => {\n    InputMessage.prototype[item.name] = function _addVarintField (key, value, index = 0) {\n        if (typeof value === 'bigint') {\n            value = value.toString(10)\n        }\n        if (typeof value === 'string') {\n            value = item.long ? Long.fromString(value, item.unsigned) : parseInt(value, 10)\n        }\n        if (item.long) {\n            if (!(value instanceof Long)) {\n                value = Long.fromNumber(value, item.unsigned)\n            }\n        } else if (value < item.from || value > item.to) {\n            throw RangeError(`${value} is outside ${item.name} range.`)\n        }\n        this._addField(key, index, value, item.name)\n        return this\n    }\n})\n\nif (typeof Symbol !== 'undefined') {\n    InputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = InputMessage.prototype.toJSON\n}\n\nmodule.exports = InputMessage\n","// source: https://gist.github.com/jonleighton/958841\n/*\nMIT LICENSE\nCopyright 2011 Jon Leighton\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nexport function encode(buffer) {\n    let base64    = ''\n    let encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\n    let bytes         = new Uint8Array(buffer)\n    let byteLength    = bytes.byteLength\n    let byteRemainder = byteLength % 3\n    let mainLength    = byteLength - byteRemainder\n\n    let a, b, c, d\n    let chunk\n\n    // Main loop deals with bytes in chunks of 3\n    for (let i = 0; i < mainLength; i = i + 3) {\n        // Combine the three bytes into a single integer\n        chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]\n\n        // Use bitmasks to extract 6-bit segments from the triplet\n        a = (chunk & 16515072) >> 18 // 16515072 = (2^6 - 1) << 18\n        b = (chunk & 258048)   >> 12 // 258048   = (2^6 - 1) << 12\n        c = (chunk & 4032)     >>  6 // 4032     = (2^6 - 1) << 6\n        d = chunk & 63               // 63       = 2^6 - 1\n\n        // Convert the raw binary segments to the appropriate ASCII encoding\n        base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]\n    }\n\n    // Deal with the remaining bytes and padding\n    if (byteRemainder === 1) {\n        chunk = bytes[mainLength]\n\n        a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2\n\n        // Set the 4 least significant bits to zero\n        b = (chunk & 3)   << 4 // 3   = 2^2 - 1\n\n        base64 += encodings[a] + encodings[b] + '=='\n    } else if (byteRemainder === 2) {\n        chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]\n\n        a = (chunk & 64512) >> 10 // 64512 = (2^6 - 1) << 10\n        b = (chunk & 1008)  >>  4 // 1008  = (2^6 - 1) << 4\n\n        // Set the 2 least significant bits to zero\n        c = (chunk & 15)    <<  2 // 15    = 2^4 - 1\n\n        base64 += encodings[a] + encodings[b] + encodings[c] + '='\n    }\n\n    return base64\n}\n\n\n","import Long from 'long'\n\nexport default {\n    _dump (html = false, indentSize = 2, indent = 0) {\n        let str = ''\n\n        let ind = (raw, ...args) => {\n            let s = ''\n            for (let i = 0; i < args.length; i++) {\n                s += raw[i] + args[i]\n            }\n            s += raw[raw.length - 1]\n\n            let spaces = ''\n            for (let i = 0; i < indent; i++) {\n                spaces += ' '\n            }\n\n            return s.split('\\n').map(i => spaces + i).join('\\n') + '\\n'\n        }\n\n        let tab = () => indent += indentSize\n        let stab = () => indent -= indentSize\n\n        if (html) {\n            str += ind`<div class=\"protoflex-dump\">`\n        }\n\n        for (let key in this.fields) {\n            if (this.fields.hasOwnProperty(key)) {\n                for (let index = 0; index < this.fields[key].length; index++) {\n                    if (html) {\n                        str +=\n                            ind`<div class=\"protoflex-dump-field\" data-type=${JSON.stringify(this.fields[key][index].type)}>`\n                    }\n                    let possibleTypes = key in this._knownFields\n                                        ? this._knownFields[key]\n                                        : DUMPER_POSSIBLE_TYPES[this.fields[key][index].type]\n\n                    if (this.fields[key][index].type === 'lengthDelimited' && this.fields[key][index].value.length\n                        === 0) {\n                        possibleTypes = ['string', 'bytes']\n                    }\n\n                    if (html) {\n                        str +=\n                            ind`<div class=\"protoflex-dump-header\">Field <span class=\"protoflex-dump-header__key\">${key}</span>, index <span class=\"protoflex-dump-header__index\">${index}</span>:</div>`\n                    } else {\n                        str += ind`Field ${key}, index ${index}:`\n                    }\n                    tab()\n                    if (html) {\n                        str +=\n                            ind`<div class=\"protoflex-dump-type\">(primitive: <span class=\"protoflex-dump-type__primitive\">${this.fields[key][index].type}</span>, possible types: <span class=\"protoflex-dump-type__possibles\">${possibleTypes.join(\n                                ', ')}</span>)</div>`\n                    } else {\n                        str +=\n                            ind`(primitive: ${this.fields[key][index].type}, possible types: ${possibleTypes.join(', ')})`\n                    }\n                    for (let i = 0; i < possibleTypes.length; i++) {\n                        let type = possibleTypes[i]\n                        if (type === 'packed') {\n                            let possiblePackedTypes = [].concat.apply([], DUMPER_POSSIBLE_TYPES.packed\n                                .filter(it => this.fields[key][index].value.length % it.div === 0)\n                                .map(i => i.types))\n                            if (!possiblePackedTypes.length) {\n                                if (html) {\n                                    str +=\n                                        ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">packed</span>: <span class=\"protoflex-dump-subtype__error\">nothing matches</span></div>`\n                                } else {\n                                    str += ind`as packed: nothing matches`\n\n                                }\n                                continue\n                            }\n\n                            if (html) {\n                                str +=\n                                    ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">packed</span>:`\n                            } else {\n                                str += ind`as packed:`\n                            }\n                            tab()\n\n                            if (html) {\n                                str +=\n                                    ind`<div class=\"protoflex-dump-type\">(possible: <span class=\"protoflex-dump-type__possibles\">${possiblePackedTypes.join(\n                                        ', ')}</span>)</div>`\n                            } else {\n                                str += ind`(possible: ${possiblePackedTypes.join(', ')})`\n                            }\n                            for (let j = 0; j < possiblePackedTypes.length; j++) {\n                                let ptype = possiblePackedTypes[j]\n\n                                let oldFields = this.fields[key]\n                                let s, err = false\n                                try {\n                                    this.repeated(key, ptype, index)\n                                    s = `[${this.array(key, ptype).join(', ')}]`\n                                } catch (e) {\n                                    s = e\n                                    err = true\n                                }\n\n                                if (html) {\n                                    str +=\n                                        ind`<div class=\"protoflex-dump-subtype\">as <span class=\"protoflex-dump-subtype__type\">${ptype}[]</span>: <div class=\"protoflex-dump-subtype__${err\n                                                                                                                                                                                       ? 'error'\n                                                                                                                                                                                       : 'value'}\">${s}</div></div>`\n                                } else {\n                                    str += ind`as ${ptype}[]: ${s}`\n                                }\n\n                                this.fields[key] = oldFields\n                            }\n                            stab()\n                            if (html) {\n                                str += ind`</div>`\n                            }\n                        } else {\n                            try {\n                                let res = this[type](key, index)\n                                if (type === 'message') {\n                                    res = '\\n' + res._dump(html, indentSize, indent)\n                                } else if (res instanceof Long || typeof res === 'bigint') {\n                                    res = res.toString()\n                                } else if (typeof res !== 'object') {\n                                    res = JSON.stringify(res)\n                                }\n                                if (html) {\n                                    str +=\n                                        ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">${type}</span>: <div class=\"protoflex-dump-subtype__value\">${res}</div></div>`\n                                } else {\n                                    str += ind`as ${type}: ${res}`\n                                }\n                            } catch (e) {\n                                if (html) {\n                                    str +=\n                                        ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">${type}</span>: <div class=\"protoflex-dump-subtype__error\">${e}</div></div>`\n                                } else {\n                                    str += ind`as ${type}: ${e}`\n                                }\n                            }\n                        }\n                    }\n                    stab()\n                    if (html) {\n                        str += ind`</div>`\n                    }\n                }\n            }\n        }\n\n        if (html) {\n            str += ind`</div>`\n        }\n\n        return str.trimEnd()\n    },\n\n    dump (html = 1, indentSize = 2, indent = 0) {\n        return this._dump(html, indentSize, indent)\n    },\n}\n\nconst DUMPER_POSSIBLE_TYPES = {\n    varint: ['int64', 'uint64', 'sint64'],\n    fixed32: ['fixed32', 'sfixed32', 'float'],\n    lengthDelimited: ['hex', 'string', 'message', 'packed'],\n    fixed64: ['fixed64', 'sfixed64', 'double'],\n    packed: [\n        { div: 1, types: ['int64', 'uint64', 'sint64'] },\n        { div: 4, types: ['fixed32', 'sfixed32', 'float'] },\n        { div: 8, types: ['fixed64', 'sfixed64', 'double'] },\n    ],\n}\n","const OutputMessage = require('./output-message')\nconst InputMessage = require('./input-message')\nconst Deserializer = require('./deserializer')\nconst ja = require('./json-api')\nconst utils = require('./utils')\n\nconst parse = v => new OutputMessage(v, new Deserializer(v).parse())\nconst create = () => new InputMessage()\n\nfunction _prepareJsonInput (ip, j) {\n    for (let key in j.fields) {\n        if (j.fields.hasOwnProperty(key)) {\n            for (let i = 0; i < j.fields[key].length; i++) {\n                if (j.fields[key][i].type === 'message') {\n                    let ip = new InputMessage()\n                    j.fields[key][i].value = _prepareJsonInput(ip, j.fields[key][i].value)\n                }\n            }\n        }\n    }\n\n    ip.unpacked(j.unpacked)\n    ip.fields = j.fields\n\n    return ip\n}\n\nconst fromJson = j => {\n    let ip = new InputMessage()\n    let data = ja.jsonToInput(j)\n    ip = _prepareJsonInput(ip, data)\n    return ip\n}\n\nconst fromHex = h => parse(utils.fromHex(h))\n\nmodule.exports = {\n    OutputMessage,\n    InputMessage,\n    parse,\n    fromHex,\n    create,\n    fromJson,\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=style&index=0&lang=css&\"","const Long = require('long')\nconst { PROTOBUF_TYPES, DEFAULT_VALUES } = require('./constants')\nconst { toByteArray, fromByteArray } = require('./utils')\nconst LongBits = require('./longbits')\n\nfunction inferTypeByValue (value) {\n    if (value === null || value === undefined || (typeof value === 'number' && isNaN(value))) {\n        return null\n    }\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\n        instanceof Uint8Array) {\n        return 'bytes'\n    }\n    if (Array.isArray(value)) {\n        return 'repeated'\n    }\n    if (typeof value === 'string') {\n        return 'string'\n    }\n    if (typeof value === 'number') {\n        return value % 1 === 0 ? 'int32' : 'float'\n    }\n    if (typeof value === 'bigint') {\n        return 'int64'\n    }\n    if (typeof value === 'boolean') {\n        return 'bool'\n    }\n    if (value.constructor.name === 'Object') {\n        for (let key in value) {\n            if (value.hasOwnProperty(key) && key !== 'unpacked') {\n                if (key === 'value') {\n                    return inferTypeByValue(value.value)\n                }\n                if (PROTOBUF_TYPES.indexOf(key) > -1) {\n                    return key\n                }\n                return 'message'\n            }\n        }\n        return 'message'\n    }\n    if (value instanceof Long) {\n        return value.unsigned ? 'uint64' : 'int64'\n    }\n    return null\n}\n\nfunction _coerceInputTo (value, type) {\n    if (type === 'message') {\n        return jsonToInput(value)\n    }\n    if (type === 'repeated') {\n        let ret = []\n        for (let p = 0; p < value.length; p++) {\n            let val = value[p]\n            let type = inferTypeByValue(val)\n            if (val && val.constructor.name === 'Object' && type !== 'message') {\n                val = val[type]\n            }\n            ret[p] = {\n                type,\n                value: _coerceInputTo(val, type),\n            }\n        }\n        return ret\n    }\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\n        instanceof Uint8Array) {\n        return Array.from(value)\n    }\n    if ((type === 'int64' || type === 'uint64' || type === 'sint64' || type === 'fixed64') && !(value\n        instanceof Long)) {\n        return typeof value === 'number' ? Long.fromNumber(value, type === 'uint64') :\n               typeof value === 'bigint' ?\n               Long.fromString(value.toString(), type === 'uint64') :\n               Long.fromString(value, type === 'uint64')\n    }\n    if (type === 'int32' || type === 'uint32' || type === 'sint32' || type === 'fixed32') {\n        return parseInt(value)\n    }\n    if (type === 'bytes') {\n        if (!Array.isArray(value)) {\n            return toByteArray(value)\n        }\n        return value\n    }\n    if (type === 'string') {\n        if (Array.isArray(value)) {\n            return fromByteArray(value)\n        }\n        return value\n    }\n    if (value && value.constructor.name === 'Object' && type !== 'message') {\n        return value[type]\n    }\n    return value\n}\n\nfunction jsonToInput (json) {\n    if (typeof json === 'string') {\n        json = JSON.parse(json)\n    }\n\n    let ret = {}\n    let unpacked = []\n\n    for (let j in json) {\n        if (json.hasOwnProperty(j)) {\n            if (!isNaN(parseInt(j))) {\n                if (!ret[j]) {\n                    ret[j] = []\n                }\n                let type = inferTypeByValue(json[j])\n                if (type === null) continue\n                let value = json[j]\n                if (value && value.constructor.name === 'Object' && type !== 'message') {\n                    if (value.unpacked) {\n                        unpacked[unpacked.length] = j\n                    }\n                    value = 'value' in value ? value.value : value[type]\n                }\n\n                value = _coerceInputTo(value, type)\n\n                if (type === 'repeated') {\n                    for (let i = 0; i < value.length; i++) {\n                        ret[j][ret[j].length] = value[i]\n                    }\n                } else {\n                    ret[j][ret[j].length] = {\n                        type,\n                        value,\n                    }\n                }\n            }\n        }\n    }\n\n    return {\n        fields: ret,\n        unpacked,\n    }\n}\n\nfunction inputToJson (msg, constructor) {\n    let ret = {}\n    let fields = msg.fields\n\n    for (let key in fields) {\n        if (fields.hasOwnProperty(key)) {\n            if (!ret[key]) {\n                ret[key] = []\n            }\n\n            for (let index = 0; index < fields[key].length; index++) {\n                let field = fields[key][index]\n                if (field === undefined) continue // sparse\n\n                let value = field.value\n\n                if (value instanceof Long) {\n                    value = value.toString()\n                }\n\n                if (value instanceof constructor) {\n                    value = inputToJson(value, constructor)\n                }\n\n                let itype = inferTypeByValue(value)\n\n                if (itype !== field.type) {\n                    value = {\n                        [field.type]: value\n                    }\n                }\n\n                ret[key][ret[key].length] = value\n            }\n        }\n    }\n\n    for (let key in ret) {\n        if (ret.hasOwnProperty(key)) {\n            if (ret[key].length === 1) {\n                ret[key] = ret[key][0]\n            } else if (msg._unpacked[key]) {\n                ret[key] = {\n                    unpacked: true,\n                    value: ret[key],\n                }\n            }\n        }\n    }\n\n    return ret\n}\n\nfunction outputToJson (msg) {\n    let ret = {}\n    let fields = msg.fields\n\n    for (let key in fields) {\n        if (fields.hasOwnProperty(key)) {\n            if (!ret[key]) {\n                ret[key] = []\n            }\n            for (let i = 0; i < fields[key].length; i++) {\n                let f = fields[key][i]\n                let v = f.value\n                if (f.type === 'lengthDelimited') {\n                    v = msg.data.slice(v.start, v.end)\n                    try {\n                        v = outputToJson(msg.message(key, i))\n                    } catch (e) {\n                        v = fromByteArray(v)\n                    }\n                }\n                if (f.type === 'varint') {\n                    v = msg._varint(key, i)\n                }\n                if (v instanceof LongBits) {\n                    v = v.toLong().toString()\n                }\n\n                ret[key][ret[key].length] = v\n            }\n        }\n    }\n\n    for (let key in msg._knownFields) {\n        if (msg._knownFields.hasOwnProperty(key) && msg._knownFields[key].length) {\n            let typ = msg._knownFields[key][0]\n            if (!(key in ret)) {\n                let val = DEFAULT_VALUES[typ]\n                if (typeof val === 'number') val += ''\n                if (val instanceof LongBits) val = val.toLong()\n                if (val instanceof Long) val = val.toString()\n                ret[key] = [val]\n            }\n        }\n    }\n\n    for (let key in ret) {\n        if (ret.hasOwnProperty(key) && ret[key].length === 1) {\n            ret[key] = ret[key][0]\n        }\n    }\n    return ret\n}\n\nmodule.exports = {\n    jsonToInput,\n    outputToJson,\n    inputToJson,\n}\n","const { TWO_TO_52, TWO_TO_32, TWO_TO_23, TWO_TO_20, MIN_FLOAT, MAX_FLOAT, MIN_DOUBLE, MAX_DOUBLE } = require('./constants')\n\nfunction zigZagDecode (val, isBigint = false) {\n    if (!isBigint) {\n        return val & 0x1 ? (val >> 1) ^ (~0) : val >> 1\n    }\n    return val.and(0x1) ? val.shiftRight(1).xor(~0) : val.shiftRight(1)\n}\n\nfunction joinDouble (lo, hi) {\n    let sign = (hi >> 31) * 2 + 1\n    let exp = (hi >> 20) & 0x7ff\n    let mant = TWO_TO_32 * (hi & 0xfffff) + lo\n\n    if (exp === 0x7ff) {\n        if (mant) {\n            return NaN\n        } else {\n            return sign * Infinity\n        }\n    }\n\n    if (exp === 0) {\n        return sign * Math.pow(2, -1074) * mant\n    } else {\n        return sign * Math.pow(2, exp - 1075) * (mant + TWO_TO_52)\n    }\n}\n\nfunction joinFloat (lo) {\n    let sign = (lo >> 31) * 2 + 1\n    let exp = (lo >> 23) & 0x7ff\n    let mant = lo & 0x7fffff\n\n    if (exp === 0xff) {\n        if (mant) {\n            return NaN\n        } else {\n            return sign * Infinity\n        }\n    }\n\n    if (exp === 0) {\n        return sign * Math.pow(2, -149) * mant\n    } else {\n        return sign * Math.pow(2, exp - 150) * (mant + TWO_TO_23)\n    }\n}\n\nfunction splitFloat (value) {\n    let sign = value < 0 ? 1 : 0\n    if (sign) {\n        value = -value\n    }\n    let exp\n    let mant\n\n    if (value === 0) {\n        return 1 / value < 0 ? 0x80000000 : 0\n    }\n\n    if (isNaN(value)) {\n        return 0x7FFFFFFF\n    }\n\n    if (value > MAX_FLOAT) {\n        return ((sign << 31) | (0x7F800000)) >>> 0\n    }\n\n    if (value < MIN_FLOAT) {\n        mant = Math.round(value / Math.pow(2, -149))\n        return ((sign << 31) | mant) >>> 0\n    }\n\n    exp = Math.floor(Math.log(value) / Math.LN2)\n    mant = value * Math.pow(2, -exp)\n    mant = Math.round(mant * TWO_TO_23) & 0x7FFFFF\n\n    return ((sign << 31) | ((exp + 127) << 23) | mant) >>> 0\n}\n\nfunction splitDouble (value) {\n    let sign = value < 0 ? 1 : 0\n    if (sign) {\n        value = -value\n    }\n    let exp\n    let mant\n    let mantHigh\n    let mantLow\n\n    if (value === 0) {\n        return { hi: 1 / value < 0 ? 0x80000000 : 0, lo: 0 }\n    }\n\n    if (isNaN(value)) {\n        return { hi: 0x7FFFFFFF, lo: 0xFFFFFFFF }\n    }\n\n    if (value > MAX_DOUBLE) {\n        return { hi: ((sign << 31) | (0x7FF00000)) >>> 0, lo: 0 }\n    }\n\n    if (value < MIN_DOUBLE) {\n        mant = value / Math.pow(2, -149)\n        mantHigh = value / TWO_TO_32\n        return {\n            hi: ((sign << 31) | mantHigh) >>> 0,\n            lo: mant >>> 0,\n        }\n    }\n\n    let maxDoubleExponent = 1023\n    let minDoubleExponent = -1022\n    let x = value\n    exp = 0\n    if (x >= 2) {\n        while (x >= 2 && exp < maxDoubleExponent) {\n            exp++\n            x = x / 2\n        }\n    } else {\n        while (x < 1 && exp > minDoubleExponent) {\n            x = x * 2\n            exp--\n        }\n    }\n    mant = value * Math.pow(2, -exp)\n\n    mantHigh = (mant * TWO_TO_20) & 0xFFFFF\n    mantLow = (mant * TWO_TO_52) >>> 0\n\n    return {\n        hi: ((sign << 31) | ((exp + 1023) << 20) | mantHigh) >>> 0,\n        lo: mantLow\n    }\n}\n\nmodule.exports = {\n    splitDouble,\n    splitFloat,\n    joinDouble,\n    joinFloat,\n    zigZagDecode,\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"output\",staticClass:\"repl-output\"},[_c('div',{staticClass:\"repl-header level\"},[_c('div',{staticClass:\"level-left\"},[_vm._t(\"default\"),_c('h2',[_vm._v(\"Output\")])],2),_c('div',{staticClass:\"level-right\"},[_c('b-button',{staticStyle:{\"margin-right\":\"4px\"},attrs:{\"icon-right\":\"backup-restore\"},on:{\"click\":_vm.resetSandbox}}),_c('b-button',{attrs:{\"icon-right\":\"broom\"},on:{\"click\":_vm.clear}})],1)]),_c('div',{staticClass:\"repl-history\"},_vm._l((_vm.items),function(it,i){return _c('div',{key:i,staticClass:\"repl-history-item\"},[(it.console)?_c('div',{staticClass:\"repl-history-item__console\",domProps:{\"innerHTML\":_vm._s(it.html)}}):_c('pre',{directives:[{name:\"hljs\",rawName:\"v-hljs\"}],staticClass:\"repl-history-item__code\"},[_c('code',{staticClass:\"javascript\"},[_vm._v(_vm._s(it.expr))])]),('result' in it)?_c('b-message',{staticClass:\"is-family-monospace repl-history-item__response\"},[_c('pre',{directives:[{name:\"hljs\",rawName:\"v-hljs\"}]},[_c('code',{staticClass:\"javascript\"},[_vm._v(_vm._s(it.result))])])]):_vm._e(),('error' in it)?_c('b-message',{staticClass:\"is-family-monospace repl-history-item__error\",attrs:{\"type\":\"is-danger\"}},[_c('pre',[_c('code',[_vm._v(_vm._s(it.error))])])]):_vm._e()],1)}),0),(_vm.items.length)?_c('div',{staticClass:\"repl-spacer\"}):_c('div',{staticClass:\"repl-placeholder\"},[_c('h1',[_vm._v(\"🐓\")]),_c('h2',[_vm._v(\"Nothing here but us chickens.\")])]),_c('div',{staticClass:\"repl-input\"},[_c('b-field',[_c('b-input',{staticClass:\"is-expanded is-family-monospace repl-input__field\",style:({ height: 48 + Math.min(_vm.inputLines * 24, 192) + 'px' }),attrs:{\"type\":\"textarea\"},nativeOn:{\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.evaluate($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"])){ return null; }return _vm.fromHistoryEvent($event, 1)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"])){ return null; }return _vm.fromHistoryEvent($event, -1)}]},model:{value:(_vm.input),callback:function ($$v) {_vm.input=$$v},expression:\"input\"}}),_c('p',{staticClass:\"control\"},[_c('b-button',{attrs:{\"icon-right\":\"send\",\"disabled\":this.input.length === 0},on:{\"click\":_vm.evaluate}})],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import util from 'util'\n\nlet sym\n\nif (typeof Symbol !== 'undefined') {\n    sym = Symbol.for('nodejs.util.inspect.custom')\n}\n\nexport default function inspect (obj) {\n    if (typeof obj === 'object' && 'toJSON' in obj) {\n        obj = obj.toJSON()\n    }\n    if (sym && obj[sym]) {\n        obj = obj[sym]()\n    }\n    return typeof obj === 'string' ? obj : util.inspect(obj, { compact: false, depth: Infinity })\n}\n","export class LinkedList {\n    constructor () {\n        this._first = null\n        this._last = null\n        this.length = 0\n    }\n\n    push (item) {\n        let value = {\n            prev: null,\n            next: null,\n            value: item,\n        }\n\n        if (this._first === null) {\n            this._first = this._last = value\n        } else {\n            value.prev = this._last\n            this._last.next = this._last = value\n        }\n        this.length++\n    }\n\n    pop (index = this.length - 1) {\n        if (index < 0 || index >= this.length) return undefined\n        let ret\n        if (index === 0) {\n            ret = this._first\n            this._first = this._first.next\n            this._first.prev = null\n        } else if (index === this.length - 1) {\n            ret = this._last\n            this._last = this._last.prev\n            this._last.prev = null\n        } else {\n            ret = this._get(index)\n            let prev = ret.prev\n            let next = ret.next\n\n            prev.next = next\n            next.prev = prev\n        }\n\n        this.length -= 1\n\n        return ret.value\n    }\n\n    shift () {\n        return this.pop(0)\n    }\n\n    unshift (item) {\n        let value = {\n            prev: null,\n            next: null,\n            value: item,\n        }\n\n        if (this._first === null) {\n            this._first = this._last = value\n        } else {\n            value.next = this._first\n            this._first.prev = this._first = value\n        }\n\n        this.length++\n    }\n\n    _get (index) {\n        index = parseInt(index)\n        if (index === undefined || isNaN(index)) return {}\n        if (index === 0) {\n            return this._first\n        }\n        if (index === this.length - 1) {\n            return this._last\n        }\n        if (index >= this.length) {\n            return {}\n        }\n\n        if (index < this.length / 2) {\n            let cur = this._first\n            for (let i = 0; i < index; i++) {\n                cur = cur.next\n            }\n            return cur\n        } else {\n            let cur = this._last\n            for (let i = 0; i < this.length - index - 1; i++) {\n                cur = cur.prev\n            }\n            return cur\n        }\n    }\n\n    toArray () {\n        if (this.length === 0) {\n            return []\n        }\n        let cur = this._first\n        let r = [cur.value]\n        while (cur.next !== null) {\n            r[r.length] = cur.next.value\n            cur = cur.next\n        }\n        return r\n    }\n\n    join (sep) {\n        return this.toArray().join(sep)\n    }\n\n    toString () {\n        return this.toArray().toString()\n    }\n\n    get (index) {\n        return this._get(index).value\n    }\n\n    last () {\n        return this._last.value\n    }\n\n    first () {\n        return this._first.value\n    }\n\n    clear () {\n        this._first = null\n        this._last = null\n        // and let GC do its work\n\n        this.length = 0\n    }\n}\n\nexport class LogList extends LinkedList {\n    constructor (capacity = 50) {\n        super()\n\n        this.capacity = capacity\n    }\n\n    unshift (item) {\n        super.unshift(item)\n        this._checkCapacity()\n    }\n\n    push (item) {\n        throw Error('cant be used')\n    }\n\n    pop (item) {\n        throw Error('cant be used')\n    }\n\n    shift (item) {\n        throw Error('cant be used')\n    }\n\n    _checkCapacity () {\n        while (this.length > this.capacity) {\n            // removing first element\n            this._first = this._first.next\n            this._first.prev = null\n        }\n    }\n}\n","class Sandbox {\n    constructor () {\n        this.iframe = document.createElement('iframe')\n        this.iframe.style.display = 'none'\n        document.body.appendChild(this.iframe)\n\n        this.window = this.iframe.contentWindow\n        this.document = this.iframe.contentDocument\n\n        this.document.open()\n        this.document.write(`<script>var MSIE/*@cc_on =1@*/;_e=MSIE?this:{eval:function(s){return window.eval(s)}}</script>`)\n        this._eval = this.window._e\n        delete this.window._e\n\n        this.window.loadScript = this.loadScript\n    }\n\n    evaluate (expr) {\n        return this._eval.eval(expr)\n    }\n\n    loadScript (src) {\n        return new Promise((resolve, reject) => {\n            this.evaluate(`_s = document.createElement('script');_s.setAttribute('type','text/javascript');_s.setAttribute('src',${JSON.stringify(src)}`)\n            this.window._s.onload = resolve\n            this.window._s.onerror = reject\n            this.window._s.onreadystatechange = (s) => {\n                if (this.window._s === 'complete' || this.window._s === 'loaded') {\n                    resolve()\n                }\n            }\n            this.evaluate('document.getElementsByTagName(\\'head\\')[0].appendChild(_s);delete _s;')\n        })\n    }\n\n    dispose () {\n        document.body.removeChild(this.iframe)\n    }\n}\n\n\nexport default Sandbox\n","<template>\n    <div class=\"repl-output\" ref=\"output\">\n        <div class=\"repl-header level\">\n            <div class=\"level-left\">\n                <slot/>\n                <h2>Output</h2>\n            </div>\n            <div class=\"level-right\">\n                <b-button icon-right=\"backup-restore\" style=\"margin-right: 4px\" @click=\"resetSandbox\"/>\n                <b-button icon-right=\"broom\" @click=\"clear\"/>\n            </div>\n        </div>\n        <div class=\"repl-history\">\n            <div class=\"repl-history-item\" v-for=\"(it, i) in items\" :key=\"i\">\n                <div class=\"repl-history-item__console\" v-if=\"it.console\" v-html=\"it.html\"></div>\n                <pre class=\"repl-history-item__code\" v-hljs v-else><code class=\"javascript\">{{it.expr}}</code></pre>\n                <b-message class=\"is-family-monospace repl-history-item__response\" v-if=\"'result' in it\">\n                    <pre v-hljs><code class=\"javascript\">{{it.result}}</code></pre>\n                </b-message>\n                <b-message type=\"is-danger\" class=\"is-family-monospace repl-history-item__error\" v-if=\"'error' in it\">\n                    <pre><code>{{it.error}}</code></pre>\n                </b-message>\n            </div>\n        </div>\n        <div class=\"repl-spacer\" v-if=\"items.length\"></div>\n        <div class=\"repl-placeholder\" v-else>\n            <h1>🐓</h1>\n            <h2>Nothing here but us chickens.</h2>\n        </div>\n        <div class=\"repl-input\">\n            <b-field>\n                <b-input\n                        class=\"is-expanded is-family-monospace repl-input__field\"\n                        @keydown.native.enter=\"evaluate\"\n                        @keydown.native.up=\"fromHistoryEvent($event, 1)\"\n                        @keydown.native.down=\"fromHistoryEvent($event, -1)\"\n                        v-model=\"input\"\n                        type=\"textarea\"\n                        :style=\"{ height: 48 + Math.min(inputLines * 24, 192) + 'px' }\"\n                />\n                <p class=\"control\">\n                    <b-button icon-right=\"send\" @click=\"evaluate\" :disabled=\"this.input.length === 0\"/>\n                </p>\n            </b-field>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { LogList } from '../collections'\nimport Sandbox from '../sandbox'\nimport inspect from '../inspect'\n\nexport default {\n    name: 'Repl',\n    props: {\n        globals: {\n            type: Object,\n            default: () => ({}),\n        },\n    },\n    data: () => ({\n        items: [],\n        input: '',\n        inputLines: 0,\n        history: new LogList(),\n        historyPosition: -1,\n\n        sandbox: null,\n    }),\n    methods: {\n        resetSandbox () {\n            this.sandbox = new Sandbox()\n            Object.assign(this.sandbox.window, this.globals)\n            const self = this\n            this.sandbox.window.console = {\n                log (...args) {\n                    let str = args.map(i => inspect(i))\n\n                    self.addResult({\n                        console: true,\n                        html: `<pre><code>${str.join(' ')}</code></pre>`,\n                    })\n                },\n            }\n            this.sandbox.window.clear = this.clear.bind(this)\n            this.clear()\n        },\n        clear () {\n            this.items = []\n        },\n        evaluate (ev) {\n            if (!(ev && (ev.shiftKey || ev.ctrlKey)) && this.input.length) {\n                if (ev) {\n                    ev.preventDefault()\n                    ev.stopPropagation()\n                }\n\n                this.runCode(this.input)\n\n\n                this.history.unshift(this.input)\n                this.historyPosition = -1\n                this.input = ''\n\n                setTimeout(() => this.$refs.output.scrollTop = this.$refs.output.scrollHeight, 10)\n            }\n        },\n        runCode (expr) {\n            let item = {\n                expr,\n            }\n            this.addResult(item)\n\n            try {\n                let res = this.sandbox.evaluate(expr)\n                if (res) {\n                    this.$set(item, 'result', inspect(res))\n                }\n                this.sandbox.window.$_ = res\n            } catch (e) {\n                this.$set(item, 'error', e)\n            }\n        },\n        addResult (res) {\n            this.items.push(res)\n        },\n        fromHistoryEvent (ev, delta) {\n            // need to get current caret line.\n            let line = ev.target.value.substr(0, ev.target.selectionStart).split('\\n').length - 1\n            if (line === 0 && delta > 0 || line === this.inputLines && delta < 0) {\n                this.fromHistory(delta)\n            }\n        },\n        fromHistory (delta) {\n            if (this.historyPosition >= this.history.length - 1 && delta > 0 || this.historyPosition === -1 && delta\n                < 0) {\n                return\n            }\n            this.historyPosition += delta\n            if (this.historyPosition <= -1) {\n                this.historyPosition = -1\n                this.input = ''\n            } else {\n                this.input = this.history.get(this.historyPosition)\n            }\n        },\n    },\n    watch: {\n        input (v) {\n            let i = v.match(/\\n/g)\n            this.inputLines = (i || []).length\n        },\n    },\n    mounted () {\n        this.resetSandbox()\n    },\n}\n</script>\n\n<style>\n.repl-output {\n    background: #ededed;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid #dbdbdb;\n    border-radius: 4px;\n    height: 85vh;\n    max-height: 85vh;\n    width: 45vw;\n    max-width: 45vw;\n    overflow: auto;\n    position: relative;\n}\n\n.repl-output pre {\n    padding: 8px;\n}\n\n.repl-spacer {\n    flex-grow: 1;\n}\n\n.repl-header.level {\n    margin: 0 !important;\n    padding: 8px 16px;\n    border-bottom: 1px solid #dbdbdb;\n    position: sticky;\n    background: #fff;\n    top: 0;\n    left: 0;\n    right: 0;\n    box-shadow: 0 1px 8px -1px #555;\n}\n\n.repl-input {\n    position: sticky;\n    background: #fff;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    border-top: 1px solid #dbdbdb;\n    box-shadow: 0 -1px 8px -1px #555;\n}\n\n.repl-input textarea, .repl-input button {\n    border: none !important;\n    outline: none !important;\n    box-shadow: none !important;\n    height: 48px;\n    min-height: 48px !important;\n    max-height: 384px !important;\n\n    background: #fff;\n}\n\n.repl-input button {\n    width: 48px;\n}\n\n.repl-history-item pre {\n    background: transparent !important;\n    font-size: 14px;\n    color: #010101;\n}\n\n.repl-history-item .message {\n    margin: 4px !important;\n}\n\n.repl-history-item .message-body {\n    padding: 8px;\n    overflow-y: auto;\n    max-width: 100%;\n}\n\n.repl-placeholder {\n    flex-grow: 1;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    flex-direction: column;\n\n    color: #000000;\n    font-size: 24px;\n}\n\n.repl-history-item {\n    border-bottom: 1px solid #dbdbdb;\n    padding: 4px 0;\n    background-color: #fdfdfd;\n}\n\n.repl-history-item__code {\n    background-color: #fdfdfd;\n}\n\n.repl-history-item:first-child {\n    padding-top: 12px;\n}\n\n.repl-input__field textarea {\n    resize: none;\n    height: 100%;\n    word-break: keep-all;\n    white-space: nowrap;\n    overflow: auto;\n}\n\n.hljs {\n    background: transparent !important;\n    padding: 0 !important;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Repl.vue?vue&type=template&id=2cbd16a9&\"\nimport script from \"./Repl.vue?vue&type=script&lang=js&\"\nexport * from \"./Repl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Repl.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const {\n    joinDouble,\n    joinFloat,\n    zigZagDecode,\n} = require('./math')\nconst {\n    keyByMultiple,\n    fromByteArray,\n    toHex,\n} = require('./utils')\nconst {\n    VARINT_TYPES,\n    PACKABLE_TYPES,\n} = require('./constants')\nconst {\n    readVarint,\n    readFixed32,\n    readFixed64,\n    lazyReadVarint,\n} = require('./readers')\nconst Deserializer = require('./deserializer')\nconst LongBits = require('./longbits')\nconst Long = require('long')\nconst { outputToJson } = require('./json-api')\n\nclass OutputMessage {\n    constructor (data, fields = []) {\n        this.data = data\n        this.fields = keyByMultiple(fields, 'key')\n        this._cache = {}\n        this._knownFields = {}\n    }\n\n    _assertHas (key, index = 0) {\n        let has = this.has(key, index)\n        if (!has) {\n            this._throwHas(key, index)\n        }\n        return has\n    }\n\n    _checkType (key, index, type, sub = false) {\n        this._assertHas(key, index)\n        // check for sub type\n        if (sub) {\n            if (key in this._knownFields &&\n                (this._knownFields[key].indexOf('any') > -1 || this._knownFields[key].indexOf(type) > -1)\n            ) {\n                return true\n            } else {\n                return key in this._knownFields ? this._knownFields[key].indexOf(type) > -1 : true\n            }\n        }\n        return type === this._typeToWireType(this.type(key, index))\n\n    }\n\n    _assertType (key, index, type, sub = false) {\n        if (!this._checkType(key, index, type, sub)) {\n            throw Error(`Field ${key} is not of type ${type}`)\n        }\n        return true\n    }\n\n    _cached (func, key, index, getter) {\n        let tag = `${func}(${key};${index})`\n        if (!(tag in this._cache)) {\n            this._cache[tag] = getter()\n        }\n        return this._cache[tag]\n    }\n\n    _throwHas (key, index) {\n        throw Error(`Object does not have ${key}:${index} field`)\n    }\n\n    _typeToWireType (type) {\n        if (VARINT_TYPES.indexOf(type) > -1) {\n            return 'varint'\n        }\n        if (type === 'fixed32' || type === 'fixed64') return type\n        return 'lengthDelimited'\n    }\n\n    known (...fields) {\n        fields.forEach(it => {\n            if (typeof it === 'number') {\n                this._knownFields[it] = ['any']\n            } else if (Array.isArray((it))) {\n                this.known(...it)\n            } else if (typeof it === 'object') {\n                for (let key in it) {\n                    if (it.hasOwnProperty(key)) {\n                        let val = it[key]\n                        if (!Array.isArray(val)) val = [val]\n                        this._knownFields[key] = val\n                    }\n                }\n            }\n        })\n        return this\n    }\n\n    has (key, index = 0, ignoreKnown = false) {\n        let has = key in this.fields && index in this.fields[key]\n        if (!ignoreKnown && key in this._knownFields) {\n            return true\n        }\n        return has\n    }\n\n    length (key) {\n        return this._assertHas(key) && this.fields[key].length\n    }\n\n    type (key, index = 0) {\n        if (this.has(key, index, true)) {\n            return this.fields[key][index].type\n        } else if (key in this._knownFields) {\n            return this._knownFields[key][0]\n        } else {\n            this._throwHas(key, index)\n        }\n    }\n\n    array (key, type) {\n        if (this.has(key, 0, true)) {\n            let ret = []\n            let i = 0\n            for (let k = 0; k < this.length(key); k++) {\n                ret[i++] = this.get(key, type, k)\n            }\n            return ret\n        } else if (key in this._knownFields) {\n            return []\n        } else {\n            this._throwHas(key, 0)\n        }\n    }\n\n    iter (key, type) {\n        if (this.has(key, 0, true)) {\n            let index = 0\n            const self = this\n            const length = this.length(key)\n\n            let ret = {\n                next() {\n                    if (index >= length) {\n                        return { done: true, value: undefined }\n                    }\n\n                    let value = self.get(key, type, index)\n\n                    index += 1\n\n                    return {\n                        value,\n                        done: false\n                    }\n                }\n            }\n\n            if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n                ret[Symbol.iterator] = () => ret\n            }\n\n            return ret\n        } else if (key in this._knownFields) {\n            return { next () { return { value: undefined, done: true } } }\n        } else {\n            this._throwHas(key, 0)\n        }\n    }\n\n    get (key, type, index = 0) {\n        return this._assertHas(key, index) && this[type].call(this, key, index)\n    }\n\n    string (key, index = 0) {\n        this._assertType(key, index, 'lengthDelimited')\n        this._assertType(key, index, 'string', true)\n        if (!this.has(key, index, true)) {\n            return ''\n        }\n        let it = this.fields[key][index].value\n        if (!('_string' in this.fields[key][index])) {\n            this.fields[key][index]._string = fromByteArray(this.data, it.start, it.end)\n        }\n        return this.fields[key][index]._string\n    }\n\n    bytes (key, index = 0) {\n        this._assertType(key, index, 'lengthDelimited')\n        this._assertType(key, index, 'bytes', true)\n        if (!this.has(key, index, true)) {\n            return []\n        }\n        if (!('_buffer' in this.fields[key][index])) {\n            let it = this.fields[key][index].value\n            this.fields[key][index]._buffer = this.data.slice(it.start, it.end)\n        }\n        return this.fields[key][index]._buffer\n    }\n\n    hex (key, index = 0) {\n        return toHex(this.bytes(key, index))\n    }\n\n    message (key, index = 0) {\n        this._assertType(key, index, 'lengthDelimited')\n        this._assertType(key, index, 'message', true)\n        if (!this.has(key, index, true)) {\n            return new OutputMessage()\n        }\n        if (!('_message' in this.fields[key][index])) {\n            let it = this.fields[key][index].value\n            let deserializer = new Deserializer(this.data)\n            deserializer.offset = it.start\n            deserializer.length = it.end\n            this.fields[key][index]._message = new OutputMessage(this.data, deserializer.parse())\n        }\n        return this.fields[key][index]._message\n    }\n\n    fixed32 (key, index = 0) {\n        this._assertType(key, index, 'fixed32')\n        if (!this.has(key, index, true)) {\n            return 0\n        }\n        return this.fields[key][index].value >>> 0\n    }\n\n    fixed64 (key, index = 0) {\n        this._assertType(key, index, 'fixed64')\n        if (!this.has(key, index, true)) {\n            return Long(0, 0)\n        }\n        return this.fields[key][index].value.toLong(false)\n    }\n\n    float (key, index = 0) {\n        this._assertType(key, index, 'float', true)\n        return this._cached('float', key, index, () => joinFloat(this.fixed32(key, index)))\n    }\n\n    double (key, index = 0) {\n        this._assertType(key, index, 'fixed64')\n        this._assertType(key, index, 'float', true)\n        return this._cached('double', key, index, () => joinDouble(\n            this.fields[key][index].value.lo,\n            this.fields[key][index].value.hi,\n        ))\n    }\n\n    _varint (key, index = 0) {\n        if (!this.has(key, index, true)) {\n            return LongBits.zero\n        }\n        this._assertType(key, index, 'varint')\n        if (!('_varint' in this.fields[key][index])) {\n            let offset = this.fields[key][index].value\n            this.fields[key][index]._varint = readVarint(offset, this.data)\n        }\n        return this.fields[key][index]._varint\n    }\n\n    int32 (key, index = 0) {\n        this._assertType(key, index, 'int32', true)\n        return this._varint(key, index).toNumber()\n    }\n\n    int64 (key, index = 0) {\n        this._assertType(key, index, 'int64', true)\n        return this._varint(key, index, true).toLong(false)\n    }\n\n    uint32 (key, index = 0) {\n        this._assertType(key, index, 'uint32', true)\n        return this._varint(key, index).toNumber(true)\n    }\n\n    uint64 (key, index = 0) {\n        this._assertType(key, index, 'uint64', true)\n        return this._varint(key, index).toLong(true)\n    }\n\n    bool (key, index = 0) {\n        this._assertType(key, index, 'bool', true)\n        return !!this._varint(key, index).toNumber()\n    }\n\n    sint32 (key, index = 0) {\n        this._assertType(key, index, 'sint32', true)\n        return this._cached('sint32', key, index, () => zigZagDecode(this.int32(key, index)))\n    }\n\n    sint64 (key, index = 0) {\n        this._assertType(key, index, 'sint64', true)\n        return this._cached('sint64', key, index, () => this._varint(key, index).clone().zzDecode().toLong())\n    }\n\n    sfixed32 (key, index = 0) {\n        this._assertType(key, index, 'sfixed32', true)\n        if (!this.has(key, index, true)) {\n            return 0\n        }\n        return this.fields[key][index].value\n    }\n\n    sfixed64 (key, index = 0) {\n        this._assertType(key, index, 'fixed64')\n        if (!this.has(key, index, true)) {\n            return Long(0, 0)\n        }\n        this._assertType(key, index, 'sfixed64', true)\n        return this.fixed64(key, index)\n    }\n\n    _processPacked (type, item, output) {\n        let state = {\n            offset: item.value.start,\n            data: this.data,\n            length: item.value.end,\n        }\n        if (VARINT_TYPES.indexOf(type) > -1) {\n            while (state.offset < state.length) {\n                let value = lazyReadVarint.apply(state)\n                output.push({\n                    value,\n                    type: 'varint',\n                })\n            }\n        } else if (\n            type === 'fixed32' ||\n            type === 'float' ||\n            type === 'sfixed32' ||\n            type === 'fixed64' ||\n            type === 'double' ||\n            type === 'sfixed64'\n        ) {\n            while (state.offset < state.length) {\n                let val = (type === 'fixed32' || type === 'float' || type === 'sfixed32'\n                           ? readFixed32\n                           : readFixed64).apply(state)\n                output.push({\n                    value: val,\n                    type: type === 'fixed32' || type === 'float' || type === 'sfixed32' ? 'fixed32' : 'fixed64',\n                })\n            }\n        }\n    }\n\n    repeated (key, type, lengthDelimitedIndex = -1) {\n        this._assertHas(key)\n        if (!this.has(key, 0, true)) {\n            return []\n        }\n        if (PACKABLE_TYPES.indexOf(type) === -1) return // forwards-compatibility\n        let newFields = []\n        if (lengthDelimitedIndex !== -1) {\n            let item = this.fields[key][lengthDelimitedIndex]\n            if (item.type === 'lengthDelimited') {\n                this._processPacked(type, item, newFields)\n            }\n        } else {\n            for (let i = 0; i < this.fields[key].length; i++) {\n                let item = this.fields[key][i]\n                if (item.type === 'lengthDelimited') {\n                    this._processPacked(type, item, newFields)\n                } else {\n                    // data is not packed\n                    newFields.push(item)\n                }\n            }\n        }\n        this.fields[key] = newFields\n        return this\n    }\n\n    toJSON () {\n        return outputToJson(this)\n    }\n}\n\n\nif (typeof Symbol !== 'undefined') {\n    OutputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = OutputMessage.prototype.toJSON\n}\n\n\n\nmodule.exports = OutputMessage\n"],"sourceRoot":""}