{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?9b05","webpack:///../src/longbits.js","webpack:///src/App.vue","webpack:///../src/readers.js","webpack:///../src/writers.js","webpack:///../utils.js","webpack:///../src/deserializer.js","webpack:///../src/constants.js","webpack:///../src/utils.js","webpack:///./src/App.vue?1ab8","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///../src/serializer.js","webpack:///../src/input-message.js","webpack:///./src/base64-helper.js","webpack:///./src/output-dumper.js","webpack:///../src/index.js","webpack:///./src/components/Repl.vue?c1ee","webpack:///../src/json-api.js","webpack:///../src/math.js","webpack:///./src/components/Repl.vue?d55a","webpack:///./src/inspect.js","webpack:///./src/collections.js","webpack:///./src/sandbox.js","webpack:///src/components/Repl.vue","webpack:///./src/components/Repl.vue?7b39","webpack:///./src/components/Repl.vue","webpack:///../src/output-message.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","require","TWO_TO_32","Long","LongBits","lo","hi","this","unsigned","mask","zero","sign","fromNumber","fromString","low","high","toNumber","zzEncode","zzDecode","lazyReadVarint","offset","readVarint","readVarintAndLength","start","ret","RangeError","fullyReadVarint","readFixed32","readFixed64","readLengthDelimited","len","end","writeNumberVarint","val","pos","writeLongVarint","from","writeFixed32","writeFixed64","bits","writeLengthDelimited","WIRE_TYPES_NAMES","Deserializer","ArrayBuffer","Uint8Array","Array","isArray","Buffer","field","_parseField","header","_parseHeader","func","0","1","2","5","VARINT_TYPES","PACKABLE_TYPES","PROTOBUF_TYPES","WIRE_TYPES","varint","fixed64","lengthDelimited","fixed32","DEFAULT_VALUES","int32","int64","uint32","uint64","sint32","sint64","bool","sfixed32","sfixed64","bytes","string","double","float","TWO_TO_20","TWO_TO_23","TWO_TO_33","TWO_TO_52","TWO_TO_63","TWO_TO_64","MIN_UINT32","MAX_UINT32","MIN_INT32","MAX_INT32","MIN_INT64","MAX_INT64","MIN_UINT64","MAX_UINT64","MAX_FLOAT","MIN_FLOAT","MIN_DOUBLE","MAX_DOUBLE","keyByMultiple","arr","forEach","v","toHex","ar","toByteArray","toString","fromHex","str","parseInt","isNaN","charCodeAt","fromByteArray","out","c1","String","fromCharCode","c2","c3","c4","u","join","_readVarint","toLong","_readVarintAndLength","writeVarint","number","obj","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","expression","attrs","model","callback","$$v","tab","inputData","on","asHex","asB64","asRaw","jsonToPB","jsonToHex","jsonToFile","ref","cmOptions","inputJson","class","left","PB","$event","_s","staticRenderFns","component","hljs","registerLanguage","javascript","Vue","directive","deep","el","binding","targets","querySelectorAll","textContent","highlightBlock","componentUpdated","use","Buefy","config","productionTip","render","h","App","$mount","splitFloat","splitDouble","writers","Serializer","msg","keepDefault","indexOf","run","_getPrimitiveType","_coerceTo","packed","fields","vals","k","_coerce","_unpacked","writer","preprocessed","_preProcess","ja","InputMessage","_parent","_keepDefault","index","has","it","editable","self","next","done","typ","ind","set","iterator","items","last","_addField","constructor","fromValue","cb","tryToInput","unpacked","map","toWire","toUint8Array","buffer","inputToJson","_varints","to","long","item","for","toJSON","encode","a","b","base64","encodings","byteLength","byteRemainder","mainLength","_dump","html","indentSize","indent","raw","spaces","split","stab","JSON","stringify","possibleTypes","_knownFields","DUMPER_POSSIBLE_TYPES","possiblePackedTypes","concat","filter","div","types","ptype","oldFields","repeated","array","res","trimEnd","dump","OutputMessage","utils","parse","_prepareJsonInput","ip","fromJson","jsonToInput","inferTypeByValue","_coerceInputTo","json","itype","outputToJson","f","_varint","zigZagDecode","isBigint","and","shiftRight","xor","joinDouble","exp","mant","NaN","Infinity","Math","pow","joinFloat","round","floor","log","LN2","mantHigh","mantLow","maxDoubleExponent","minDoubleExponent","x","sym","_t","staticStyle","resetSandbox","clear","_l","domProps","expr","_e","style","height","min","inputLines","nativeOn","_k","keyCode","evaluate","fromHistoryEvent","input","LinkedList","_first","_last","prev","_get","pop","cur","sep","toArray","LogList","capacity","_checkCapacity","Sandbox","iframe","display","body","contentWindow","contentDocument","open","write","close","_eval","loadScript","eval","onreadystatechange","inspect","util","compact","depth","_cache","_throwHas","sub","_assertHas","_typeToWireType","_checkType","known","ignoreKnown","_assertType","_string","_buffer","deserializer","_message","_cached","clone","output","state","lengthDelimitedIndex","newFields","_processPacked","values","toInput"],"mappings":"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","file":"js/app.96d4c9ca.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-3dfa5436\":\"6790055f\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-3dfa5436\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-3dfa5436\":\"43810407\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","const { TWO_TO_32 } = require('./constants')\r\nconst Long = require('long')\r\n\r\nclass LongBits {\r\n    constructor (lo, hi) {\r\n        this.lo = lo >>> 0\r\n        this.hi = hi >>> 0\r\n    }\r\n\r\n    toNumber (unsigned = false) {\r\n        if (!unsigned && this.hi >>> 31) {\r\n            let lo = ~this.lo + 1 >>> 0\r\n            let hi = ~this.hi >>> 0\r\n            if (!lo) {\r\n                hi = hi + 1 >>> 0\r\n            }\r\n            return -(lo + hi * TWO_TO_32)\r\n        }\r\n        return this.lo + this.hi * TWO_TO_32\r\n    }\r\n\r\n    toLong (unsigned) {\r\n        return new Long(this.lo, this.hi, unsigned)\r\n    }\r\n\r\n    zzEncode () {\r\n        let mask = this.hi >>> 31\r\n        this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\r\n        this.lo = (this.lo << 1 ^ mask) >>> 0\r\n        return this\r\n    }\r\n\r\n    zzDecode () {\r\n        let mask = -(this.lo & 1)\r\n        this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\r\n        this.hi = (this.hi >>> 1 ^ mask) >>> 0\r\n        return this\r\n    }\r\n\r\n    clone () {\r\n        return new LongBits(this.lo, this.hi)\r\n    }\r\n\r\n    static fromNumber (value) {\r\n        if (value === 0) {\r\n            return zero\r\n        }\r\n        let sign = value < 0\r\n        if (sign) {\r\n            value = -value\r\n        }\r\n        let lo = value >>> 0\r\n        let hi = (value - lo) / TWO_TO_32 >>> 0\r\n        if (sign) {\r\n            hi = ~hi >>> 0\r\n            lo = ~lo >>> 0\r\n            if (++lo > TWO_TO_32) {\r\n                lo = 0\r\n                if (++hi > TWO_TO_32) {\r\n                    hi = 0\r\n                }\r\n            }\r\n        }\r\n        return new LongBits(lo, hi)\r\n    }\r\n\r\n    static from (value) {\r\n        if (typeof value === 'number') {\r\n            return LongBits.fromNumber(value)\r\n        }\r\n        if (typeof value === 'string') {\r\n            value = Long.fromString(value)\r\n        }\r\n        if (value.low || value.high) {\r\n            return new LongBits(value.low >>> 0, value.high >>> 0)\r\n        } else if (value.lo || value.hi) {\r\n            return new LongBits(value.lo >>> 0, value.hi >>> 0)\r\n        } else {\r\n            return zero\r\n        }\r\n    }\r\n}\r\n\r\nconst zero = new LongBits(0, 0)\r\nzero.toNumber = () => 0\r\nzero.zzEncode = zero.zzDecode = function() {\r\n    return this\r\n}\r\nzero.length = () => 1\r\n\r\nLongBits.zero = zero\r\n\r\nmodule.exports = LongBits\r\n","<template>\r\n    <div class=\"container\">\r\n        <h2 class=\"page-title\">Protoflex REPL</h2>\r\n        <div class=\"columns\">\r\n            <div class=\"column\" v-show=\"left\">\r\n                <b-tabs position=\"is-centered\" v-model=\"tab\">\r\n                    <b-tab-item icon=\"book-open-outline\" label=\"Parsing\">\r\n                        <b-field label=\"Protobuf data\">\r\n                            <b-input type=\"textarea\" class=\"is-family-monospace\" v-model=\"inputData\"/>\r\n                        </b-field>\r\n                        <b-field label=\"Parse as\">\r\n                            <div class=\"buttons\">\r\n                                <b-button @click=\"asHex\">Hex</b-button>\r\n                                <b-button @click=\"asB64\">Base64</b-button>\r\n                                <b-button @click=\"asRaw\">Raw</b-button>\r\n                            </div>\r\n                        </b-field>\r\n                    </b-tab-item>\r\n                    <b-tab-item icon=\"code-braces\" label=\"Serializing\">\r\n                        <b-button @click=\"jsonToPB\">To Protobuf message</b-button>\r\n                        <b-button @click=\"jsonToHex\">To Hex</b-button>\r\n                        <b-button @click=\"jsonToFile\">Download as binary</b-button>\r\n                        <CodeMirror\r\n                                v-model=\"inputJson\"\r\n                                :options=\"cmOptions\"\r\n                                class=\"json-input\"\r\n                                ref=\"editor\"\r\n                        />\r\n                    </b-tab-item>\r\n                </b-tabs>\r\n                <b-message type=\"is-info\">\r\n                    <b>Common</b>\r\n                    <p>You can use REPL without using left pane, Protoflex is in <code>PB</code> and utils are in <code>PB.utils</code>\r\n                    </p>\r\n                    <b>Parsing</b>\r\n                    <p>Your object is in <code>$</code>, to get full info use <code>$.dump()</code></p>\r\n                    <b>Creating</b>\r\n                    <p>Code in editor is evaluated as JS, you can use stuff like <i>variables</i> and <i>functions</i>,\r\n                        and object is read from <code>$</code> variable</p>\r\n                    <p>To export your object: <code>$.toHex()</code>, <code>$.download()</code></p>\r\n                    <p><a href=\"/protoflex/api/\">Full API documentation</a></p>\r\n                </b-message>\r\n            </div>\r\n            <div class=\"column\">\r\n                <Repl ref=\"repl\" :globals=\"{ PB }\" :class=\"left ? '' : 'repl-full-width'\">\r\n                    <b-button class=\"hide-btn\" @click=\"left = !left\">{{left ? '< hide' : '> show'}}</b-button>\r\n                </Repl>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// code is mess but idc\r\nimport PB from '../..'\r\n\r\nimport protoflexUtils from '../../utils'\r\n\r\nPB.utils = protoflexUtils\r\n\r\nimport Repl from './components/Repl'\r\nimport dumper from './output-dumper'\r\nimport { encode } from './base64-helper'\r\n\r\nlet download = (filename, buffer) => {\r\n    let el = document.createElement('a')\r\n    el.setAttribute('href', 'data:application/x-protobuf;base64,' + encode(buffer))\r\n    el.setAttribute('download', filename)\r\n\r\n    el.style.display = 'none'\r\n    document.body.appendChild(el)\r\n    el.click()\r\n    document.body.removeChild(el)\r\n}\r\n\r\nconst ellipsisMiddle = (s, len) => {\r\n    if (s.length <= len) return s\r\n    let l = (len - 3) / 2\r\n    return s.substring(0, l % 1 === 0 ? l : Math.round(l)) + '...' + s.substring(s.length - l)\r\n}\r\n\r\nexport default {\r\n    name: 'app',\r\n    components: {\r\n        Repl,\r\n        CodeMirror: () => import('./cm-bundle')\r\n    },\r\n    data: () => ({\r\n        PB,\r\n        inputData: '',\r\n        inputJson: '$ = {\\n  \\n};',\r\n        tab: 0,\r\n        left: true,\r\n        cmOptions: {\r\n            mode: 'text/javascript',\r\n            theme: 'default',\r\n            viewportMargin: Infinity,\r\n            lint: true,\r\n            lineNumbers: true,\r\n            foldGutter: true,\r\n            gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n            autoCloseBrackets: true,\r\n            styleActiveLine: true,\r\n            extraKeys: {\r\n                'Ctrl-Space': 'autocomplete',\r\n                Tab (cm) {\r\n                    if (cm.somethingSelected()) {\r\n                        cm.indentSelection('add')\r\n                    } else {\r\n                        cm.replaceSelection(Array(cm.getOption('indentUnit') + 1).join(' '), 'end', '+input')\r\n                    }\r\n                },\r\n            }\r\n        }\r\n    }),\r\n    methods: {\r\n        asHex () {\r\n            let it = {\r\n                expr: `$ = PB.fromHex('${ellipsisMiddle(this.inputData, 25)}')`,\r\n            }\r\n            this.$refs.repl.addResult(it)\r\n            try {\r\n                this.$refs.repl.sandbox.window.$ = PB.fromHex(this.inputData)\r\n            } catch (e) {\r\n                this.$set(it, 'error', e)\r\n            }\r\n        },\r\n        asB64 () {\r\n            let it = {\r\n                expr: `$ = parse('${ellipsisMiddle(this.inputData, 25)}')`,\r\n            }\r\n            this.$refs.repl.addResult(it)\r\n            try {\r\n                this.$refs.repl.sandbox.window.$ = PB.parse(PB.utils.toByteArray(atob(this.inputData)))\r\n            } catch (e) {\r\n                this.$set(it, 'error', e)\r\n            }\r\n        },\r\n        asRaw () {\r\n            let it = {\r\n                expr: `$ = parse('${ellipsisMiddle(this.inputData, 25)}')`,\r\n            }\r\n            this.$refs.repl.addResult(it)\r\n            try {\r\n                this.$refs.repl.sandbox.window.$ = PB.parse(PB.utils.toByteArray(this.inputData))\r\n            } catch (e) {\r\n                this.$set(it, 'error', e)\r\n            }\r\n        },\r\n        jsonToPB () {\r\n            let it = {\r\n                expr: `$ = PB.fromJson({...})`,\r\n            }\r\n            this.$refs.repl.addResult(it)\r\n\r\n            let $\r\n\r\n            try {\r\n                eval(this.inputJson)\r\n                if (!$) {\r\n                    throw Error('$ not found, please check if it is present in your code.')\r\n                }\r\n                this.$refs.repl.sandbox.window.$ = PB.fromJson($)\r\n            } catch (e) {\r\n                this.$set(it, 'error', e)\r\n            }\r\n        },\r\n        jsonToHex () {\r\n            let it = {\r\n                expr: `PB.fromJson({...}).toHex()`,\r\n            }\r\n            this.$refs.repl.addResult(it)\r\n\r\n            let $\r\n\r\n            try {\r\n                eval(this.inputJson)\r\n                if (!$) {\r\n                    throw Error('$ not found, please check if it is present in your code.')\r\n                }\r\n                let result = PB.fromJson($).toHex()\r\n                this.$set(it, 'result', JSON.stringify(result))\r\n            } catch (e) {\r\n                this.$set(it, 'error', e)\r\n            }\r\n        },\r\n        jsonToFile () {\r\n            let it = {\r\n                expr: `PB.fromJson({...}).download()`,\r\n            }\r\n            this.$refs.repl.addResult(it)\r\n\r\n            let $\r\n\r\n            try {\r\n                eval(this.inputJson)\r\n                if (!$) {\r\n                    throw Error('$ not found, please check if it is present in your code.')\r\n                }\r\n                PB.fromJson($).download()\r\n            } catch (e) {\r\n                this.$set(it, 'error', e)\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        left (v) {\r\n            localStorage.left = v\r\n        },\r\n        tab () { // idk\r\n            setTimeout(() => this.$refs.editor.cminstance.refresh(), 100)\r\n        }\r\n    },\r\n    mounted () {\r\n        PB.OutputMessage.prototype._dump = dumper._dump\r\n        PB.OutputMessage.prototype._dump_ = dumper.dump\r\n        const self = this\r\n        PB.OutputMessage.prototype.dump = function (h, i, s) {\r\n            self.$refs.repl.addResult({ console: true, html: PB.OutputMessage.prototype._dump_.call(this, true, i, s) })\r\n        }\r\n\r\n        PB.InputMessage.prototype.download = function (filename = 'protoflex.bin') {\r\n            download(filename, this.toWire())\r\n        }\r\n\r\n        if (!localStorage.left) {\r\n            localStorage.left = 'true'\r\n        }\r\n\r\n        this.left = localStorage.left === 'true'\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url(dump.css);\r\n\r\n.page-title {\r\n    font-size: 21px;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    border-bottom: 1px solid #dbdbdb;\r\n    margin: 8px 25%;\r\n    padding: 4px;\r\n}\r\n\r\n.is-family-monospace textarea, .is-family-monospace input {\r\n    font-family: monospace !important;\r\n}\r\n\r\n.json-input {\r\n    height: auto;\r\n    font-size: 12px;\r\n    margin-top: 4px;\r\n}\r\n\r\n.hide-btn {\r\n    margin-right: 8px;\r\n}\r\n\r\n.repl-full-width {\r\n    width: 100% !important;\r\n    max-width: 100% !important;\r\n}\r\n</style>\r\n","const LongBits = require('./longbits')\r\n\r\nfunction lazyReadVarint () {\r\n    let offset = this.offset\r\n    while (this.data[this.offset++] & 0x80) {\r\n    }\r\n    return offset\r\n}\r\n\r\nfunction readVarint (offset, data, length = data.length) {\r\n    return readVarintAndLength(offset, data, length)[0]\r\n}\r\n\r\nfunction readVarintAndLength (offset, data, length = data.length) {\r\n    let start = offset\r\n    let ret = new LongBits(0, 0)\r\n    let i = 0\r\n    if (length - offset > 4) {\r\n        for (; i < 4; ++i) {\r\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << 28) >>> 0\r\n        ret.hi = (ret.hi | (data[offset] & 0x7f) >> 4) >>> 0\r\n        if (data[offset++] < 0x80) {\r\n            return [ret, offset - start]\r\n        }\r\n        i = 0\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            if (offset >= length) {\r\n                throw RangeError('Unexpected end while reading varint')\r\n            }\r\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\r\n        return [ret, offset - start]\r\n    }\r\n    if (length - offset > 4) {\r\n        for (; i < 5; ++i) {\r\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            if (offset >= length) {\r\n                throw RangeError('Unexpected end while reading varint')\r\n            }\r\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n    }\r\n    throw Error('Invalid varint encoding')\r\n}\r\n\r\nfunction fullyReadVarint () {\r\n    let offset = lazyReadVarint.call(this)\r\n    return readVarint(offset, this.data, this.length)\r\n}\r\n\r\nfunction readFixed32 () {\r\n    return this.data[this.offset++] |\r\n        this.data[this.offset++] << 8 |\r\n        this.data[this.offset++] << 16 |\r\n        this.data[this.offset++] << 24\r\n\r\n}\r\n\r\nfunction readFixed64 () {\r\n    let lo = readFixed32.call(this)\r\n    let hi = readFixed32.call(this)\r\n    return new LongBits(lo, hi)\r\n}\r\n\r\nfunction readLengthDelimited () {\r\n    let len = fullyReadVarint.call(this).toNumber(true)\r\n    let start = this.offset\r\n    return {\r\n        start,\r\n        end: this.offset += len,\r\n        length: len,\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    readVarint,\r\n    readVarintAndLength,\r\n    readFixed32,\r\n    readFixed64,\r\n    readLengthDelimited,\r\n    lazyReadVarint,\r\n    fullyReadVarint,\r\n}\r\n","const Long = require('long')\r\nconst LongBits = require('./longbits')\r\n\r\nfunction writeNumberVarint (val) {\r\n    if (val === 0) {\r\n        this.data[this.pos] = val\r\n    }\r\n    if (val < 0) {\r\n        // filling 9 bytes\r\n        for (let i = 0; i < 9; i++) {\r\n            this.data[this.pos++] = (val & 0x7f) | 0x80\r\n            val >>= 7\r\n        }\r\n        // and 10th byte: sign\r\n        this.data[this.pos++] = 0x1\r\n    } else {\r\n        while (val > 127) {\r\n            this.data[this.pos++] = (val & 0x7f) | 0x80\r\n            val >>>= 7\r\n        }\r\n        this.data[this.pos++] = val\r\n    }\r\n}\r\n\r\nfunction writeLongVarint (val) {\r\n    if (val instanceof Long) {\r\n        val = LongBits.from(val)\r\n    }\r\n    while (val.hi) {\r\n        this.data[this.pos++] = val.lo & 127 | 128\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\r\n        val.hi >>>= 7\r\n    }\r\n    while (val.lo > 0x7f) {\r\n        this.data[this.pos++] = val.lo & 127 | 128\r\n        val.lo = val.lo >>> 7\r\n    }\r\n    this.data[this.pos++] = val.lo\r\n}\r\n\r\nfunction writeFixed32 (val) {\r\n    this.data[this.pos++] = val & 0xff\r\n    this.data[this.pos++] = val >>> 8 & 0xff\r\n    this.data[this.pos++] = val >>> 16 & 0xff\r\n    this.data[this.pos++] = val >>> 24 & 0xff\r\n}\r\n\r\nfunction writeFixed64 (val) {\r\n    let bits = LongBits.from(val)\r\n    writeFixed32.call(this, bits.lo)\r\n    writeFixed32.call(this, bits.hi)\r\n}\r\n\r\nfunction writeLengthDelimited (val) {\r\n    writeNumberVarint.call(this, val.length)\r\n    for (let i = 0; i < val.length; i++) {\r\n        this.data[this.pos++] = val[i]\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    writeLongVarint,\r\n    writeNumberVarint,\r\n    writeFixed32,\r\n    writeFixed64,\r\n    writeLengthDelimited,\r\n}\r\n","/* included so utils can be imported like require('protoflex/utils') */\r\n\r\nmodule.exports = require('./src/utils')\r\n","const {\r\n    WIRE_TYPES_NAMES,\r\n} = require('./constants')\r\nconst {\r\n    readFixed32,\r\n    readFixed64,\r\n    readLengthDelimited,\r\n    lazyReadVarint,\r\n    fullyReadVarint,\r\n} = require('./readers')\r\n\r\nclass Deserializer {\r\n    constructor (data) {\r\n        if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\r\n            data = new Uint8Array(data)\r\n        }\r\n        if (!(Array.isArray(data)\r\n            || (typeof Buffer !== 'undefined' && data instanceof Buffer)\r\n            || (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array)\r\n        )) {\r\n            throw Error('Input for deserializer must be an array/buffer')\r\n        }\r\n        this.data = data\r\n        this.offset = 0\r\n        this.length = data.length\r\n    }\r\n\r\n    parse () {\r\n        let ret = []\r\n        while (this.offset < this.length) {\r\n            const field = this._parseField()\r\n            ret.push(field)\r\n        }\r\n        if (this.offset > this.length) {\r\n            throw Error('Buffer exhausted')\r\n        }\r\n        return ret\r\n    }\r\n\r\n    _parseField () {\r\n        let header = this._parseHeader()\r\n        let type = header.type\r\n        let key = header.key\r\n        let func = {\r\n            0: lazyReadVarint,\r\n            1: readFixed64,\r\n            2: readLengthDelimited,\r\n            5: readFixed32,\r\n        }[type]\r\n        if (!func) {\r\n            throw Error('Unknown wire type: ' + type)\r\n        }\r\n        let value = func.call(this)\r\n        return {\r\n            key,\r\n            value,\r\n            type: WIRE_TYPES_NAMES[type],\r\n        }\r\n    }\r\n\r\n    _parseHeader () {\r\n        let value = fullyReadVarint.call(this).toNumber(true)\r\n\r\n        return {\r\n            type: value & 0x07,\r\n            key: value >> 3,\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Deserializer\r\n","const VARINT_TYPES = [\r\n    'int32',\r\n    'int64',\r\n    'uint32',\r\n    'uint64',\r\n    'sint32',\r\n    'sint64',\r\n    'varint',\r\n    'bool',\r\n]\r\nconst PACKABLE_TYPES = [\r\n    ...VARINT_TYPES,\r\n    'fixed32',\r\n    'fixed64',\r\n    'sfixed32',\r\n    'sfixed64',\r\n    'double',\r\n    'float',\r\n]\r\n\r\nconst PROTOBUF_TYPES = [\r\n    'int32',\r\n    'int64',\r\n    'uint32',\r\n    'uint64',\r\n    'sint32',\r\n    'sint64',\r\n    'bool',\r\n    'fixed32',\r\n    'fixed64',\r\n    'sfixed32',\r\n    'sfixed64',\r\n    'bytes',\r\n    'string',\r\n    'message',\r\n    'double',\r\n    'float',\r\n]\r\n\r\nconst WIRE_TYPES = {\r\n    varint: 0,\r\n    fixed64: 1,\r\n    lengthDelimited: 2,\r\n    fixed32: 5,\r\n}\r\n\r\nconst WIRE_TYPES_NAMES = [\r\n    'varint',\r\n    'fixed64',\r\n    'lengthDelimited',\r\n    undefined,\r\n    undefined,\r\n    'fixed32',\r\n]\r\nconst DEFAULT_VALUES = {\r\n    int32: 0,\r\n    int64: 0,\r\n    uint32: 0,\r\n    uint64: 0,\r\n    sint32: 0,\r\n    sint64: 0,\r\n    bool: false,\r\n    fixed32: 0,\r\n    fixed64: 0,\r\n    sfixed32: 0,\r\n    sfixed64: 0,\r\n    bytes: '',\r\n    string: '',\r\n    message: null,\r\n    double: 0,\r\n    float: 0,\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    TWO_TO_20: 1048576,\r\n    TWO_TO_23: 8388608,\r\n    TWO_TO_32: 4294967296,\r\n    TWO_TO_33: 8589934592,\r\n    TWO_TO_52: 4503599627370496,\r\n    TWO_TO_63: 9223372036854775808,\r\n    TWO_TO_64: 18446744073709551616,\r\n\r\n    VARINT_TYPES,\r\n    PACKABLE_TYPES,\r\n    WIRE_TYPES,\r\n    WIRE_TYPES_NAMES,\r\n    PROTOBUF_TYPES,\r\n    DEFAULT_VALUES,\r\n\r\n    MIN_UINT32: 0,\r\n    MAX_UINT32: 0xFFFFFFFF,\r\n    MIN_INT32: -0x80000000,\r\n    MAX_INT32: 0x7FFFFFFF,\r\n    MIN_INT64: '-9223372036854775808',\r\n    MAX_INT64: '9223372036854775807',\r\n    MIN_UINT64: 0,\r\n    MAX_UINT64: '18446744073709551615',\r\n    MAX_FLOAT: 3.4028234663852886e+38,\r\n    MIN_FLOAT: 1.1754943508222875e-38,\r\n    MIN_DOUBLE: 2.2250738585072014e-308,\r\n    MAX_DOUBLE: 1.7976931348623157e+308,\r\n}\r\n","const { readVarintAndLength, readVarint } = require('./readers')\r\nconst { writeNumberVarint, writeLongVarint } = require('./writers')\r\n\r\nfunction keyByMultiple (arr, key) {\r\n    let ret = {}\r\n    arr.forEach((v) => {\r\n        if (v[key] in ret) {\r\n            ret[v[key]].push(v)\r\n        } else {\r\n            ret[v[key]] = [v]\r\n        }\r\n    })\r\n    return ret\r\n}\r\n\r\n\r\nfunction toHex (ar) {\r\n    if (typeof ar === 'string') {\r\n        ar = toByteArray(ar)\r\n    }\r\n    let ret = ''\r\n    for (let i = 0; i < ar.length; i++) {\r\n        if (ar[i] > 255 || ar[i] < 0) throw RangeError(`${ar[i]} is not in range [0, 255]`)\r\n        let t = ar[i].toString(16)\r\n        ret += t.length > 1 ? t : '0' + t\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction fromHex (str) {\r\n    if (str.length % 2 !== 0) throw Error('Invalid hex')\r\n    let ret = []\r\n    for (let i = 0, j = 0; j < str.length; i++, j += 2) {\r\n        let v = parseInt(str[j] + str[j + 1], 16)\r\n        if (isNaN(v)) {\r\n            throw Error('Invalid hex')\r\n        }\r\n        ret[i] = v\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction toByteArray (str) {\r\n    let ret = []\r\n    let j = 0\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i)\r\n        if (c < 0x80) {\r\n            ret[j++] = c\r\n        } else if (c < 0x800) {\r\n            ret[j++] = 0xc0 | (c >> 6)\r\n            ret[j++] = 0x80 | (c & 0x3f)\r\n        } else if (c < 0xd800 || c >= 0xe000) {\r\n            ret[j++] = 0xe0 | (c >> 12)\r\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\r\n            ret[j++] = 0x80 | (c & 0x3f)\r\n        } else {\r\n            // pair\r\n            i++\r\n            c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff))\r\n\r\n            ret[j++] = 0xf0 | (c >> 18)\r\n            ret[j++] = 0x80 | ((c >> 12) & 0x3f)\r\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\r\n            ret[j++] = 0x80 | (c & 0x3f)\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction fromByteArray (bytes, start = 0, end = bytes.length) {\r\n    if (!bytes) return ''\r\n    let out = []\r\n    let j = 0\r\n\r\n    for (let i = start; i < end; i++) {\r\n        let c1 = bytes[i]\r\n        if (c1 > 0xff) throw Error('Invalid byte array')\r\n\r\n        if (c1 < 0x80) {\r\n            out[j++] = String.fromCharCode(c1)\r\n        } else if (c1 > 0xbf && c1 < 0xe0) {\r\n            let c2 = bytes[++i]\r\n            out[j++] = String.fromCharCode(\r\n                (c1 & 0x1f) << 6 | c2 & 0x3f,\r\n            )\r\n        } else if (c1 > 0xdf && c1 < 0xf0) {\r\n            let c2 = bytes[++i]\r\n            let c3 = bytes[++i]\r\n            out[j++] = String.fromCharCode((c1 & 0xf) << 12 | (c2 & 0x3f) << 6 | c3 & 0x3f)\r\n        } else {\r\n            // pair\r\n            let c2 = bytes[++i]\r\n            let c3 = bytes[++i]\r\n            let c4 = bytes[++i]\r\n            let u = (\r\n                (c1 & 0x07) << 18 |\r\n                (c2 & 0x3f) << 12 |\r\n                (c3 & 0x3f) << 6 |\r\n                (c4 & 0x3f)\r\n            ) - 0x10000\r\n            out[j++] = String.fromCharCode(0xd800 | (u >> 10))\r\n            out[j++] = String.fromCharCode(0xdc00 | (u & 0x3ff))\r\n\r\n        }\r\n    }\r\n\r\n    return out.join('')\r\n}\r\n\r\nfunction _readVarint (bytes, offset = 0) {\r\n    return readVarint(offset, bytes).toLong()\r\n}\r\n\r\nfunction _readVarintAndLength (bytes, offset = 0) {\r\n    let ret = readVarintAndLength(offset, bytes)\r\n    ret[0] = ret[0].toLong()\r\n    return ret\r\n}\r\n\r\nfunction writeVarint (number) {\r\n    let ret = []\r\n    let obj = {\r\n        data: ret,\r\n        pos: 0,\r\n    }\r\n\r\n    if (typeof number === 'number') {\r\n        writeNumberVarint.call(obj, number)\r\n    } else {\r\n        writeLongVarint.call(obj, number)\r\n    }\r\n\r\n    return ret\r\n}\r\n\r\nmodule.exports = {\r\n    keyByMultiple,\r\n\r\n    readVarint: _readVarint,\r\n    readVarintAndLength: _readVarintAndLength,\r\n    writeVarint,\r\n\r\n    toByteArray,\r\n    fromByteArray,\r\n    toHex,\r\n    fromHex,\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('h2',{staticClass:\"page-title\"},[_vm._v(\"Protoflex REPL\")]),_c('div',{staticClass:\"columns\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.left),expression:\"left\"}],staticClass:\"column\"},[_c('b-tabs',{attrs:{\"position\":\"is-centered\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},[_c('b-tab-item',{attrs:{\"icon\":\"book-open-outline\",\"label\":\"Parsing\"}},[_c('b-field',{attrs:{\"label\":\"Protobuf data\"}},[_c('b-input',{staticClass:\"is-family-monospace\",attrs:{\"type\":\"textarea\"},model:{value:(_vm.inputData),callback:function ($$v) {_vm.inputData=$$v},expression:\"inputData\"}})],1),_c('b-field',{attrs:{\"label\":\"Parse as\"}},[_c('div',{staticClass:\"buttons\"},[_c('b-button',{on:{\"click\":_vm.asHex}},[_vm._v(\"Hex\")]),_c('b-button',{on:{\"click\":_vm.asB64}},[_vm._v(\"Base64\")]),_c('b-button',{on:{\"click\":_vm.asRaw}},[_vm._v(\"Raw\")])],1)])],1),_c('b-tab-item',{attrs:{\"icon\":\"code-braces\",\"label\":\"Serializing\"}},[_c('b-button',{on:{\"click\":_vm.jsonToPB}},[_vm._v(\"To Protobuf message\")]),_c('b-button',{on:{\"click\":_vm.jsonToHex}},[_vm._v(\"To Hex\")]),_c('b-button',{on:{\"click\":_vm.jsonToFile}},[_vm._v(\"Download as binary\")]),_c('CodeMirror',{ref:\"editor\",staticClass:\"json-input\",attrs:{\"options\":_vm.cmOptions},model:{value:(_vm.inputJson),callback:function ($$v) {_vm.inputJson=$$v},expression:\"inputJson\"}})],1)],1),_c('b-message',{attrs:{\"type\":\"is-info\"}},[_c('b',[_vm._v(\"Common\")]),_c('p',[_vm._v(\"You can use REPL without using left pane, Protoflex is in \"),_c('code',[_vm._v(\"PB\")]),_vm._v(\" and utils are in \"),_c('code',[_vm._v(\"PB.utils\")])]),_c('b',[_vm._v(\"Parsing\")]),_c('p',[_vm._v(\"Your object is in \"),_c('code',[_vm._v(\"$\")]),_vm._v(\", to get full info use \"),_c('code',[_vm._v(\"$.dump()\")])]),_c('b',[_vm._v(\"Creating\")]),_c('p',[_vm._v(\"Code in editor is evaluated as JS, you can use stuff like \"),_c('i',[_vm._v(\"variables\")]),_vm._v(\" and \"),_c('i',[_vm._v(\"functions\")]),_vm._v(\", and object is read from \"),_c('code',[_vm._v(\"$\")]),_vm._v(\" variable\")]),_c('p',[_vm._v(\"To export your object: \"),_c('code',[_vm._v(\"$.toHex()\")]),_vm._v(\", \"),_c('code',[_vm._v(\"$.download()\")])]),_c('p',[_c('a',{attrs:{\"href\":\"/protoflex/api/\"}},[_vm._v(\"Full API documentation\")])])])],1),_c('div',{staticClass:\"column\"},[_c('Repl',{ref:\"repl\",class:_vm.left ? '' : 'repl-full-width',attrs:{\"globals\":{ PB: _vm.PB }}},[_c('b-button',{staticClass:\"hide-btn\",on:{\"click\":function($event){_vm.left = !_vm.left}}},[_vm._v(_vm._s(_vm.left ? '< hide' : '> show'))])],1)],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=cd5c9142&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport Buefy from 'buefy'\r\nimport 'buefy/dist/buefy.css'\r\n\r\nimport hljs from 'highlight.js/lib/highlight'\r\nimport javascript from 'highlight.js/lib/languages/javascript'\r\nimport 'highlight.js/styles/atom-one-light.css'\r\n\r\nhljs.registerLanguage('javascript', javascript)\r\n\r\nVue.directive('hljs', {\r\n    deep: true,\r\n    bind: function (el, binding) {\r\n        let targets = el.querySelectorAll('code')\r\n        targets.forEach((target) => {\r\n            if (binding.value) {\r\n                target.textContent = binding.value\r\n            }\r\n            hljs.highlightBlock(target)\r\n        })\r\n    },\r\n    componentUpdated: function (el, binding) {\r\n        let targets = el.querySelectorAll('code')\r\n        targets.forEach((target) => {\r\n            if (binding.value) {\r\n                target.textContent = binding.value\r\n                hljs.highlightBlock(target)\r\n            }\r\n        })\r\n    },\r\n})\r\n\r\nVue.use(Buefy)\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n    render: h => h(App),\r\n}).$mount('#app')\r\n","const {\r\n    writeNumberVarint,\r\n    writeLongVarint,\r\n    writeFixed64,\r\n    writeFixed32,\r\n    writeLengthDelimited,\r\n} = require('./writers')\r\nconst { toByteArray } = require('./utils')\r\nconst { splitFloat, splitDouble } = require('./math')\r\nconst { WIRE_TYPES, VARINT_TYPES } = require('./constants')\r\nconst Long = require('long')\r\nconst LongBits = require('./longbits')\r\nconst writers = {\r\n    varint: writeLongVarint,\r\n    fixed32: writeFixed32,\r\n    fixed64: writeFixed64,\r\n    lengthDelimited: writeLengthDelimited,\r\n}\r\n\r\nclass Serializer {\r\n    constructor (msg, keepDefault = false) {\r\n        this.msg = msg\r\n        this.data = []\r\n        this.pos = 0\r\n        this.keepDefault = keepDefault\r\n    }\r\n\r\n    _getPrimitiveType (type) {\r\n        if (VARINT_TYPES.indexOf(type) > -1) {\r\n            return 'varint'\r\n        }\r\n        if (type === 'fixed32' || type === 'fixed64') {\r\n            return type\r\n        }\r\n        if (type === 'float' || type === 'sfixed32') {\r\n            return 'fixed32'\r\n        }\r\n        if (type === 'double' || type === 'sfixed64') {\r\n            return 'fixed64'\r\n        }\r\n        if (type === 'string' || type === 'bytes' || type === 'message' || type === 'lengthDelimited') {\r\n            return 'lengthDelimited'\r\n        }\r\n        throw Error(`Can't find primitive for ${type}`)\r\n    }\r\n\r\n    _coerceTo (field, type) {\r\n        let value = field.value\r\n        if (type === 'lengthDelimited') {\r\n            switch (field.type) {\r\n            case 'message':\r\n                return new Serializer(value).run()\r\n            case 'string':\r\n                return toByteArray(value)\r\n            case 'bytes':\r\n            case 'lengthDelimited':\r\n                return field.value\r\n            default:\r\n                throw Error(`${field.type} cannot be coerced to ${type}`)\r\n            }\r\n        }\r\n        if (field.type === 'sint32' || field.type === 'sint64') {\r\n            return LongBits.from(value).zzEncode()\r\n        }\r\n        if (field.type === 'float') {\r\n            return splitFloat(value)\r\n        }\r\n        if (field.type === 'double') {\r\n            return splitDouble(value)\r\n        }\r\n        if (field.type === 'bool' && type === 'varint') {\r\n            return !!field.value\r\n        }\r\n        return field.value\r\n    }\r\n\r\n    _coerce (field) {\r\n        let type = this._getPrimitiveType(field.type)\r\n        return {\r\n            type,\r\n            value: this._coerceTo(field, type),\r\n        }\r\n    }\r\n\r\n    _preProcess () {\r\n        let ret = []\r\n        let packed = {}  // temp storage for further packing repeateds\r\n        let j = 0\r\n\r\n        for (let i in this.msg.fields) {\r\n            if (this.msg.fields.hasOwnProperty(i)) {\r\n                let vals = this.msg.fields[i]\r\n                for (let k = 0; k < vals.length; k++) {\r\n                    let field = vals[k]\r\n                    if (field === undefined) continue // sparse\r\n                    field = this._coerce(field)\r\n                    let { type, value } = field\r\n\r\n                    if (type === 'lengthDelimited' && value.length === 0 && !this.keepDefault) {\r\n                        // l-delim has 0 length, thus skipping.\r\n                        continue\r\n                    }\r\n\r\n                    if ((type === 'varint' || type === 'fixed32' || type === 'fixed64') && !this.msg._unpacked[i]) {\r\n                        // packing this boi\r\n                        if (!(i in packed)) {\r\n                            packed[i] = []\r\n                        }\r\n                        packed[i].push(field)\r\n                    } else {\r\n                        ret[j++] = {\r\n                            type,\r\n                            value,\r\n                            key: i,\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // second pass for packed\r\n        for (let i in packed) {\r\n            if (packed.hasOwnProperty(i)) {\r\n                if (packed[i].length > 1) {\r\n                    let obj = {\r\n                        data: [],\r\n                        pos: 0,\r\n                    }\r\n                    for (let k = 0; k < packed[i].length; k++) {\r\n                        let { type, value } = packed[i][k]\r\n                        if (type === 'varint' && typeof value === 'number') {\r\n                            writeNumberVarint.call(obj, value)\r\n                        } else {\r\n                            let writer = writers[type]\r\n                            writer.call(obj, value)\r\n                        }\r\n                    }\r\n                    ret[j++] = {\r\n                        key: i,\r\n                        type: 'lengthDelimited',\r\n                        value: obj.data,\r\n                    }\r\n                } else {\r\n                    let { type, value } = packed[i][0]\r\n                    ret[j++] = {\r\n                        type,\r\n                        value,\r\n                        key: i,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    run () {\r\n        let preprocessed = this._preProcess()\r\n\r\n        for (let i = 0; i < preprocessed.length; i++) {\r\n            let { key, type, value } = preprocessed[i]\r\n\r\n            if (!this.keepDefault && (!value || value.length === 0 || (value.lo === 0 && value.hi === 0))) {\r\n                continue\r\n            }\r\n\r\n            // header\r\n            writeNumberVarint.call(this, key * 8 + WIRE_TYPES[type])\r\n\r\n            if (type === 'varint' && typeof value === 'number') {\r\n                writeNumberVarint.call(this, value)\r\n            } else {\r\n                let writer = writers[type]\r\n                writer.call(this, value)\r\n            }\r\n        }\r\n\r\n        return this.data\r\n    }\r\n}\r\n\r\nmodule.exports = Serializer\r\n","const Long = require('long')\r\nconst {\r\n    MIN_INT32,\r\n    MIN_INT64,\r\n    MIN_UINT32,\r\n    MIN_UINT64,\r\n    MAX_INT32,\r\n    MAX_INT64,\r\n    MAX_UINT32,\r\n    MAX_UINT64,\r\n} = require('./constants')\r\nconst Serializer = require('./serializer')\r\nconst ja = require('./json-api')\r\nconst { toHex } = require('./utils')\r\n\r\n/**\r\n * @class protoflex.InputMessage\r\n */\r\nclass InputMessage {\r\n    constructor () {\r\n        this.fields = {}\r\n        this._parent = null\r\n        this._unpacked = {}\r\n    }\r\n\r\n    keepDefault(value = true) {\r\n        this._keepDefault = value\r\n        return this\r\n    }\r\n\r\n    has (key, index = 0) {\r\n        return key in this.fields && index in this.fields[key]\r\n    }\r\n\r\n    get (key, type = null, index = 0) {\r\n        if (!this.has(key)) {\r\n            throw Error(`Message does not have ${key}:${index}`)\r\n        }\r\n        if (typeof type === 'number' && index === 0) {\r\n            index = type\r\n            type = null\r\n        }\r\n        let it = this.fields[key][index]\r\n        if (type !== null && type !== it.type) {\r\n            throw Error(`${key}:${index} is not ${type}`)\r\n        } else {\r\n            return it.value\r\n        }\r\n    }\r\n\r\n    array (key, type = null) {\r\n        if (!this.has(key)) {\r\n            throw Error(`Message does not have ${key}`)\r\n        }\r\n\r\n        let ret = []\r\n        for (let i = 0; i < this.fields[key].length; i++) {\r\n            let it = this.fields[key][i]\r\n            if (it === undefined) {\r\n                ret[i] = undefined\r\n            } else if (type !== null && it.type !== type) {\r\n                throw Error(`${key}:${i} is not ${type}`)\r\n            } else {\r\n                ret[i] = it.value\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n\r\n    iter (key, editable = false, type = null) {\r\n        if (!this.has(key)) {\r\n            throw Error(`Message does not have ${key}`)\r\n        }\r\n\r\n        let index = 0\r\n        let self = this\r\n        let length = self.fields[key].length\r\n\r\n        let ret = {\r\n            next () {\r\n                if (index >= length) {\r\n                    return { done: true, value: undefined }\r\n                }\r\n\r\n                if (self.fields[key].length !== length) {\r\n                    throw Error('Data size changed during iteration')\r\n                }\r\n                let typ = self.fields[key][index].type\r\n\r\n                if (type !== null && typ !== type) {\r\n                    throw Error(`${key}:${index} is not ${type}`)\r\n                }\r\n\r\n                let value\r\n                if (editable) {\r\n                    let ind = index\r\n\r\n                    value = {\r\n                        get () {\r\n                            return self.fields[key][ind].value\r\n                        },\r\n                        set (v) {\r\n                            self[typ](key, v, ind)\r\n                        },\r\n                    }\r\n                } else {\r\n                    value = self.fields[key][index].value\r\n                }\r\n\r\n                index += 1\r\n\r\n                return {\r\n                    value,\r\n                    done: false,\r\n                }\r\n            },\r\n        }\r\n\r\n        if (typeof Symbol !== 'undefined' && Symbol.iterator) {\r\n            ret[Symbol.iterator] = () => ret\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    clear (key = null, index = null) {\r\n        if (key === null) {\r\n            this.fields = {}\r\n        } else if (key in this.fields) {\r\n            if (index !== null) {\r\n                if (index < 0) {\r\n                    index = this.fields[key].length + index\r\n                }\r\n\r\n                if (index < 0 || index >= this.fields[key].length) {\r\n                    throw RangeError('Out of array bounds')\r\n                }\r\n\r\n                this.fields[key].splice(index, 1)\r\n            } else {\r\n                this.fields[key] = []\r\n            }\r\n        }\r\n        return this\r\n    }\r\n\r\n    append (key, value, type = null) {\r\n        if (!this.has(key)) {\r\n            if (type === null) {\r\n                throw Error('First item in array must have type set explicitly')\r\n            }\r\n            this._addField(key, 0, value, type)\r\n        } else {\r\n            let items = this.fields[key]\r\n            let last = items[items.length - 1]\r\n            if (type !== null && type !== last.type) {\r\n                throw Error(`Previous item(s) in array have type ${last.type}, not ${type}`)\r\n            }\r\n            if (type === null) type = last.type\r\n            this._addField(key, items.length, value, type)\r\n        }\r\n        return this\r\n    }\r\n\r\n    string (key, value, index = 0) {\r\n        this._addField(key, index, value + '', 'string')\r\n        return this\r\n    }\r\n\r\n    bytes (key, value, index = 0) {\r\n        if (Array.isArray(value) || (typeof Buffer !== 'undefined' && value instanceof Buffer)) {\r\n            this._addField(key, index, Array.from(value), 'bytes')\r\n            return this\r\n        }\r\n        throw Error(`${value ? value.constructor.name : value} cannot be cast to bytes.`)\r\n    }\r\n\r\n    bool (key, value, index = 0) {\r\n        this._addField(key, index, !!value, 'bool')\r\n        return this\r\n    }\r\n\r\n    float (key, value, index = 0) {\r\n        this._addField(key, index, value, 'float')\r\n        return this\r\n    }\r\n\r\n    double (key, value, index = 0) {\r\n        this._addField(key, index, value, 'double')\r\n        return this\r\n    }\r\n\r\n    fixed32 (key, value, index = 0) {\r\n        this._addField(key, index, value, 'fixed32')\r\n        return this\r\n    }\r\n\r\n    sfixed32 (key, value, index = 0) {\r\n        this._addField(key, index, value, 'sfixed32')\r\n        return this\r\n    }\r\n\r\n    fixed64 (key, value, index = 0) {\r\n        if (!(value instanceof Long)) {\r\n            value = Long.fromValue(value)\r\n        }\r\n        this._addField(key, index, value, 'fixed64')\r\n        return this\r\n    }\r\n\r\n    sfixed64 (key, value, index = 0) {\r\n        if (!(value instanceof Long)) {\r\n            value = Long.fromValue(value)\r\n        }\r\n        this._addField(key, index, value, 'sfixed64')\r\n        return this\r\n    }\r\n\r\n    message (key, cb, index = 0) {\r\n        if (typeof cb === 'number' && index === 0) {\r\n            index = cb\r\n            cb = undefined\r\n        }\r\n\r\n        let msg = new InputMessage()\r\n\r\n        this._addField(key, index, msg, 'message')\r\n\r\n        if (cb) {\r\n            cb(msg)\r\n        } else {\r\n            msg._parent = this\r\n            return msg\r\n        }\r\n    }\r\n\r\n    editMessage (key, cb, index = 0) {\r\n        if (typeof cb === 'number' && index === 0) {\r\n            index = cb\r\n            cb = undefined\r\n        }\r\n\r\n        if (!(key in this.fields) || !this.fields[key][index]) {\r\n            throw new Error(`${key}:${index} does not exist`)\r\n        }\r\n\r\n        const field = this.fields[key][index]\r\n        let msg\r\n        if (field.type === 'lengthDelimited') {\r\n            // from toInput() conversion\r\n            try {\r\n                msg = field.tryToInput()\r\n            } catch (e) {\r\n                throw new Error(`Failed to parse ${key}:${index} as message: ${e}`)\r\n            }\r\n            field.value = msg\r\n            field.type = 'message'\r\n        }\r\n\r\n        if (field.type !== 'message') {\r\n            throw new Error(`${key}:${index} is not a message`)\r\n        }\r\n\r\n        if (cb) {\r\n            cb(msg)\r\n        } else {\r\n            msg._parent = this\r\n            return msg\r\n        }\r\n    }\r\n\r\n    parent () {\r\n        return this._parent\r\n    }\r\n\r\n    end () {\r\n        if (this._parent === null) {\r\n            throw Error('Root doesn\\'t have parent')\r\n        }\r\n        return this._parent\r\n    }\r\n\r\n    unpacked (...fields) {\r\n        for (let i = 0; i < fields.length; i++) {\r\n            if (Array.isArray(fields[i])) {\r\n                this.unpacked(...fields[i])\r\n            } else {\r\n                this._unpacked[fields[i]] = 1\r\n            }\r\n        }\r\n        return this\r\n    }\r\n\r\n    _addField (key, index, value, type) {\r\n        if (!(key in this.fields)) {\r\n            this.fields[key] = []\r\n        }\r\n        if (Array.isArray(value) && type !== 'bytes') {\r\n            if (index !== 0) {\r\n                throw Error('index != 0 when inserting multiple values')\r\n            }\r\n            this.fields[key] = value.map(it => ({\r\n                type,\r\n                value: it,\r\n            }))\r\n        } else {\r\n            this.fields[key][index] = {\r\n                value,\r\n                type,\r\n            }\r\n        }\r\n    }\r\n\r\n    toWire () {\r\n        return new Serializer(this, this._keepDefault).run()\r\n    }\r\n\r\n    serialize () {\r\n        return this.toWire()\r\n    }\r\n\r\n    toHex () {\r\n        return toHex(this.toWire())\r\n    }\r\n\r\n    toBuffer () {\r\n        if (typeof Buffer === 'undefined') {\r\n            throw Error('Buffer is not supported in current environment')\r\n        }\r\n        return Buffer.from(this.toWire())\r\n    }\r\n\r\n    toUint8Array () {\r\n        if (typeof Uint8Array === 'undefined') {\r\n            throw Error('Uint8Array is not supported in current environment')\r\n        }\r\n        return new Uint8Array(this.toWire())\r\n    }\r\n\r\n    toArrayBuffer () {\r\n        return this.toUint8Array().buffer\r\n    }\r\n\r\n    toJSON () {\r\n        return ja.inputToJson(this, InputMessage)\r\n    }\r\n}\r\n\r\n// varints\r\nInputMessage._varints = [\r\n    { name: 'int32', from: MIN_INT32, to: MAX_INT32 },\r\n    { name: 'int64', from: MIN_INT64, to: MAX_INT64, long: true },\r\n    { name: 'uint32', from: MIN_UINT32, to: MAX_UINT32 },\r\n    { name: 'uint64', from: MIN_UINT64, to: MAX_UINT64, long: true, unsigned: true },\r\n    { name: 'sint32', from: MIN_INT32, to: MAX_INT32 },\r\n    { name: 'sint64', from: MIN_INT64, to: MAX_INT64, long: true },\r\n]\r\n\r\nInputMessage._varints.forEach((item) => {\r\n    InputMessage.prototype[item.name] = function _addVarintField (key, value, index = 0) {\r\n        if (typeof value === 'bigint') {\r\n            value = value.toString(10)\r\n        }\r\n        if (typeof value === 'string') {\r\n            value = item.long ? Long.fromString(value, item.unsigned) : parseInt(value, 10)\r\n        }\r\n        if (item.long) {\r\n            if (!(value instanceof Long)) {\r\n                value = Long.fromNumber(value, item.unsigned)\r\n            }\r\n        } else if (value < item.from || value > item.to) {\r\n            throw RangeError(`${value} is outside ${item.name} range.`)\r\n        }\r\n        this._addField(key, index, value, item.name)\r\n        return this\r\n    }\r\n})\r\n\r\nif (typeof Symbol !== 'undefined') {\r\n    InputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = InputMessage.prototype.toJSON\r\n}\r\n\r\nmodule.exports = InputMessage\r\n","// source: https://gist.github.com/jonleighton/958841\r\n/*\r\nMIT LICENSE\r\nCopyright 2011 Jon Leighton\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\nexport function encode(buffer) {\r\n    let base64    = ''\r\n    let encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\n\r\n    let bytes         = new Uint8Array(buffer)\r\n    let byteLength    = bytes.byteLength\r\n    let byteRemainder = byteLength % 3\r\n    let mainLength    = byteLength - byteRemainder\r\n\r\n    let a, b, c, d\r\n    let chunk\r\n\r\n    // Main loop deals with bytes in chunks of 3\r\n    for (let i = 0; i < mainLength; i = i + 3) {\r\n        // Combine the three bytes into a single integer\r\n        chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]\r\n\r\n        // Use bitmasks to extract 6-bit segments from the triplet\r\n        a = (chunk & 16515072) >> 18 // 16515072 = (2^6 - 1) << 18\r\n        b = (chunk & 258048)   >> 12 // 258048   = (2^6 - 1) << 12\r\n        c = (chunk & 4032)     >>  6 // 4032     = (2^6 - 1) << 6\r\n        d = chunk & 63               // 63       = 2^6 - 1\r\n\r\n        // Convert the raw binary segments to the appropriate ASCII encoding\r\n        base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]\r\n    }\r\n\r\n    // Deal with the remaining bytes and padding\r\n    if (byteRemainder === 1) {\r\n        chunk = bytes[mainLength]\r\n\r\n        a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2\r\n\r\n        // Set the 4 least significant bits to zero\r\n        b = (chunk & 3)   << 4 // 3   = 2^2 - 1\r\n\r\n        base64 += encodings[a] + encodings[b] + '=='\r\n    } else if (byteRemainder === 2) {\r\n        chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]\r\n\r\n        a = (chunk & 64512) >> 10 // 64512 = (2^6 - 1) << 10\r\n        b = (chunk & 1008)  >>  4 // 1008  = (2^6 - 1) << 4\r\n\r\n        // Set the 2 least significant bits to zero\r\n        c = (chunk & 15)    <<  2 // 15    = 2^4 - 1\r\n\r\n        base64 += encodings[a] + encodings[b] + encodings[c] + '='\r\n    }\r\n\r\n    return base64\r\n}\r\n\r\n\r\n","import Long from 'long'\r\n\r\nexport default {\r\n    _dump (html = false, indentSize = 2, indent = 0) {\r\n        let str = ''\r\n\r\n        let ind = (raw, ...args) => {\r\n            let s = ''\r\n            for (let i = 0; i < args.length; i++) {\r\n                s += raw[i] + args[i]\r\n            }\r\n            s += raw[raw.length - 1]\r\n\r\n            let spaces = ''\r\n            for (let i = 0; i < indent; i++) {\r\n                spaces += ' '\r\n            }\r\n\r\n            return s.split('\\n').map(i => spaces + i).join('\\n') + '\\n'\r\n        }\r\n\r\n        let tab = () => indent += indentSize\r\n        let stab = () => indent -= indentSize\r\n\r\n        if (html) {\r\n            str += ind`<div class=\"protoflex-dump\">`\r\n        }\r\n\r\n        for (let key in this.fields) {\r\n            if (this.fields.hasOwnProperty(key)) {\r\n                for (let index = 0; index < this.fields[key].length; index++) {\r\n                    if (html) {\r\n                        str +=\r\n                            ind`<div class=\"protoflex-dump-field\" data-type=${JSON.stringify(this.fields[key][index].type)}>`\r\n                    }\r\n                    let possibleTypes = key in this._knownFields\r\n                                        ? this._knownFields[key]\r\n                                        : DUMPER_POSSIBLE_TYPES[this.fields[key][index].type]\r\n\r\n                    if (this.fields[key][index].type === 'lengthDelimited' && this.fields[key][index].value.length\r\n                        === 0) {\r\n                        possibleTypes = ['string', 'bytes']\r\n                    }\r\n\r\n                    if (html) {\r\n                        str +=\r\n                            ind`<div class=\"protoflex-dump-header\">Field <span class=\"protoflex-dump-header__key\">${key}</span>, index <span class=\"protoflex-dump-header__index\">${index}</span>:</div>`\r\n                    } else {\r\n                        str += ind`Field ${key}, index ${index}:`\r\n                    }\r\n                    tab()\r\n                    if (html) {\r\n                        str +=\r\n                            ind`<div class=\"protoflex-dump-type\">(primitive: <span class=\"protoflex-dump-type__primitive\">${this.fields[key][index].type}</span>, possible types: <span class=\"protoflex-dump-type__possibles\">${possibleTypes.join(\r\n                                ', ')}</span>)</div>`\r\n                    } else {\r\n                        str +=\r\n                            ind`(primitive: ${this.fields[key][index].type}, possible types: ${possibleTypes.join(', ')})`\r\n                    }\r\n                    for (let i = 0; i < possibleTypes.length; i++) {\r\n                        let type = possibleTypes[i]\r\n                        if (type === 'packed') {\r\n                            let possiblePackedTypes = [].concat.apply([], DUMPER_POSSIBLE_TYPES.packed\r\n                                .filter(it => this.fields[key][index].value.length % it.div === 0)\r\n                                .map(i => i.types))\r\n                            if (!possiblePackedTypes.length) {\r\n                                if (html) {\r\n                                    str +=\r\n                                        ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">packed</span>: <span class=\"protoflex-dump-subtype__error\">nothing matches</span></div>`\r\n                                } else {\r\n                                    str += ind`as packed: nothing matches`\r\n\r\n                                }\r\n                                continue\r\n                            }\r\n\r\n                            if (html) {\r\n                                str +=\r\n                                    ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">packed</span>:`\r\n                            } else {\r\n                                str += ind`as packed:`\r\n                            }\r\n                            tab()\r\n\r\n                            if (html) {\r\n                                str +=\r\n                                    ind`<div class=\"protoflex-dump-type\">(possible: <span class=\"protoflex-dump-type__possibles\">${possiblePackedTypes.join(\r\n                                        ', ')}</span>)</div>`\r\n                            } else {\r\n                                str += ind`(possible: ${possiblePackedTypes.join(', ')})`\r\n                            }\r\n                            for (let j = 0; j < possiblePackedTypes.length; j++) {\r\n                                let ptype = possiblePackedTypes[j]\r\n\r\n                                let oldFields = this.fields[key]\r\n                                let s, err = false\r\n                                try {\r\n                                    this.repeated(key, ptype, index)\r\n                                    s = `[${this.array(key, ptype).join(', ')}]`\r\n                                } catch (e) {\r\n                                    s = e\r\n                                    err = true\r\n                                }\r\n\r\n                                if (html) {\r\n                                    str +=\r\n                                        ind`<div class=\"protoflex-dump-subtype\">as <span class=\"protoflex-dump-subtype__type\">${ptype}[]</span>: <div class=\"protoflex-dump-subtype__${err\r\n                                                                                                                                                                                       ? 'error'\r\n                                                                                                                                                                                       : 'value'}\">${s}</div></div>`\r\n                                } else {\r\n                                    str += ind`as ${ptype}[]: ${s}`\r\n                                }\r\n\r\n                                this.fields[key] = oldFields\r\n                            }\r\n                            stab()\r\n                            if (html) {\r\n                                str += ind`</div>`\r\n                            }\r\n                        } else {\r\n                            try {\r\n                                let res = this[type](key, index)\r\n                                if (type === 'message') {\r\n                                    res = '\\n' + res._dump(html, indentSize, indent)\r\n                                } else if (res instanceof Long || typeof res === 'bigint') {\r\n                                    res = res.toString()\r\n                                } else if (typeof res !== 'object') {\r\n                                    res = JSON.stringify(res)\r\n                                }\r\n                                if (html) {\r\n                                    str +=\r\n                                        ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">${type}</span>: <div class=\"protoflex-dump-subtype__value\">${res}</div></div>`\r\n                                } else {\r\n                                    str += ind`as ${type}: ${res}`\r\n                                }\r\n                            } catch (e) {\r\n                                if (html) {\r\n                                    str +=\r\n                                        ind`<div class=\"protoflex-dump-subtype\" data-subtype=${JSON.stringify(type)}>as <span class=\"protoflex-dump-subtype__type\">${type}</span>: <div class=\"protoflex-dump-subtype__error\">${e}</div></div>`\r\n                                } else {\r\n                                    str += ind`as ${type}: ${e}`\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    stab()\r\n                    if (html) {\r\n                        str += ind`</div>`\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (html) {\r\n            str += ind`</div>`\r\n        }\r\n\r\n        return str.trimEnd()\r\n    },\r\n\r\n    dump (html = 1, indentSize = 2, indent = 0) {\r\n        return this._dump(html, indentSize, indent)\r\n    },\r\n}\r\n\r\nconst DUMPER_POSSIBLE_TYPES = {\r\n    varint: ['int64', 'uint64', 'sint64'],\r\n    fixed32: ['fixed32', 'sfixed32', 'float'],\r\n    lengthDelimited: ['hex', 'string', 'message', 'packed'],\r\n    fixed64: ['fixed64', 'sfixed64', 'double'],\r\n    packed: [\r\n        { div: 1, types: ['int64', 'uint64', 'sint64'] },\r\n        { div: 4, types: ['fixed32', 'sfixed32', 'float'] },\r\n        { div: 8, types: ['fixed64', 'sfixed64', 'double'] },\r\n    ],\r\n}\r\n","const OutputMessage = require('./output-message')\r\nconst InputMessage = require('./input-message')\r\nconst Deserializer = require('./deserializer')\r\nconst ja = require('./json-api')\r\nconst utils = require('./utils')\r\n\r\nconst parse = v => new OutputMessage(v, new Deserializer(v).parse())\r\nconst create = () => new InputMessage()\r\n\r\nfunction _prepareJsonInput (ip, j) {\r\n    for (let key in j.fields) {\r\n        if (j.fields.hasOwnProperty(key)) {\r\n            for (let i = 0; i < j.fields[key].length; i++) {\r\n                if (j.fields[key][i].type === 'message') {\r\n                    let ip = new InputMessage()\r\n                    j.fields[key][i].value = _prepareJsonInput(ip, j.fields[key][i].value)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ip.unpacked(j.unpacked)\r\n    ip.fields = j.fields\r\n\r\n    return ip\r\n}\r\n\r\nconst fromJson = j => {\r\n    let ip = new InputMessage()\r\n    let data = ja.jsonToInput(j)\r\n    ip = _prepareJsonInput(ip, data)\r\n    return ip\r\n}\r\n\r\nconst fromHex = h => parse(utils.fromHex(h))\r\n\r\nmodule.exports = {\r\n    OutputMessage,\r\n    InputMessage,\r\n    parse,\r\n    fromHex,\r\n    create,\r\n    fromJson,\r\n}\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=style&index=0&lang=css&\"","const Long = require('long')\r\nconst { PROTOBUF_TYPES, DEFAULT_VALUES } = require('./constants')\r\nconst { toByteArray, fromByteArray } = require('./utils')\r\nconst LongBits = require('./longbits')\r\n\r\nfunction inferTypeByValue (value) {\r\n    if (value === null || value === undefined || (typeof value === 'number' && isNaN(value))) {\r\n        return null\r\n    }\r\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\r\n        instanceof Uint8Array) {\r\n        return 'bytes'\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return 'repeated'\r\n    }\r\n    if (typeof value === 'string') {\r\n        return 'string'\r\n    }\r\n    if (typeof value === 'number') {\r\n        return value % 1 === 0 ? 'int32' : 'float'\r\n    }\r\n    if (typeof value === 'bigint') {\r\n        return 'int64'\r\n    }\r\n    if (typeof value === 'boolean') {\r\n        return 'bool'\r\n    }\r\n    if (value.constructor.name === 'Object') {\r\n        for (let key in value) {\r\n            if (value.hasOwnProperty(key) && key !== 'unpacked') {\r\n                if (key === 'value') {\r\n                    return inferTypeByValue(value.value)\r\n                }\r\n                if (PROTOBUF_TYPES.indexOf(key) > -1) {\r\n                    return key\r\n                }\r\n                return 'message'\r\n            }\r\n        }\r\n        return 'message'\r\n    }\r\n    if (value instanceof Long) {\r\n        return value.unsigned ? 'uint64' : 'int64'\r\n    }\r\n    return null\r\n}\r\n\r\nfunction _coerceInputTo (value, type) {\r\n    if (type === 'message') {\r\n        return jsonToInput(value)\r\n    }\r\n    if (type === 'repeated') {\r\n        let ret = []\r\n        for (let p = 0; p < value.length; p++) {\r\n            let val = value[p]\r\n            let type = inferTypeByValue(val)\r\n            if (val && val.constructor.name === 'Object' && type !== 'message') {\r\n                val = val[type]\r\n            }\r\n            ret[p] = {\r\n                type,\r\n                value: _coerceInputTo(val, type),\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\r\n        instanceof Uint8Array) {\r\n        return Array.from(value)\r\n    }\r\n    if ((type === 'int64' || type === 'uint64' || type === 'sint64' || type === 'fixed64') && !(value\r\n        instanceof Long)) {\r\n        return typeof value === 'number' ? Long.fromNumber(value, type === 'uint64') :\r\n            typeof value === 'bigint' ?\r\n                Long.fromString(value.toString(), type === 'uint64') :\r\n                Long.fromString(value, type === 'uint64')\r\n    }\r\n    if (type === 'int32' || type === 'uint32' || type === 'sint32' || type === 'fixed32') {\r\n        return parseInt(value)\r\n    }\r\n    if (type === 'bytes') {\r\n        if (!Array.isArray(value)) {\r\n            return toByteArray(value)\r\n        }\r\n        return value\r\n    }\r\n    if (type === 'string') {\r\n        if (Array.isArray(value)) {\r\n            return fromByteArray(value)\r\n        }\r\n        return value\r\n    }\r\n    if (value && value.constructor.name === 'Object' && type !== 'message') {\r\n        return value[type]\r\n    }\r\n    return value\r\n}\r\n\r\nfunction jsonToInput (json) {\r\n    if (typeof json === 'string') {\r\n        json = JSON.parse(json)\r\n    }\r\n\r\n    let ret = {}\r\n    let unpacked = []\r\n\r\n    for (let j in json) {\r\n        if (json.hasOwnProperty(j)) {\r\n            if (!isNaN(parseInt(j))) {\r\n                if (!ret[j]) {\r\n                    ret[j] = []\r\n                }\r\n                let type = inferTypeByValue(json[j])\r\n                if (type === null) continue\r\n                let value = json[j]\r\n                if (value && value.constructor.name === 'Object' && type !== 'message') {\r\n                    if (value.unpacked) {\r\n                        unpacked[unpacked.length] = j\r\n                    }\r\n                    value = 'value' in value ? value.value : value[type]\r\n                }\r\n\r\n                value = _coerceInputTo(value, type)\r\n\r\n                if (type === 'repeated') {\r\n                    for (let i = 0; i < value.length; i++) {\r\n                        ret[j][ret[j].length] = value[i]\r\n                    }\r\n                } else {\r\n                    ret[j][ret[j].length] = {\r\n                        type,\r\n                        value,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        fields: ret,\r\n        unpacked,\r\n    }\r\n}\r\n\r\nfunction inputToJson (msg, constructor) {\r\n    let ret = {}\r\n    let fields = msg.fields\r\n\r\n    for (let key in fields) {\r\n        if (fields.hasOwnProperty(key)) {\r\n            if (!ret[key]) {\r\n                ret[key] = []\r\n            }\r\n\r\n            for (let index = 0; index < fields[key].length; index++) {\r\n                let field = fields[key][index]\r\n                if (field === undefined) continue // sparse\r\n\r\n                let value = field.value\r\n\r\n                if (value instanceof Long) {\r\n                    value = value.toString()\r\n                }\r\n\r\n                if (value instanceof constructor) {\r\n                    value = inputToJson(value, constructor)\r\n                }\r\n\r\n                let itype = inferTypeByValue(value)\r\n\r\n                if (itype !== field.type) {\r\n                    value = {\r\n                        [field.type]: value,\r\n                    }\r\n                }\r\n\r\n                ret[key][ret[key].length] = value\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let key in ret) {\r\n        if (ret.hasOwnProperty(key)) {\r\n            if (ret[key].length === 1) {\r\n                ret[key] = ret[key][0]\r\n            } else if (msg._unpacked[key]) {\r\n                ret[key] = {\r\n                    unpacked: true,\r\n                    value: ret[key],\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return ret\r\n}\r\n\r\nfunction outputToJson (msg) {\r\n    let ret = {}\r\n    let fields = msg.fields\r\n\r\n    for (let key in fields) {\r\n        if (fields.hasOwnProperty(key)) {\r\n            if (!ret[key]) {\r\n                ret[key] = []\r\n            }\r\n            for (let i = 0; i < fields[key].length; i++) {\r\n                let f = fields[key][i]\r\n                let v = f.value\r\n                if (f.type === 'lengthDelimited') {\r\n                    v = msg.data.slice(v.start, v.end)\r\n                    try {\r\n                        v = outputToJson(msg.message(key, i))\r\n                    } catch (e) {\r\n                        v = fromByteArray(v)\r\n                    }\r\n                }\r\n                if (f.type === 'varint') {\r\n                    v = msg._varint(key, i)\r\n                }\r\n                if (v instanceof LongBits) {\r\n                    v = v.toLong().toString()\r\n                }\r\n\r\n                ret[key][ret[key].length] = v\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let key in msg._knownFields) {\r\n        if (msg._knownFields.hasOwnProperty(key) && msg._knownFields[key].length) {\r\n            let typ = msg._knownFields[key][0]\r\n            if (!(key in ret)) {\r\n                let val = DEFAULT_VALUES[typ]\r\n                if (typeof val === 'number') val += ''\r\n                if (val instanceof LongBits) val = val.toLong()\r\n                if (val instanceof Long) val = val.toString()\r\n                ret[key] = [val]\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let key in ret) {\r\n        if (ret.hasOwnProperty(key) && ret[key].length === 1) {\r\n            ret[key] = ret[key][0]\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\nmodule.exports = {\r\n    jsonToInput,\r\n    outputToJson,\r\n    inputToJson,\r\n}\r\n","const {\r\n    TWO_TO_52,\r\n    TWO_TO_32,\r\n    TWO_TO_23,\r\n    TWO_TO_20,\r\n    MIN_FLOAT,\r\n    MAX_FLOAT,\r\n    MIN_DOUBLE,\r\n    MAX_DOUBLE,\r\n} = require('./constants')\r\n\r\nfunction zigZagDecode (val, isBigint = false) {\r\n    if (!isBigint) {\r\n        return val & 0x1 ? (val >> 1) ^ (~0) : val >> 1\r\n    }\r\n    return val.and(0x1) ? val.shiftRight(1).xor(~0) : val.shiftRight(1)\r\n}\r\n\r\nfunction joinDouble (lo, hi) {\r\n    let sign = (hi >> 31) * 2 + 1\r\n    let exp = (hi >> 20) & 0x7ff\r\n    let mant = TWO_TO_32 * (hi & 0xfffff) + lo\r\n\r\n    if (exp === 0x7ff) {\r\n        if (mant) {\r\n            return NaN\r\n        } else {\r\n            return sign * Infinity\r\n        }\r\n    }\r\n\r\n    if (exp === 0) {\r\n        return sign * Math.pow(2, -1074) * mant\r\n    } else {\r\n        return sign * Math.pow(2, exp - 1075) * (mant + TWO_TO_52)\r\n    }\r\n}\r\n\r\nfunction joinFloat (lo) {\r\n    let sign = (lo >> 31) * 2 + 1\r\n    let exp = (lo >> 23) & 0x7ff\r\n    let mant = lo & 0x7fffff\r\n\r\n    if (exp === 0xff) {\r\n        if (mant) {\r\n            return NaN\r\n        } else {\r\n            return sign * Infinity\r\n        }\r\n    }\r\n\r\n    if (exp === 0) {\r\n        return sign * Math.pow(2, -149) * mant\r\n    } else {\r\n        return sign * Math.pow(2, exp - 150) * (mant + TWO_TO_23)\r\n    }\r\n}\r\n\r\nfunction splitFloat (value) {\r\n    let sign = value < 0 ? 1 : 0\r\n    if (sign) {\r\n        value = -value\r\n    }\r\n    let exp\r\n    let mant\r\n\r\n    if (value === 0) {\r\n        return 1 / value < 0 ? 0x80000000 : 0\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n        return 0x7FFFFFFF\r\n    }\r\n\r\n    if (value > MAX_FLOAT) {\r\n        return ((sign << 31) | (0x7F800000)) >>> 0\r\n    }\r\n\r\n    if (value < MIN_FLOAT) {\r\n        mant = Math.round(value / Math.pow(2, -149))\r\n        return ((sign << 31) | mant) >>> 0\r\n    }\r\n\r\n    exp = Math.floor(Math.log(value) / Math.LN2)\r\n    mant = value * Math.pow(2, -exp)\r\n    mant = Math.round(mant * TWO_TO_23) & 0x7FFFFF\r\n\r\n    return ((sign << 31) | ((exp + 127) << 23) | mant) >>> 0\r\n}\r\n\r\nfunction splitDouble (value) {\r\n    let sign = value < 0 ? 1 : 0\r\n    if (sign) {\r\n        value = -value\r\n    }\r\n    let exp\r\n    let mant\r\n    let mantHigh\r\n    let mantLow\r\n\r\n    if (value === 0) {\r\n        return { hi: 1 / value < 0 ? 0x80000000 : 0, lo: 0 }\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n        return { hi: 0x7FFFFFFF, lo: 0xFFFFFFFF }\r\n    }\r\n\r\n    if (value > MAX_DOUBLE) {\r\n        return { hi: ((sign << 31) | (0x7FF00000)) >>> 0, lo: 0 }\r\n    }\r\n\r\n    if (value < MIN_DOUBLE) {\r\n        mant = value / Math.pow(2, -149)\r\n        mantHigh = value / TWO_TO_32\r\n        return {\r\n            hi: ((sign << 31) | mantHigh) >>> 0,\r\n            lo: mant >>> 0,\r\n        }\r\n    }\r\n\r\n    let maxDoubleExponent = 1023\r\n    let minDoubleExponent = -1022\r\n    let x = value\r\n    exp = 0\r\n    if (x >= 2) {\r\n        while (x >= 2 && exp < maxDoubleExponent) {\r\n            exp++\r\n            x = x / 2\r\n        }\r\n    } else {\r\n        while (x < 1 && exp > minDoubleExponent) {\r\n            x = x * 2\r\n            exp--\r\n        }\r\n    }\r\n    mant = value * Math.pow(2, -exp)\r\n\r\n    mantHigh = (mant * TWO_TO_20) & 0xFFFFF\r\n    mantLow = (mant * TWO_TO_52) >>> 0\r\n\r\n    return {\r\n        hi: ((sign << 31) | ((exp + 1023) << 20) | mantHigh) >>> 0,\r\n        lo: mantLow,\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    splitDouble,\r\n    splitFloat,\r\n    joinDouble,\r\n    joinFloat,\r\n    zigZagDecode,\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"output\",staticClass:\"repl-output\"},[_c('div',{staticClass:\"repl-header level\"},[_c('div',{staticClass:\"level-left\"},[_vm._t(\"default\"),_c('h2',[_vm._v(\"Output\")])],2),_c('div',{staticClass:\"level-right\"},[_c('b-button',{staticStyle:{\"margin-right\":\"4px\"},attrs:{\"icon-right\":\"backup-restore\"},on:{\"click\":_vm.resetSandbox}}),_c('b-button',{attrs:{\"icon-right\":\"broom\"},on:{\"click\":_vm.clear}})],1)]),_c('div',{staticClass:\"repl-history\"},_vm._l((_vm.items),function(it,i){return _c('div',{key:i,staticClass:\"repl-history-item\"},[(it.console)?_c('div',{staticClass:\"repl-history-item__console\",domProps:{\"innerHTML\":_vm._s(it.html)}}):_c('pre',{directives:[{name:\"hljs\",rawName:\"v-hljs\"}],staticClass:\"repl-history-item__code\"},[_c('code',{staticClass:\"javascript\"},[_vm._v(_vm._s(it.expr))])]),('result' in it)?_c('b-message',{staticClass:\"is-family-monospace repl-history-item__response\"},[_c('pre',{directives:[{name:\"hljs\",rawName:\"v-hljs\"}]},[_c('code',{staticClass:\"javascript\"},[_vm._v(_vm._s(it.result))])])]):_vm._e(),('error' in it)?_c('b-message',{staticClass:\"is-family-monospace repl-history-item__error\",attrs:{\"type\":\"is-danger\"}},[_c('pre',[_c('code',[_vm._v(_vm._s(it.error))])])]):_vm._e()],1)}),0),(_vm.items.length)?_c('div',{staticClass:\"repl-spacer\"}):_c('div',{staticClass:\"repl-placeholder\"},[_c('h1',[_vm._v(\"🐓\")]),_c('h2',[_vm._v(\"Nothing here but us chickens.\")])]),_c('div',{staticClass:\"repl-input\"},[_c('b-field',[_c('b-input',{staticClass:\"is-expanded is-family-monospace repl-input__field\",style:({ height: 48 + Math.min(_vm.inputLines * 24, 192) + 'px' }),attrs:{\"type\":\"textarea\"},nativeOn:{\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.evaluate($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"])){ return null; }return _vm.fromHistoryEvent($event, 1)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"])){ return null; }return _vm.fromHistoryEvent($event, -1)}]},model:{value:(_vm.input),callback:function ($$v) {_vm.input=$$v},expression:\"input\"}}),_c('p',{staticClass:\"control\"},[_c('b-button',{attrs:{\"icon-right\":\"send\",\"disabled\":this.input.length === 0},on:{\"click\":_vm.evaluate}})],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import util from 'util'\r\n\r\nlet sym\r\n\r\nif (typeof Symbol !== 'undefined') {\r\n    sym = Symbol.for('nodejs.util.inspect.custom')\r\n}\r\n\r\nexport default function inspect (obj) {\r\n    if (obj && typeof obj === 'object' && 'toJSON' in obj) {\r\n        obj = obj.toJSON()\r\n    }\r\n    if (obj && sym && obj[sym]) {\r\n        obj = obj[sym]()\r\n    }\r\n    return typeof obj === 'string' ? obj || '<empty string>' : util.inspect(obj, { compact: false, depth: 3 })\r\n}\r\n","export class LinkedList {\r\n    constructor () {\r\n        this._first = null\r\n        this._last = null\r\n        this.length = 0\r\n    }\r\n\r\n    push (item) {\r\n        let value = {\r\n            prev: null,\r\n            next: null,\r\n            value: item,\r\n        }\r\n\r\n        if (this._first === null) {\r\n            this._first = this._last = value\r\n        } else {\r\n            value.prev = this._last\r\n            this._last.next = this._last = value\r\n        }\r\n        this.length++\r\n    }\r\n\r\n    pop (index = this.length - 1) {\r\n        if (index < 0 || index >= this.length) return undefined\r\n        let ret\r\n        if (index === 0) {\r\n            ret = this._first\r\n            this._first = this._first.next\r\n            this._first.prev = null\r\n        } else if (index === this.length - 1) {\r\n            ret = this._last\r\n            this._last = this._last.prev\r\n            this._last.prev = null\r\n        } else {\r\n            ret = this._get(index)\r\n            let prev = ret.prev\r\n            let next = ret.next\r\n\r\n            prev.next = next\r\n            next.prev = prev\r\n        }\r\n\r\n        this.length -= 1\r\n\r\n        return ret.value\r\n    }\r\n\r\n    shift () {\r\n        return this.pop(0)\r\n    }\r\n\r\n    unshift (item) {\r\n        let value = {\r\n            prev: null,\r\n            next: null,\r\n            value: item,\r\n        }\r\n\r\n        if (this._first === null) {\r\n            this._first = this._last = value\r\n        } else {\r\n            value.next = this._first\r\n            this._first.prev = this._first = value\r\n        }\r\n\r\n        this.length++\r\n    }\r\n\r\n    _get (index) {\r\n        index = parseInt(index)\r\n        if (index === undefined || isNaN(index)) return {}\r\n        if (index === 0) {\r\n            return this._first\r\n        }\r\n        if (index === this.length - 1) {\r\n            return this._last\r\n        }\r\n        if (index >= this.length) {\r\n            return {}\r\n        }\r\n\r\n        if (index < this.length / 2) {\r\n            let cur = this._first\r\n            for (let i = 0; i < index; i++) {\r\n                cur = cur.next\r\n            }\r\n            return cur\r\n        } else {\r\n            let cur = this._last\r\n            for (let i = 0; i < this.length - index - 1; i++) {\r\n                cur = cur.prev\r\n            }\r\n            return cur\r\n        }\r\n    }\r\n\r\n    toArray () {\r\n        if (this.length === 0) {\r\n            return []\r\n        }\r\n        let cur = this._first\r\n        let r = [cur.value]\r\n        while (cur.next !== null) {\r\n            r[r.length] = cur.next.value\r\n            cur = cur.next\r\n        }\r\n        return r\r\n    }\r\n\r\n    join (sep) {\r\n        return this.toArray().join(sep)\r\n    }\r\n\r\n    toString () {\r\n        return this.toArray().toString()\r\n    }\r\n\r\n    get (index) {\r\n        return this._get(index).value\r\n    }\r\n\r\n    last () {\r\n        return this._last.value\r\n    }\r\n\r\n    first () {\r\n        return this._first.value\r\n    }\r\n\r\n    clear () {\r\n        this._first = null\r\n        this._last = null\r\n        // and let GC do its work\r\n\r\n        this.length = 0\r\n    }\r\n}\r\n\r\nexport class LogList extends LinkedList {\r\n    constructor (capacity = 50) {\r\n        super()\r\n\r\n        this.capacity = capacity\r\n    }\r\n\r\n    unshift (item) {\r\n        super.unshift(item)\r\n        this._checkCapacity()\r\n    }\r\n\r\n    push (item) {\r\n        throw Error('cant be used')\r\n    }\r\n\r\n    pop (item) {\r\n        throw Error('cant be used')\r\n    }\r\n\r\n    shift (item) {\r\n        throw Error('cant be used')\r\n    }\r\n\r\n    _checkCapacity () {\r\n        while (this.length > this.capacity) {\r\n            // removing first element\r\n            this._first = this._first.next\r\n            this._first.prev = null\r\n        }\r\n    }\r\n}\r\n","class Sandbox {\r\n    constructor () {\r\n        this.iframe = document.createElement('iframe')\r\n        this.iframe.style.display = 'none'\r\n        document.body.appendChild(this.iframe)\r\n\r\n        this.window = this.iframe.contentWindow\r\n        this.document = this.iframe.contentDocument\r\n\r\n        this.document.open()\r\n        this.document.write(`<script>var MSIE/*@cc_on =1@*/;_e=MSIE?this:{eval:function(s){return window.eval(s)}}</script>`)\r\n        this.document.close()\r\n        this._eval = this.window._e\r\n        delete this.window._e\r\n\r\n        this.window.loadScript = this.loadScript\r\n    }\r\n\r\n    evaluate (expr) {\r\n        return this._eval.eval(expr)\r\n    }\r\n\r\n    loadScript (src) {\r\n        return new Promise((resolve, reject) => {\r\n            this.evaluate(`_s = document.createElement('script');_s.setAttribute('type','text/javascript');_s.setAttribute('src',${JSON.stringify(src)}`)\r\n            this.window._s.onload = resolve\r\n            this.window._s.onerror = reject\r\n            this.window._s.onreadystatechange = (s) => {\r\n                if (this.window._s === 'complete' || this.window._s === 'loaded') {\r\n                    resolve()\r\n                }\r\n            }\r\n            this.evaluate('document.getElementsByTagName(\\'head\\')[0].appendChild(_s);delete _s;')\r\n        })\r\n    }\r\n\r\n    dispose () {\r\n        document.body.removeChild(this.iframe)\r\n    }\r\n}\r\n\r\n\r\nexport default Sandbox\r\n","<template>\r\n    <div class=\"repl-output\" ref=\"output\">\r\n        <div class=\"repl-header level\">\r\n            <div class=\"level-left\">\r\n                <slot/>\r\n                <h2>Output</h2>\r\n            </div>\r\n            <div class=\"level-right\">\r\n                <b-button icon-right=\"backup-restore\" style=\"margin-right: 4px\" @click=\"resetSandbox\"/>\r\n                <b-button icon-right=\"broom\" @click=\"clear\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"repl-history\">\r\n            <div class=\"repl-history-item\" v-for=\"(it, i) in items\" :key=\"i\">\r\n                <div class=\"repl-history-item__console\" v-if=\"it.console\" v-html=\"it.html\"></div>\r\n                <pre class=\"repl-history-item__code\" v-hljs v-else><code class=\"javascript\">{{it.expr}}</code></pre>\r\n                <b-message class=\"is-family-monospace repl-history-item__response\" v-if=\"'result' in it\">\r\n                    <pre v-hljs><code class=\"javascript\">{{it.result}}</code></pre>\r\n                </b-message>\r\n                <b-message type=\"is-danger\" class=\"is-family-monospace repl-history-item__error\" v-if=\"'error' in it\">\r\n                    <pre><code>{{it.error}}</code></pre>\r\n                </b-message>\r\n            </div>\r\n        </div>\r\n        <div class=\"repl-spacer\" v-if=\"items.length\"></div>\r\n        <div class=\"repl-placeholder\" v-else>\r\n            <h1>🐓</h1>\r\n            <h2>Nothing here but us chickens.</h2>\r\n        </div>\r\n        <div class=\"repl-input\">\r\n            <b-field>\r\n                <b-input\r\n                        class=\"is-expanded is-family-monospace repl-input__field\"\r\n                        @keydown.native.enter=\"evaluate\"\r\n                        @keydown.native.up=\"fromHistoryEvent($event, 1)\"\r\n                        @keydown.native.down=\"fromHistoryEvent($event, -1)\"\r\n                        v-model=\"input\"\r\n                        type=\"textarea\"\r\n                        :style=\"{ height: 48 + Math.min(inputLines * 24, 192) + 'px' }\"\r\n                />\r\n                <p class=\"control\">\r\n                    <b-button icon-right=\"send\" @click=\"evaluate\" :disabled=\"this.input.length === 0\"/>\r\n                </p>\r\n            </b-field>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { LogList } from '../collections'\r\nimport Sandbox from '../sandbox'\r\nimport inspect from '../inspect'\r\n\r\nexport default {\r\n    name: 'Repl',\r\n    props: {\r\n        globals: {\r\n            type: Object,\r\n            default: () => ({}),\r\n        },\r\n    },\r\n    data: () => ({\r\n        items: [],\r\n        input: '',\r\n        inputLines: 0,\r\n        history: new LogList(),\r\n        historyPosition: -1,\r\n\r\n        sandbox: null,\r\n    }),\r\n    methods: {\r\n        resetSandbox () {\r\n            this.sandbox = new Sandbox()\r\n            Object.assign(this.sandbox.window, this.globals)\r\n            const self = this\r\n            this.sandbox.window.console = {\r\n                log (...args) {\r\n                    let str = args.map(i => inspect(i))\r\n\r\n                    self.addResult({\r\n                        console: true,\r\n                        html: `<pre><code>${str.join(' ')}</code></pre>`,\r\n                    })\r\n                },\r\n            }\r\n            this.sandbox.window.clear = this.clear.bind(this)\r\n            this.clear()\r\n        },\r\n        clear () {\r\n            this.items = []\r\n        },\r\n        evaluate (ev) {\r\n            if (!(ev && (ev.shiftKey || ev.ctrlKey)) && this.input.length) {\r\n                if (ev) {\r\n                    ev.preventDefault()\r\n                    ev.stopPropagation()\r\n                }\r\n\r\n                this.runCode(this.input)\r\n\r\n\r\n                this.history.unshift(this.input)\r\n                this.historyPosition = -1\r\n                this.input = ''\r\n            }\r\n        },\r\n        runCode (expr) {\r\n            let item = {\r\n                expr,\r\n            }\r\n            this.addResult(item)\r\n\r\n            try {\r\n                let res = this.sandbox.evaluate(expr)\r\n                this.$set(item, 'result', inspect(res))\r\n                this.sandbox.window.$_ = res\r\n            } catch (e) {\r\n                this.$set(item, 'error', e)\r\n            }\r\n        },\r\n        addResult (res) {\r\n            this.items.push(res)\r\n        },\r\n        fromHistoryEvent (ev, delta) {\r\n            // need to get current caret line.\r\n            let line = ev.target.value.substr(0, ev.target.selectionStart).split('\\n').length - 1\r\n            if (line === 0 && delta > 0 || line === this.inputLines && delta < 0) {\r\n                this.fromHistory(delta)\r\n            }\r\n        },\r\n        fromHistory (delta) {\r\n            if (this.historyPosition >= this.history.length - 1 && delta > 0 || this.historyPosition === -1 && delta\r\n                < 0) {\r\n                return\r\n            }\r\n            this.historyPosition += delta\r\n            if (this.historyPosition <= -1) {\r\n                this.historyPosition = -1\r\n                this.input = ''\r\n            } else {\r\n                this.input = this.history.get(this.historyPosition)\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        input (v) {\r\n            let i = v.match(/\\n/g)\r\n            this.inputLines = (i || []).length\r\n        },\r\n        items () {\r\n            setTimeout(() => this.$refs.output.scrollTop = this.$refs.output.scrollHeight, 10)\r\n        }\r\n    },\r\n    mounted () {\r\n        this.resetSandbox()\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.repl-output {\r\n    background: #ededed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 1px solid #dbdbdb;\r\n    border-radius: 4px;\r\n    height: 85vh;\r\n    max-height: 85vh;\r\n    width: 45vw;\r\n    max-width: 45vw;\r\n    overflow: auto;\r\n    position: relative;\r\n}\r\n\r\n.repl-output pre {\r\n    padding: 8px;\r\n}\r\n\r\n.repl-spacer {\r\n    flex-grow: 1;\r\n}\r\n\r\n.repl-header.level {\r\n    margin: 0 !important;\r\n    padding: 8px 16px;\r\n    border-bottom: 1px solid #dbdbdb;\r\n    position: sticky;\r\n    background: #fff;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    box-shadow: 0 1px 8px -1px #555;\r\n}\r\n\r\n.repl-input {\r\n    position: sticky;\r\n    background: #fff;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    border-top: 1px solid #dbdbdb;\r\n    box-shadow: 0 -1px 8px -1px #555;\r\n}\r\n\r\n.repl-input textarea, .repl-input button {\r\n    border: none !important;\r\n    outline: none !important;\r\n    box-shadow: none !important;\r\n    height: 48px;\r\n    min-height: 48px !important;\r\n    max-height: 384px !important;\r\n\r\n    background: #fff;\r\n}\r\n\r\n.repl-input button {\r\n    width: 48px;\r\n}\r\n\r\n.repl-history-item pre {\r\n    background: transparent !important;\r\n    font-size: 14px;\r\n    color: #010101;\r\n}\r\n\r\n.repl-history-item .message {\r\n    margin: 4px !important;\r\n}\r\n\r\n.repl-history-item .message-body {\r\n    padding: 8px;\r\n    overflow-y: auto;\r\n    max-width: 100%;\r\n}\r\n\r\n.repl-placeholder {\r\n    flex-grow: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    color: #000000;\r\n    font-size: 24px;\r\n}\r\n\r\n.repl-history-item {\r\n    border-bottom: 1px solid #dbdbdb;\r\n    padding: 4px 0;\r\n    background-color: #fdfdfd;\r\n}\r\n\r\n.repl-history-item__code {\r\n    background-color: #fdfdfd;\r\n}\r\n\r\n.repl-history-item:first-child {\r\n    padding-top: 12px;\r\n}\r\n.repl-history-item:last-child {\r\n    padding-bottom: 18px;\r\n}\r\n\r\n.repl-input__field textarea {\r\n    resize: none;\r\n    height: 100%;\r\n    word-break: keep-all;\r\n    white-space: nowrap;\r\n    overflow: auto;\r\n}\r\n\r\n.hljs {\r\n    background: transparent !important;\r\n    padding: 0 !important;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Repl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Repl.vue?vue&type=template&id=f8042bf8&\"\nimport script from \"./Repl.vue?vue&type=script&lang=js&\"\nexport * from \"./Repl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Repl.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const {\r\n    joinDouble,\r\n    joinFloat,\r\n    zigZagDecode,\r\n} = require('./math')\r\nconst {\r\n    keyByMultiple,\r\n    fromByteArray,\r\n    toHex,\r\n} = require('./utils')\r\nconst {\r\n    VARINT_TYPES,\r\n    PACKABLE_TYPES,\r\n} = require('./constants')\r\nconst {\r\n    readVarint,\r\n    readFixed32,\r\n    readFixed64,\r\n    lazyReadVarint,\r\n} = require('./readers')\r\nconst Deserializer = require('./deserializer')\r\nconst InputMessage = require('./input-message')\r\nconst LongBits = require('./longbits')\r\nconst Long = require('long')\r\nconst { outputToJson } = require('./json-api')\r\n\r\nclass OutputMessage {\r\n    constructor (data, fields = []) {\r\n        this.data = data\r\n        this.fields = keyByMultiple(fields, 'key')\r\n        this._cache = {}\r\n        this._knownFields = {}\r\n    }\r\n\r\n    _assertHas (key, index = 0) {\r\n        let has = this.has(key, index)\r\n        if (!has) {\r\n            this._throwHas(key, index)\r\n        }\r\n        return has\r\n    }\r\n\r\n    _checkType (key, index, type, sub = false) {\r\n        this._assertHas(key, index)\r\n        // check for sub type\r\n        if (sub) {\r\n            if (key in this._knownFields &&\r\n                (this._knownFields[key].indexOf('any') > -1 || this._knownFields[key].indexOf(type) > -1)\r\n            ) {\r\n                return true\r\n            } else {\r\n                return key in this._knownFields ? this._knownFields[key].indexOf(type) > -1 : true\r\n            }\r\n        }\r\n        return type === this._typeToWireType(this.type(key, index))\r\n\r\n    }\r\n\r\n    _assertType (key, index, type, sub = false) {\r\n        if (!this._checkType(key, index, type, sub)) {\r\n            throw Error(`Field ${key} is not of type ${type}`)\r\n        }\r\n        return true\r\n    }\r\n\r\n    _cached (func, key, index, getter) {\r\n        let tag = `${func}(${key};${index})`\r\n        if (!(tag in this._cache)) {\r\n            this._cache[tag] = getter()\r\n        }\r\n        return this._cache[tag]\r\n    }\r\n\r\n    _throwHas (key, index) {\r\n        throw Error(`Object does not have ${key}:${index} field`)\r\n    }\r\n\r\n    _typeToWireType (type) {\r\n        if (VARINT_TYPES.indexOf(type) > -1) {\r\n            return 'varint'\r\n        }\r\n        if (type === 'fixed32' || type === 'fixed64') return type\r\n        return 'lengthDelimited'\r\n    }\r\n\r\n    known (...fields) {\r\n        fields.forEach(it => {\r\n            if (typeof it === 'number') {\r\n                this._knownFields[it] = ['any']\r\n            } else if (Array.isArray((it))) {\r\n                this.known(...it)\r\n            } else if (typeof it === 'object') {\r\n                for (let key in it) {\r\n                    if (it.hasOwnProperty(key)) {\r\n                        let val = it[key]\r\n                        if (!Array.isArray(val)) val = [val]\r\n                        this._knownFields[key] = val\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return this\r\n    }\r\n\r\n    has (key, index = 0, ignoreKnown = false) {\r\n        let has = key in this.fields && index in this.fields[key]\r\n        if (!ignoreKnown && key in this._knownFields) {\r\n            return true\r\n        }\r\n        return has\r\n    }\r\n\r\n    length (key) {\r\n        return this._assertHas(key) && this.fields[key].length\r\n    }\r\n\r\n    type (key, index = 0) {\r\n        if (this.has(key, index, true)) {\r\n            return this.fields[key][index].type\r\n        } else if (key in this._knownFields) {\r\n            return this._knownFields[key][0]\r\n        } else {\r\n            this._throwHas(key, index)\r\n        }\r\n    }\r\n\r\n    array (key, type) {\r\n        if (this.has(key, 0, true)) {\r\n            let ret = []\r\n            let i = 0\r\n            for (let k = 0; k < this.length(key); k++) {\r\n                ret[i++] = this.get(key, type, k)\r\n            }\r\n            return ret\r\n        } else if (key in this._knownFields) {\r\n            return []\r\n        } else {\r\n            this._throwHas(key, 0)\r\n        }\r\n    }\r\n\r\n    iter (key, type) {\r\n        if (this.has(key, 0, true)) {\r\n            let index = 0\r\n            const self = this\r\n            const length = this.length(key)\r\n\r\n            let ret = {\r\n                next () {\r\n                    if (index >= length) {\r\n                        return { done: true, value: undefined }\r\n                    }\r\n\r\n                    let value = self.get(key, type, index)\r\n\r\n                    index += 1\r\n\r\n                    return {\r\n                        value,\r\n                        done: false,\r\n                    }\r\n                },\r\n            }\r\n\r\n            if (typeof Symbol !== 'undefined' && Symbol.iterator) {\r\n                ret[Symbol.iterator] = () => ret\r\n            }\r\n\r\n            return ret\r\n        } else if (key in this._knownFields) {\r\n            return {\r\n                next () {\r\n                    return { value: undefined, done: true }\r\n                },\r\n            }\r\n        } else {\r\n            this._throwHas(key, 0)\r\n        }\r\n    }\r\n\r\n    get (key, type, index = 0) {\r\n        return this._assertHas(key, index) && this[type].call(this, key, index)\r\n    }\r\n\r\n    string (key, index = 0) {\r\n        this._assertType(key, index, 'lengthDelimited')\r\n        this._assertType(key, index, 'string', true)\r\n        if (!this.has(key, index, true)) {\r\n            return ''\r\n        }\r\n        let it = this.fields[key][index].value\r\n        if (!('_string' in this.fields[key][index])) {\r\n            this.fields[key][index]._string = fromByteArray(this.data, it.start, it.end)\r\n        }\r\n        return this.fields[key][index]._string\r\n    }\r\n\r\n    bytes (key, index = 0) {\r\n        this._assertType(key, index, 'lengthDelimited')\r\n        this._assertType(key, index, 'bytes', true)\r\n        if (!this.has(key, index, true)) {\r\n            return []\r\n        }\r\n        if (!('_buffer' in this.fields[key][index])) {\r\n            let it = this.fields[key][index].value\r\n            this.fields[key][index]._buffer = this.data.slice(it.start, it.end)\r\n        }\r\n        return this.fields[key][index]._buffer\r\n    }\r\n\r\n    hex (key, index = 0) {\r\n        return toHex(this.bytes(key, index))\r\n    }\r\n\r\n    message (key, index = 0) {\r\n        this._assertType(key, index, 'lengthDelimited')\r\n        this._assertType(key, index, 'message', true)\r\n        if (!this.has(key, index, true)) {\r\n            return new OutputMessage()\r\n        }\r\n        if (!('_message' in this.fields[key][index])) {\r\n            let it = this.fields[key][index].value\r\n            let deserializer = new Deserializer(this.data)\r\n            deserializer.offset = it.start\r\n            deserializer.length = it.end\r\n            this.fields[key][index]._message = new OutputMessage(this.data, deserializer.parse())\r\n        }\r\n        return this.fields[key][index]._message\r\n    }\r\n\r\n    fixed32 (key, index = 0) {\r\n        this._assertType(key, index, 'fixed32')\r\n        if (!this.has(key, index, true)) {\r\n            return 0\r\n        }\r\n        return this.fields[key][index].value >>> 0\r\n    }\r\n\r\n    fixed64 (key, index = 0) {\r\n        this._assertType(key, index, 'fixed64')\r\n        if (!this.has(key, index, true)) {\r\n            return Long(0, 0)\r\n        }\r\n        return this.fields[key][index].value.toLong(false)\r\n    }\r\n\r\n    float (key, index = 0) {\r\n        this._assertType(key, index, 'float', true)\r\n        return this._cached('float', key, index, () => joinFloat(this.fixed32(key, index)))\r\n    }\r\n\r\n    double (key, index = 0) {\r\n        this._assertType(key, index, 'fixed64')\r\n        this._assertType(key, index, 'float', true)\r\n        return this._cached('double', key, index, () => joinDouble(\r\n            this.fields[key][index].value.lo,\r\n            this.fields[key][index].value.hi,\r\n        ))\r\n    }\r\n\r\n    _varint (key, index = 0) {\r\n        if (!this.has(key, index, true)) {\r\n            return LongBits.zero\r\n        }\r\n        this._assertType(key, index, 'varint')\r\n        if (!('_varint' in this.fields[key][index])) {\r\n            let offset = this.fields[key][index].value\r\n            this.fields[key][index]._varint = readVarint(offset, this.data)\r\n        }\r\n        return this.fields[key][index]._varint\r\n    }\r\n\r\n    int32 (key, index = 0) {\r\n        this._assertType(key, index, 'int32', true)\r\n        return this._varint(key, index).toNumber()\r\n    }\r\n\r\n    int64 (key, index = 0) {\r\n        this._assertType(key, index, 'int64', true)\r\n        return this._varint(key, index, true).toLong(false)\r\n    }\r\n\r\n    uint32 (key, index = 0) {\r\n        this._assertType(key, index, 'uint32', true)\r\n        return this._varint(key, index).toNumber(true)\r\n    }\r\n\r\n    uint64 (key, index = 0) {\r\n        this._assertType(key, index, 'uint64', true)\r\n        return this._varint(key, index).toLong(true)\r\n    }\r\n\r\n    bool (key, index = 0) {\r\n        this._assertType(key, index, 'bool', true)\r\n        return !!this._varint(key, index).toNumber()\r\n    }\r\n\r\n    sint32 (key, index = 0) {\r\n        this._assertType(key, index, 'sint32', true)\r\n        return this._cached('sint32', key, index, () => zigZagDecode(this.int32(key, index)))\r\n    }\r\n\r\n    sint64 (key, index = 0) {\r\n        this._assertType(key, index, 'sint64', true)\r\n        return this._cached('sint64', key, index, () => this._varint(key, index).clone().zzDecode().toLong())\r\n    }\r\n\r\n    sfixed32 (key, index = 0) {\r\n        this._assertType(key, index, 'sfixed32', true)\r\n        if (!this.has(key, index, true)) {\r\n            return 0\r\n        }\r\n        return this.fields[key][index].value\r\n    }\r\n\r\n    sfixed64 (key, index = 0) {\r\n        this._assertType(key, index, 'fixed64')\r\n        if (!this.has(key, index, true)) {\r\n            return Long(0, 0)\r\n        }\r\n        this._assertType(key, index, 'sfixed64', true)\r\n        return this.fixed64(key, index)\r\n    }\r\n\r\n    _processPacked (type, item, output) {\r\n        let state = {\r\n            offset: item.value.start,\r\n            data: this.data,\r\n            length: item.value.end,\r\n        }\r\n        if (VARINT_TYPES.indexOf(type) > -1) {\r\n            while (state.offset < state.length) {\r\n                let value = lazyReadVarint.apply(state)\r\n                output.push({\r\n                    value,\r\n                    type: 'varint',\r\n                })\r\n            }\r\n        } else if (\r\n            type === 'fixed32' ||\r\n            type === 'float' ||\r\n            type === 'sfixed32' ||\r\n            type === 'fixed64' ||\r\n            type === 'double' ||\r\n            type === 'sfixed64'\r\n        ) {\r\n            while (state.offset < state.length) {\r\n                let val = (type === 'fixed32' || type === 'float' || type === 'sfixed32'\r\n                    ? readFixed32\r\n                    : readFixed64).apply(state)\r\n                output.push({\r\n                    value: val,\r\n                    type: type === 'fixed32' || type === 'float' || type === 'sfixed32' ? 'fixed32' : 'fixed64',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    repeated (key, type, lengthDelimitedIndex = -1) {\r\n        this._assertHas(key)\r\n        if (!this.has(key, 0, true)) {\r\n            return []\r\n        }\r\n        if (PACKABLE_TYPES.indexOf(type) === -1) return // forwards-compatibility\r\n        let newFields = []\r\n        if (lengthDelimitedIndex !== -1) {\r\n            let item = this.fields[key][lengthDelimitedIndex]\r\n            if (item.type === 'lengthDelimited') {\r\n                this._processPacked(type, item, newFields)\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.fields[key].length; i++) {\r\n                let item = this.fields[key][i]\r\n                if (item.type === 'lengthDelimited') {\r\n                    this._processPacked(type, item, newFields)\r\n                } else {\r\n                    // data is not packed\r\n                    newFields.push(item)\r\n                }\r\n            }\r\n        }\r\n        this.fields[key] = newFields\r\n        return this\r\n    }\r\n\r\n    toJSON () {\r\n        return outputToJson(this)\r\n    }\r\n\r\n    toInput () {\r\n        const msg = new InputMessage()\r\n        const fields = {}\r\n\r\n        for (let key in this.fields) {\r\n            const values = this.fields[key]\r\n            fields[key] = []\r\n\r\n            for (let i = 0; i < values.length; i++) {\r\n                const val = values[i]\r\n\r\n                if (val.type === 'varint') {\r\n                    fields[key].push({\r\n                        type: 'varint',\r\n                        value: val._varint ? val._varint : readVarint(val.value, this.data),\r\n                    })\r\n                } else if (val.type === 'lengthDelimited') {\r\n                    const obj = {\r\n                        type: 'lengthDelimited',\r\n                        value: val._buffer ? val._buffer : this.data.slice(val.value.start, val.value.end),\r\n                    }\r\n                    obj.tryToInput = () => new OutputMessage(obj.value, new Deserializer(obj.value).parse()).toInput()\r\n                    fields[key].push(obj)\r\n                } else {\r\n                    fields[key].push(val)\r\n                }\r\n            }\r\n        }\r\n        msg.fields = fields\r\n\r\n        return msg\r\n    }\r\n}\r\n\r\n\r\nif (typeof Symbol !== 'undefined') {\r\n    OutputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = OutputMessage.prototype.toJSON\r\n}\r\n\r\n\r\nmodule.exports = OutputMessage\r\n"],"sourceRoot":""}