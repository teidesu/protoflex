{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./node_modules/long/src/long.js","webpack:///./src/utils.js","webpack:///./src/longbits.js","webpack:///./src/readers.js","webpack:///./src/json-api.js","webpack:///./src/math.js","webpack:///./src/writers.js","webpack:///./src/deserializer.js","webpack:///./src/input-message.js","webpack:///./src/index.js","webpack:///./src/output-message.js","webpack:///./src/serializer.js"],"names":["VARINT_TYPES","PACKABLE_TYPES","PROTOBUF_TYPES","WIRE_TYPES","varint","fixed64","lengthDelimited","fixed32","WIRE_TYPES_NAMES","undefined","DEFAULT_VALUES","int32","int64","uint32","uint64","sint32","sint64","bool","sfixed32","sfixed64","bytes","string","message","double","float","module","exports","TWO_TO_20","TWO_TO_23","TWO_TO_32","TWO_TO_33","TWO_TO_52","TWO_TO_63","TWO_TO_64","MIN_UINT32","MAX_UINT32","MIN_INT32","MAX_INT32","MIN_INT64","MAX_INT64","MIN_UINT64","MAX_UINT64","MAX_FLOAT","MIN_FLOAT","MIN_DOUBLE","MAX_DOUBLE","require","readVarintAndLength","readVarint","writeNumberVarint","writeLongVarint","keyByMultiple","arr","key","ret","forEach","v","push","toHex","ar","toByteArray","i","length","RangeError","t","toString","fromHex","str","Error","j","parseInt","isNaN","c","charCodeAt","fromByteArray","start","end","out","c1","String","fromCharCode","c2","c3","c4","u","join","_readVarint","offset","toLong","_readVarintAndLength","writeVarint","number","obj","data","pos","call","Long","LongBits","lo","hi","unsigned","mask","value","zero","sign","fromNumber","fromString","low","high","toNumber","zzEncode","zzDecode","lazyReadVarint","fullyReadVarint","readFixed32","readFixed64","readLengthDelimited","len","inferTypeByValue","Buffer","Uint8Array","Array","isArray","constructor","name","hasOwnProperty","indexOf","_coerceInputTo","type","jsonToInput","p","val","from","json","JSON","parse","unpacked","fields","inputToJson","msg","index","field","itype","_unpacked","outputToJson","f","slice","e","_varint","_knownFields","typ","zigZagDecode","isBigint","and","shiftRight","xor","joinDouble","exp","mant","NaN","Infinity","Math","pow","joinFloat","splitFloat","round","floor","log","LN2","splitDouble","mantHigh","mantLow","maxDoubleExponent","minDoubleExponent","x","writeFixed32","writeFixed64","bits","writeLengthDelimited","Deserializer","ArrayBuffer","_parseField","header","_parseHeader","func","Serializer","ja","InputMessage","_parent","_keepDefault","has","it","editable","self","next","done","ind","get","set","Symbol","iterator","splice","_addField","items","last","fromValue","cb","tryToInput","map","run","toWire","toUint8Array","buffer","_varints","to","long","item","prototype","_addVarintField","for","toJSON","OutputMessage","utils","create","_prepareJsonInput","ip","fromJson","h","_cache","_throwHas","sub","_assertHas","_typeToWireType","_checkType","getter","tag","known","ignoreKnown","k","_assertType","_string","_buffer","deserializer","_message","_cached","clone","output","state","apply","lengthDelimitedIndex","newFields","_processPacked","values","toInput","writers","keepDefault","_getPrimitiveType","_coerceTo","packed","vals","_coerce","writer","preprocessed","_preProcess"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,IAAMA,YAAY,GAAG,CACjB,OADiB,EAEjB,OAFiB,EAGjB,QAHiB,EAIjB,QAJiB,EAKjB,QALiB,EAMjB,QANiB,EAOjB,QAPiB,EAQjB,MARiB,CAArB;AAUA,IAAMC,cAAc,aACbD,YADa,GAEhB,SAFgB,EAGhB,SAHgB,EAIhB,UAJgB,EAKhB,UALgB,EAMhB,QANgB,EAOhB,OAPgB,EAApB;AAUA,IAAME,cAAc,GAAG,CACnB,OADmB,EAEnB,OAFmB,EAGnB,QAHmB,EAInB,QAJmB,EAKnB,QALmB,EAMnB,QANmB,EAOnB,MAPmB,EAQnB,SARmB,EASnB,SATmB,EAUnB,UAVmB,EAWnB,UAXmB,EAYnB,OAZmB,EAanB,QAbmB,EAcnB,SAdmB,EAenB,QAfmB,EAgBnB,OAhBmB,CAAvB;AAmBA,IAAMC,UAAU,GAAG;AACfC,QAAM,EAAE,CADO;AAEfC,SAAO,EAAE,CAFM;AAGfC,iBAAe,EAAE,CAHF;AAIfC,SAAO,EAAE;AAJM,CAAnB;AAOA,IAAMC,gBAAgB,GAAG,CACrB,QADqB,EAErB,SAFqB,EAGrB,iBAHqB,EAIrBC,SAJqB,EAKrBA,SALqB,EAMrB,SANqB,CAAzB;AAQA,IAAMC,cAAc,GAAG;AACnBC,OAAK,EAAE,CADY;AAEnBC,OAAK,EAAE,CAFY;AAGnBC,QAAM,EAAE,CAHW;AAInBC,QAAM,EAAE,CAJW;AAKnBC,QAAM,EAAE,CALW;AAMnBC,QAAM,EAAE,CANW;AAOnBC,MAAI,EAAE,KAPa;AAQnBV,SAAO,EAAE,CARU;AASnBF,SAAO,EAAE,CATU;AAUnBa,UAAQ,EAAE,CAVS;AAWnBC,UAAQ,EAAE,CAXS;AAYnBC,OAAK,EAAE,EAZY;AAanBC,QAAM,EAAE,EAbW;AAcnBC,SAAO,EAAE,IAdU;AAenBC,QAAM,EAAE,CAfW;AAgBnBC,OAAK,EAAE;AAhBY,CAAvB;AAoBAC,MAAM,CAACC,OAAP,GAAiB;AACbC,WAAS,EAAE,OADE;AAEbC,WAAS,EAAE,OAFE;AAGbC,WAAS,EAAE,UAHE;AAIbC,WAAS,EAAE,UAJE;AAKbC,WAAS,EAAE,gBALE;AAMbC,WAAS,EAAE,mBANE;AAObC,WAAS,EAAE,oBAPE;AASbjC,cAAY,EAAZA,YATa;AAUbC,gBAAc,EAAdA,cAVa;AAWbE,YAAU,EAAVA,UAXa;AAYbK,kBAAgB,EAAhBA,gBAZa;AAabN,gBAAc,EAAdA,cAba;AAcbQ,gBAAc,EAAdA,cAda;AAgBbwB,YAAU,EAAE,CAhBC;AAiBbC,YAAU,EAAE,UAjBC;AAkBbC,WAAS,EAAE,CAAC,UAlBC;AAmBbC,WAAS,EAAE,UAnBE;AAoBbC,WAAS,EAAE,sBApBE;AAqBbC,WAAS,EAAE,qBArBE;AAsBbC,YAAU,EAAE,CAtBC;AAuBbC,YAAU,EAAE,sBAvBC;AAwBbC,WAAS,EAAE,sBAxBE;AAyBbC,WAAS,EAAE,sBAzBE;AA0BbC,YAAU,EAAE,uBA1BC;AA2BbC,YAAU,EAAE;AA3BC,CAAjB,C;;;;;;AC1EA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,qDAAqD,cAAc;;AAEnE;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA,uBAAuB;;AAEvB;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,sBAAsB,8CAA8C;AAC/E,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB,8CAA8C;AAC/E,WAAW,SAAS;AACpB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,kBAAkB;AAC7F;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,iFAAiF,oBAAoB;AACrG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,oFAAoF,uBAAuB;AAC3G;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yEAAyE,mBAAmB;AAC5F;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,kBAAkB;AACrE;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,oBAAoB;AACnG;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,oBAAoB;AAChG;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,kBAAkB;AACtF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,qBAAqB;AAClH;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,sBAAsB;AACnI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;eC1yC4CC,mBAAO,CAAC,CAAD,C;IAA3CC,mB,YAAAA,mB;IAAqBC,U,YAAAA,U;;gBACkBF,mBAAO,CAAC,CAAD,C;IAA9CG,iB,aAAAA,iB;IAAmBC,e,aAAAA,e;;AAE3B,SAASC,aAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AAC9B,MAAIC,GAAG,GAAG,EAAV;AACAF,KAAG,CAACG,OAAJ,CAAY,UAACC,CAAD,EAAO;AACf,QAAIA,CAAC,CAACH,GAAD,CAAD,IAAUC,GAAd,EAAmB;AACfA,SAAG,CAACE,CAAC,CAACH,GAAD,CAAF,CAAH,CAAYI,IAAZ,CAAiBD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","file":"protoflex.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PB\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PB\"] = factory();\n\telse\n\t\troot[\"PB\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","const VARINT_TYPES = [\r\n    'int32',\r\n    'int64',\r\n    'uint32',\r\n    'uint64',\r\n    'sint32',\r\n    'sint64',\r\n    'varint',\r\n    'bool',\r\n]\r\nconst PACKABLE_TYPES = [\r\n    ...VARINT_TYPES,\r\n    'fixed32',\r\n    'fixed64',\r\n    'sfixed32',\r\n    'sfixed64',\r\n    'double',\r\n    'float',\r\n]\r\n\r\nconst PROTOBUF_TYPES = [\r\n    'int32',\r\n    'int64',\r\n    'uint32',\r\n    'uint64',\r\n    'sint32',\r\n    'sint64',\r\n    'bool',\r\n    'fixed32',\r\n    'fixed64',\r\n    'sfixed32',\r\n    'sfixed64',\r\n    'bytes',\r\n    'string',\r\n    'message',\r\n    'double',\r\n    'float',\r\n]\r\n\r\nconst WIRE_TYPES = {\r\n    varint: 0,\r\n    fixed64: 1,\r\n    lengthDelimited: 2,\r\n    fixed32: 5,\r\n}\r\n\r\nconst WIRE_TYPES_NAMES = [\r\n    'varint',\r\n    'fixed64',\r\n    'lengthDelimited',\r\n    undefined,\r\n    undefined,\r\n    'fixed32',\r\n]\r\nconst DEFAULT_VALUES = {\r\n    int32: 0,\r\n    int64: 0,\r\n    uint32: 0,\r\n    uint64: 0,\r\n    sint32: 0,\r\n    sint64: 0,\r\n    bool: false,\r\n    fixed32: 0,\r\n    fixed64: 0,\r\n    sfixed32: 0,\r\n    sfixed64: 0,\r\n    bytes: '',\r\n    string: '',\r\n    message: null,\r\n    double: 0,\r\n    float: 0,\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    TWO_TO_20: 1048576,\r\n    TWO_TO_23: 8388608,\r\n    TWO_TO_32: 4294967296,\r\n    TWO_TO_33: 8589934592,\r\n    TWO_TO_52: 4503599627370496,\r\n    TWO_TO_63: 9223372036854775808,\r\n    TWO_TO_64: 18446744073709551616,\r\n\r\n    VARINT_TYPES,\r\n    PACKABLE_TYPES,\r\n    WIRE_TYPES,\r\n    WIRE_TYPES_NAMES,\r\n    PROTOBUF_TYPES,\r\n    DEFAULT_VALUES,\r\n\r\n    MIN_UINT32: 0,\r\n    MAX_UINT32: 0xFFFFFFFF,\r\n    MIN_INT32: -0x80000000,\r\n    MAX_INT32: 0x7FFFFFFF,\r\n    MIN_INT64: '-9223372036854775808',\r\n    MAX_INT64: '9223372036854775807',\r\n    MIN_UINT64: 0,\r\n    MAX_UINT64: '18446744073709551615',\r\n    MAX_FLOAT: 3.4028234663852886e+38,\r\n    MIN_FLOAT: 1.1754943508222875e-38,\r\n    MIN_DOUBLE: 2.2250738585072014e-308,\r\n    MAX_DOUBLE: 1.7976931348623157e+308,\r\n}\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","const { readVarintAndLength, readVarint } = require('./readers')\r\nconst { writeNumberVarint, writeLongVarint } = require('./writers')\r\n\r\nfunction keyByMultiple (arr, key) {\r\n    let ret = {}\r\n    arr.forEach((v) => {\r\n        if (v[key] in ret) {\r\n            ret[v[key]].push(v)\r\n        } else {\r\n            ret[v[key]] = [v]\r\n        }\r\n    })\r\n    return ret\r\n}\r\n\r\n\r\nfunction toHex (ar) {\r\n    if (typeof ar === 'string') {\r\n        ar = toByteArray(ar)\r\n    }\r\n    let ret = ''\r\n    for (let i = 0; i < ar.length; i++) {\r\n        if (ar[i] > 255 || ar[i] < 0) throw RangeError(`${ar[i]} is not in range [0, 255]`)\r\n        let t = ar[i].toString(16)\r\n        ret += t.length > 1 ? t : '0' + t\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction fromHex (str) {\r\n    if (str.length % 2 !== 0) throw Error('Invalid hex')\r\n    let ret = []\r\n    for (let i = 0, j = 0; j < str.length; i++, j += 2) {\r\n        let v = parseInt(str[j] + str[j + 1], 16)\r\n        if (isNaN(v)) {\r\n            throw Error('Invalid hex')\r\n        }\r\n        ret[i] = v\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction toByteArray (str) {\r\n    let ret = []\r\n    let j = 0\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i)\r\n        if (c < 0x80) {\r\n            ret[j++] = c\r\n        } else if (c < 0x800) {\r\n            ret[j++] = 0xc0 | (c >> 6)\r\n            ret[j++] = 0x80 | (c & 0x3f)\r\n        } else if (c < 0xd800 || c >= 0xe000) {\r\n            ret[j++] = 0xe0 | (c >> 12)\r\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\r\n            ret[j++] = 0x80 | (c & 0x3f)\r\n        } else {\r\n            // pair\r\n            i++\r\n            c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff))\r\n\r\n            ret[j++] = 0xf0 | (c >> 18)\r\n            ret[j++] = 0x80 | ((c >> 12) & 0x3f)\r\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\r\n            ret[j++] = 0x80 | (c & 0x3f)\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction fromByteArray (bytes, start = 0, end = bytes.length) {\r\n    if (!bytes) return ''\r\n    let out = []\r\n    let j = 0\r\n\r\n    for (let i = start; i < end; i++) {\r\n        let c1 = bytes[i]\r\n        if (c1 > 0xff) throw Error('Invalid byte array')\r\n\r\n        if (c1 < 0x80) {\r\n            out[j++] = String.fromCharCode(c1)\r\n        } else if (c1 > 0xbf && c1 < 0xe0) {\r\n            let c2 = bytes[++i]\r\n            out[j++] = String.fromCharCode(\r\n                (c1 & 0x1f) << 6 | c2 & 0x3f,\r\n            )\r\n        } else if (c1 > 0xdf && c1 < 0xf0) {\r\n            let c2 = bytes[++i]\r\n            let c3 = bytes[++i]\r\n            out[j++] = String.fromCharCode((c1 & 0xf) << 12 | (c2 & 0x3f) << 6 | c3 & 0x3f)\r\n        } else {\r\n            // pair\r\n            let c2 = bytes[++i]\r\n            let c3 = bytes[++i]\r\n            let c4 = bytes[++i]\r\n            let u = (\r\n                (c1 & 0x07) << 18 |\r\n                (c2 & 0x3f) << 12 |\r\n                (c3 & 0x3f) << 6 |\r\n                (c4 & 0x3f)\r\n            ) - 0x10000\r\n            out[j++] = String.fromCharCode(0xd800 | (u >> 10))\r\n            out[j++] = String.fromCharCode(0xdc00 | (u & 0x3ff))\r\n\r\n        }\r\n    }\r\n\r\n    return out.join('')\r\n}\r\n\r\nfunction _readVarint (bytes, offset = 0) {\r\n    return readVarint(offset, bytes).toLong()\r\n}\r\n\r\nfunction _readVarintAndLength (bytes, offset = 0) {\r\n    let ret = readVarintAndLength(offset, bytes)\r\n    ret[0] = ret[0].toLong()\r\n    return ret\r\n}\r\n\r\nfunction writeVarint (number) {\r\n    let ret = []\r\n    let obj = {\r\n        data: ret,\r\n        pos: 0,\r\n    }\r\n\r\n    if (typeof number === 'number') {\r\n        writeNumberVarint.call(obj, number)\r\n    } else {\r\n        writeLongVarint.call(obj, number)\r\n    }\r\n\r\n    return ret\r\n}\r\n\r\nmodule.exports = {\r\n    keyByMultiple,\r\n\r\n    readVarint: _readVarint,\r\n    readVarintAndLength: _readVarintAndLength,\r\n    writeVarint,\r\n\r\n    toByteArray,\r\n    fromByteArray,\r\n    toHex,\r\n    fromHex,\r\n}\r\n","const { TWO_TO_32 } = require('./constants')\r\nconst Long = require('long')\r\n\r\nclass LongBits {\r\n    constructor (lo, hi) {\r\n        this.lo = lo >>> 0\r\n        this.hi = hi >>> 0\r\n    }\r\n\r\n    toNumber (unsigned = false) {\r\n        if (!unsigned && this.hi >>> 31) {\r\n            let lo = ~this.lo + 1 >>> 0\r\n            let hi = ~this.hi >>> 0\r\n            if (!lo) {\r\n                hi = hi + 1 >>> 0\r\n            }\r\n            return -(lo + hi * TWO_TO_32)\r\n        }\r\n        return this.lo + this.hi * TWO_TO_32\r\n    }\r\n\r\n    toLong (unsigned) {\r\n        return new Long(this.lo, this.hi, unsigned)\r\n    }\r\n\r\n    zzEncode () {\r\n        let mask = this.hi >>> 31\r\n        this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\r\n        this.lo = (this.lo << 1 ^ mask) >>> 0\r\n        return this\r\n    }\r\n\r\n    zzDecode () {\r\n        let mask = -(this.lo & 1)\r\n        this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\r\n        this.hi = (this.hi >>> 1 ^ mask) >>> 0\r\n        return this\r\n    }\r\n\r\n    clone () {\r\n        return new LongBits(this.lo, this.hi)\r\n    }\r\n\r\n    static fromNumber (value) {\r\n        if (value === 0) {\r\n            return zero\r\n        }\r\n        let sign = value < 0\r\n        if (sign) {\r\n            value = -value\r\n        }\r\n        let lo = value >>> 0\r\n        let hi = (value - lo) / TWO_TO_32 >>> 0\r\n        if (sign) {\r\n            hi = ~hi >>> 0\r\n            lo = ~lo >>> 0\r\n            if (++lo > TWO_TO_32) {\r\n                lo = 0\r\n                if (++hi > TWO_TO_32) {\r\n                    hi = 0\r\n                }\r\n            }\r\n        }\r\n        return new LongBits(lo, hi)\r\n    }\r\n\r\n    static from (value) {\r\n        if (typeof value === 'number') {\r\n            return LongBits.fromNumber(value)\r\n        }\r\n        if (typeof value === 'string') {\r\n            value = Long.fromString(value)\r\n        }\r\n        if (value.low || value.high) {\r\n            return new LongBits(value.low >>> 0, value.high >>> 0)\r\n        } else if (value.lo || value.hi) {\r\n            return new LongBits(value.lo >>> 0, value.hi >>> 0)\r\n        } else {\r\n            return zero\r\n        }\r\n    }\r\n}\r\n\r\nconst zero = new LongBits(0, 0)\r\nzero.toNumber = () => 0\r\nzero.zzEncode = zero.zzDecode = function() {\r\n    return this\r\n}\r\nzero.length = () => 1\r\n\r\nLongBits.zero = zero\r\n\r\nmodule.exports = LongBits\r\n","const LongBits = require('./longbits')\r\n\r\nfunction lazyReadVarint () {\r\n    let offset = this.offset\r\n    while (this.data[this.offset++] & 0x80) {\r\n    }\r\n    return offset\r\n}\r\n\r\nfunction readVarint (offset, data, length = data.length) {\r\n    return readVarintAndLength(offset, data, length)[0]\r\n}\r\n\r\nfunction readVarintAndLength (offset, data, length = data.length) {\r\n    let start = offset\r\n    let ret = new LongBits(0, 0)\r\n    let i = 0\r\n    if (length - offset > 4) {\r\n        for (; i < 4; ++i) {\r\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << 28) >>> 0\r\n        ret.hi = (ret.hi | (data[offset] & 0x7f) >> 4) >>> 0\r\n        if (data[offset++] < 0x80) {\r\n            return [ret, offset - start]\r\n        }\r\n        i = 0\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            if (offset >= length) {\r\n                throw RangeError('Unexpected end while reading varint')\r\n            }\r\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\r\n        return [ret, offset - start]\r\n    }\r\n    if (length - offset > 4) {\r\n        for (; i < 5; ++i) {\r\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            if (offset >= length) {\r\n                throw RangeError('Unexpected end while reading varint')\r\n            }\r\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\r\n            if (data[offset++] < 0x80) {\r\n                return [ret, offset - start]\r\n            }\r\n        }\r\n    }\r\n    throw Error('Invalid varint encoding')\r\n}\r\n\r\nfunction fullyReadVarint () {\r\n    let offset = lazyReadVarint.call(this)\r\n    return readVarint(offset, this.data, this.length)\r\n}\r\n\r\nfunction readFixed32 () {\r\n    return this.data[this.offset++] |\r\n        this.data[this.offset++] << 8 |\r\n        this.data[this.offset++] << 16 |\r\n        this.data[this.offset++] << 24\r\n\r\n}\r\n\r\nfunction readFixed64 () {\r\n    let lo = readFixed32.call(this)\r\n    let hi = readFixed32.call(this)\r\n    return new LongBits(lo, hi)\r\n}\r\n\r\nfunction readLengthDelimited () {\r\n    let len = fullyReadVarint.call(this).toNumber(true)\r\n    let start = this.offset\r\n    return {\r\n        start,\r\n        end: this.offset += len,\r\n        length: len,\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    readVarint,\r\n    readVarintAndLength,\r\n    readFixed32,\r\n    readFixed64,\r\n    readLengthDelimited,\r\n    lazyReadVarint,\r\n    fullyReadVarint,\r\n}\r\n","const Long = require('long')\r\nconst { PROTOBUF_TYPES, DEFAULT_VALUES } = require('./constants')\r\nconst { toByteArray, fromByteArray } = require('./utils')\r\nconst LongBits = require('./longbits')\r\n\r\nfunction inferTypeByValue (value) {\r\n    if (value === null || value === undefined || (typeof value === 'number' && isNaN(value))) {\r\n        return null\r\n    }\r\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\r\n        instanceof Uint8Array) {\r\n        return 'bytes'\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return 'repeated'\r\n    }\r\n    if (typeof value === 'string') {\r\n        return 'string'\r\n    }\r\n    if (typeof value === 'number') {\r\n        return value % 1 === 0 ? 'int32' : 'float'\r\n    }\r\n    if (typeof value === 'bigint') {\r\n        return 'int64'\r\n    }\r\n    if (typeof value === 'boolean') {\r\n        return 'bool'\r\n    }\r\n    if (value.constructor.name === 'Object') {\r\n        for (let key in value) {\r\n            if (value.hasOwnProperty(key) && key !== 'unpacked') {\r\n                if (key === 'value') {\r\n                    return inferTypeByValue(value.value)\r\n                }\r\n                if (PROTOBUF_TYPES.indexOf(key) > -1) {\r\n                    return key\r\n                }\r\n                return 'message'\r\n            }\r\n        }\r\n        return 'message'\r\n    }\r\n    if (value instanceof Long) {\r\n        return value.unsigned ? 'uint64' : 'int64'\r\n    }\r\n    return null\r\n}\r\n\r\nfunction _coerceInputTo (value, type) {\r\n    if (type === 'message') {\r\n        return jsonToInput(value)\r\n    }\r\n    if (type === 'repeated') {\r\n        let ret = []\r\n        for (let p = 0; p < value.length; p++) {\r\n            let val = value[p]\r\n            let type = inferTypeByValue(val)\r\n            if (val && val.constructor.name === 'Object' && type !== 'message') {\r\n                val = val[type]\r\n            }\r\n            ret[p] = {\r\n                type,\r\n                value: _coerceInputTo(val, type),\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\r\n        instanceof Uint8Array) {\r\n        return Array.from(value)\r\n    }\r\n    if ((type === 'int64' || type === 'uint64' || type === 'sint64' || type === 'fixed64') && !(value\r\n        instanceof Long)) {\r\n        return typeof value === 'number' ? Long.fromNumber(value, type === 'uint64') :\r\n            typeof value === 'bigint' ?\r\n                Long.fromString(value.toString(), type === 'uint64') :\r\n                Long.fromString(value, type === 'uint64')\r\n    }\r\n    if (type === 'int32' || type === 'uint32' || type === 'sint32' || type === 'fixed32') {\r\n        return parseInt(value)\r\n    }\r\n    if (type === 'bytes') {\r\n        if (!Array.isArray(value)) {\r\n            return toByteArray(value)\r\n        }\r\n        return value\r\n    }\r\n    if (type === 'string') {\r\n        if (Array.isArray(value)) {\r\n            return fromByteArray(value)\r\n        }\r\n        return value\r\n    }\r\n    if (value && value.constructor.name === 'Object' && type !== 'message') {\r\n        return value[type]\r\n    }\r\n    return value\r\n}\r\n\r\nfunction jsonToInput (json) {\r\n    if (typeof json === 'string') {\r\n        json = JSON.parse(json)\r\n    }\r\n\r\n    let ret = {}\r\n    let unpacked = []\r\n\r\n    for (let j in json) {\r\n        if (json.hasOwnProperty(j)) {\r\n            if (!isNaN(parseInt(j))) {\r\n                if (!ret[j]) {\r\n                    ret[j] = []\r\n                }\r\n                let type = inferTypeByValue(json[j])\r\n                if (type === null) continue\r\n                let value = json[j]\r\n                if (value && value.constructor.name === 'Object' && type !== 'message') {\r\n                    if (value.unpacked) {\r\n                        unpacked[unpacked.length] = j\r\n                    }\r\n                    value = 'value' in value ? value.value : value[type]\r\n                }\r\n\r\n                value = _coerceInputTo(value, type)\r\n\r\n                if (type === 'repeated') {\r\n                    for (let i = 0; i < value.length; i++) {\r\n                        ret[j][ret[j].length] = value[i]\r\n                    }\r\n                } else {\r\n                    ret[j][ret[j].length] = {\r\n                        type,\r\n                        value,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        fields: ret,\r\n        unpacked,\r\n    }\r\n}\r\n\r\nfunction inputToJson (msg, constructor) {\r\n    let ret = {}\r\n    let fields = msg.fields\r\n\r\n    for (let key in fields) {\r\n        if (fields.hasOwnProperty(key)) {\r\n            if (!ret[key]) {\r\n                ret[key] = []\r\n            }\r\n\r\n            for (let index = 0; index < fields[key].length; index++) {\r\n                let field = fields[key][index]\r\n                if (field === undefined) continue // sparse\r\n\r\n                let value = field.value\r\n\r\n                if (value instanceof Long) {\r\n                    value = value.toString()\r\n                }\r\n\r\n                if (value instanceof constructor) {\r\n                    value = inputToJson(value, constructor)\r\n                }\r\n\r\n                let itype = inferTypeByValue(value)\r\n\r\n                if (itype !== field.type) {\r\n                    value = {\r\n                        [field.type]: value,\r\n                    }\r\n                }\r\n\r\n                ret[key][ret[key].length] = value\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let key in ret) {\r\n        if (ret.hasOwnProperty(key)) {\r\n            if (ret[key].length === 1) {\r\n                ret[key] = ret[key][0]\r\n            } else if (msg._unpacked[key]) {\r\n                ret[key] = {\r\n                    unpacked: true,\r\n                    value: ret[key],\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return ret\r\n}\r\n\r\nfunction outputToJson (msg) {\r\n    let ret = {}\r\n    let fields = msg.fields\r\n\r\n    for (let key in fields) {\r\n        if (fields.hasOwnProperty(key)) {\r\n            if (!ret[key]) {\r\n                ret[key] = []\r\n            }\r\n            for (let i = 0; i < fields[key].length; i++) {\r\n                let f = fields[key][i]\r\n                let v = f.value\r\n                if (f.type === 'lengthDelimited') {\r\n                    v = msg.data.slice(v.start, v.end)\r\n                    try {\r\n                        v = outputToJson(msg.message(key, i))\r\n                    } catch (e) {\r\n                        v = fromByteArray(v)\r\n                    }\r\n                }\r\n                if (f.type === 'varint') {\r\n                    v = msg._varint(key, i)\r\n                }\r\n                if (v instanceof LongBits) {\r\n                    v = v.toLong().toString()\r\n                }\r\n\r\n                ret[key][ret[key].length] = v\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let key in msg._knownFields) {\r\n        if (msg._knownFields.hasOwnProperty(key) && msg._knownFields[key].length) {\r\n            let typ = msg._knownFields[key][0]\r\n            if (!(key in ret)) {\r\n                let val = DEFAULT_VALUES[typ]\r\n                if (typeof val === 'number') val += ''\r\n                if (val instanceof LongBits) val = val.toLong()\r\n                if (val instanceof Long) val = val.toString()\r\n                ret[key] = [val]\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let key in ret) {\r\n        if (ret.hasOwnProperty(key) && ret[key].length === 1) {\r\n            ret[key] = ret[key][0]\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\nmodule.exports = {\r\n    jsonToInput,\r\n    outputToJson,\r\n    inputToJson,\r\n}\r\n","const {\r\n    TWO_TO_52,\r\n    TWO_TO_32,\r\n    TWO_TO_23,\r\n    TWO_TO_20,\r\n    MIN_FLOAT,\r\n    MAX_FLOAT,\r\n    MIN_DOUBLE,\r\n    MAX_DOUBLE,\r\n} = require('./constants')\r\n\r\nfunction zigZagDecode (val, isBigint = false) {\r\n    if (!isBigint) {\r\n        return val & 0x1 ? (val >> 1) ^ (~0) : val >> 1\r\n    }\r\n    return val.and(0x1) ? val.shiftRight(1).xor(~0) : val.shiftRight(1)\r\n}\r\n\r\nfunction joinDouble (lo, hi) {\r\n    let sign = (hi >> 31) * 2 + 1\r\n    let exp = (hi >> 20) & 0x7ff\r\n    let mant = TWO_TO_32 * (hi & 0xfffff) + lo\r\n\r\n    if (exp === 0x7ff) {\r\n        if (mant) {\r\n            return NaN\r\n        } else {\r\n            return sign * Infinity\r\n        }\r\n    }\r\n\r\n    if (exp === 0) {\r\n        return sign * Math.pow(2, -1074) * mant\r\n    } else {\r\n        return sign * Math.pow(2, exp - 1075) * (mant + TWO_TO_52)\r\n    }\r\n}\r\n\r\nfunction joinFloat (lo) {\r\n    let sign = (lo >> 31) * 2 + 1\r\n    let exp = (lo >> 23) & 0x7ff\r\n    let mant = lo & 0x7fffff\r\n\r\n    if (exp === 0xff) {\r\n        if (mant) {\r\n            return NaN\r\n        } else {\r\n            return sign * Infinity\r\n        }\r\n    }\r\n\r\n    if (exp === 0) {\r\n        return sign * Math.pow(2, -149) * mant\r\n    } else {\r\n        return sign * Math.pow(2, exp - 150) * (mant + TWO_TO_23)\r\n    }\r\n}\r\n\r\nfunction splitFloat (value) {\r\n    let sign = value < 0 ? 1 : 0\r\n    if (sign) {\r\n        value = -value\r\n    }\r\n    let exp\r\n    let mant\r\n\r\n    if (value === 0) {\r\n        return 1 / value < 0 ? 0x80000000 : 0\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n        return 0x7FFFFFFF\r\n    }\r\n\r\n    if (value > MAX_FLOAT) {\r\n        return ((sign << 31) | (0x7F800000)) >>> 0\r\n    }\r\n\r\n    if (value < MIN_FLOAT) {\r\n        mant = Math.round(value / Math.pow(2, -149))\r\n        return ((sign << 31) | mant) >>> 0\r\n    }\r\n\r\n    exp = Math.floor(Math.log(value) / Math.LN2)\r\n    mant = value * Math.pow(2, -exp)\r\n    mant = Math.round(mant * TWO_TO_23) & 0x7FFFFF\r\n\r\n    return ((sign << 31) | ((exp + 127) << 23) | mant) >>> 0\r\n}\r\n\r\nfunction splitDouble (value) {\r\n    let sign = value < 0 ? 1 : 0\r\n    if (sign) {\r\n        value = -value\r\n    }\r\n    let exp\r\n    let mant\r\n    let mantHigh\r\n    let mantLow\r\n\r\n    if (value === 0) {\r\n        return { hi: 1 / value < 0 ? 0x80000000 : 0, lo: 0 }\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n        return { hi: 0x7FFFFFFF, lo: 0xFFFFFFFF }\r\n    }\r\n\r\n    if (value > MAX_DOUBLE) {\r\n        return { hi: ((sign << 31) | (0x7FF00000)) >>> 0, lo: 0 }\r\n    }\r\n\r\n    if (value < MIN_DOUBLE) {\r\n        mant = value / Math.pow(2, -149)\r\n        mantHigh = value / TWO_TO_32\r\n        return {\r\n            hi: ((sign << 31) | mantHigh) >>> 0,\r\n            lo: mant >>> 0,\r\n        }\r\n    }\r\n\r\n    let maxDoubleExponent = 1023\r\n    let minDoubleExponent = -1022\r\n    let x = value\r\n    exp = 0\r\n    if (x >= 2) {\r\n        while (x >= 2 && exp < maxDoubleExponent) {\r\n            exp++\r\n            x = x / 2\r\n        }\r\n    } else {\r\n        while (x < 1 && exp > minDoubleExponent) {\r\n            x = x * 2\r\n            exp--\r\n        }\r\n    }\r\n    mant = value * Math.pow(2, -exp)\r\n\r\n    mantHigh = (mant * TWO_TO_20) & 0xFFFFF\r\n    mantLow = (mant * TWO_TO_52) >>> 0\r\n\r\n    return {\r\n        hi: ((sign << 31) | ((exp + 1023) << 20) | mantHigh) >>> 0,\r\n        lo: mantLow,\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    splitDouble,\r\n    splitFloat,\r\n    joinDouble,\r\n    joinFloat,\r\n    zigZagDecode,\r\n}\r\n","const Long = require('long')\r\nconst LongBits = require('./longbits')\r\n\r\nfunction writeNumberVarint (val) {\r\n    if (val === 0) {\r\n        this.data[this.pos] = val\r\n    }\r\n    if (val < 0) {\r\n        // filling 9 bytes\r\n        for (let i = 0; i < 9; i++) {\r\n            this.data[this.pos++] = (val & 0x7f) | 0x80\r\n            val >>= 7\r\n        }\r\n        // and 10th byte: sign\r\n        this.data[this.pos++] = 0x1\r\n    } else {\r\n        while (val > 127) {\r\n            this.data[this.pos++] = (val & 0x7f) | 0x80\r\n            val >>>= 7\r\n        }\r\n        this.data[this.pos++] = val\r\n    }\r\n}\r\n\r\nfunction writeLongVarint (val) {\r\n    if (val instanceof Long) {\r\n        val = LongBits.from(val)\r\n    }\r\n    while (val.hi) {\r\n        this.data[this.pos++] = val.lo & 127 | 128\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\r\n        val.hi >>>= 7\r\n    }\r\n    while (val.lo > 0x7f) {\r\n        this.data[this.pos++] = val.lo & 127 | 128\r\n        val.lo = val.lo >>> 7\r\n    }\r\n    this.data[this.pos++] = val.lo\r\n}\r\n\r\nfunction writeFixed32 (val) {\r\n    this.data[this.pos++] = val & 0xff\r\n    this.data[this.pos++] = val >>> 8 & 0xff\r\n    this.data[this.pos++] = val >>> 16 & 0xff\r\n    this.data[this.pos++] = val >>> 24 & 0xff\r\n}\r\n\r\nfunction writeFixed64 (val) {\r\n    let bits = LongBits.from(val)\r\n    writeFixed32.call(this, bits.lo)\r\n    writeFixed32.call(this, bits.hi)\r\n}\r\n\r\nfunction writeLengthDelimited (val) {\r\n    writeNumberVarint.call(this, val.length)\r\n    for (let i = 0; i < val.length; i++) {\r\n        this.data[this.pos++] = val[i]\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    writeLongVarint,\r\n    writeNumberVarint,\r\n    writeFixed32,\r\n    writeFixed64,\r\n    writeLengthDelimited,\r\n}\r\n","const {\r\n    WIRE_TYPES_NAMES,\r\n} = require('./constants')\r\nconst {\r\n    readFixed32,\r\n    readFixed64,\r\n    readLengthDelimited,\r\n    lazyReadVarint,\r\n    fullyReadVarint,\r\n} = require('./readers')\r\n\r\nclass Deserializer {\r\n    constructor (data) {\r\n        if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\r\n            data = new Uint8Array(data)\r\n        }\r\n        if (!(Array.isArray(data)\r\n            || (typeof Buffer !== 'undefined' && data instanceof Buffer)\r\n            || (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array)\r\n        )) {\r\n            throw Error('Input for deserializer must be an array/buffer')\r\n        }\r\n        this.data = data\r\n        this.offset = 0\r\n        this.length = data.length\r\n    }\r\n\r\n    parse () {\r\n        let ret = []\r\n        while (this.offset < this.length) {\r\n            const field = this._parseField()\r\n            ret.push(field)\r\n        }\r\n        if (this.offset > this.length) {\r\n            throw Error('Buffer exhausted')\r\n        }\r\n        return ret\r\n    }\r\n\r\n    _parseField () {\r\n        let header = this._parseHeader()\r\n        let type = header.type\r\n        let key = header.key\r\n        let func = {\r\n            0: lazyReadVarint,\r\n            1: readFixed64,\r\n            2: readLengthDelimited,\r\n            5: readFixed32,\r\n        }[type]\r\n        if (!func) {\r\n            throw Error('Unknown wire type: ' + type)\r\n        }\r\n        let value = func.call(this)\r\n        return {\r\n            key,\r\n            value,\r\n            type: WIRE_TYPES_NAMES[type],\r\n        }\r\n    }\r\n\r\n    _parseHeader () {\r\n        let value = fullyReadVarint.call(this).toNumber(true)\r\n\r\n        return {\r\n            type: value & 0x07,\r\n            key: value >> 3,\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Deserializer\r\n","const Long = require('long')\r\nconst {\r\n    MIN_INT32,\r\n    MIN_INT64,\r\n    MIN_UINT32,\r\n    MIN_UINT64,\r\n    MAX_INT32,\r\n    MAX_INT64,\r\n    MAX_UINT32,\r\n    MAX_UINT64,\r\n} = require('./constants')\r\nconst Serializer = require('./serializer')\r\nconst ja = require('./json-api')\r\nconst { toHex } = require('./utils')\r\n\r\n/**\r\n * @class protoflex.InputMessage\r\n */\r\nclass InputMessage {\r\n    constructor () {\r\n        this.fields = {}\r\n        this._parent = null\r\n        this._unpacked = {}\r\n    }\r\n\r\n    keepDefault(value = true) {\r\n        this._keepDefault = value\r\n        return this\r\n    }\r\n\r\n    has (key, index = 0) {\r\n        return key in this.fields && index in this.fields[key]\r\n    }\r\n\r\n    get (key, type = null, index = 0) {\r\n        if (!this.has(key)) {\r\n            throw Error(`Message does not have ${key}:${index}`)\r\n        }\r\n        if (typeof type === 'number' && index === 0) {\r\n            index = type\r\n            type = null\r\n        }\r\n        let it = this.fields[key][index]\r\n        if (type !== null && type !== it.type) {\r\n            throw Error(`${key}:${index} is not ${type}`)\r\n        } else {\r\n            return it.value\r\n        }\r\n    }\r\n\r\n    array (key, type = null) {\r\n        if (!this.has(key)) {\r\n            throw Error(`Message does not have ${key}`)\r\n        }\r\n\r\n        let ret = []\r\n        for (let i = 0; i < this.fields[key].length; i++) {\r\n            let it = this.fields[key][i]\r\n            if (it === undefined) {\r\n                ret[i] = undefined\r\n            } else if (type !== null && it.type !== type) {\r\n                throw Error(`${key}:${i} is not ${type}`)\r\n            } else {\r\n                ret[i] = it.value\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n\r\n    iter (key, editable = false, type = null) {\r\n        if (!this.has(key)) {\r\n            throw Error(`Message does not have ${key}`)\r\n        }\r\n\r\n        let index = 0\r\n        let self = this\r\n        let length = self.fields[key].length\r\n\r\n        let ret = {\r\n            next () {\r\n                if (index >= length) {\r\n                    return { done: true, value: undefined }\r\n                }\r\n\r\n                if (self.fields[key].length !== length) {\r\n                    throw Error('Data size changed during iteration')\r\n                }\r\n                let typ = self.fields[key][index].type\r\n\r\n                if (type !== null && typ !== type) {\r\n                    throw Error(`${key}:${index} is not ${type}`)\r\n                }\r\n\r\n                let value\r\n                if (editable) {\r\n                    let ind = index\r\n\r\n                    value = {\r\n                        get () {\r\n                            return self.fields[key][ind].value\r\n                        },\r\n                        set (v) {\r\n                            self[typ](key, v, ind)\r\n                        },\r\n                    }\r\n                } else {\r\n                    value = self.fields[key][index].value\r\n                }\r\n\r\n                index += 1\r\n\r\n                return {\r\n                    value,\r\n                    done: false,\r\n                }\r\n            },\r\n        }\r\n\r\n        if (typeof Symbol !== 'undefined' && Symbol.iterator) {\r\n            ret[Symbol.iterator] = () => ret\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    clear (key = null, index = null) {\r\n        if (key === null) {\r\n            this.fields = {}\r\n        } else if (key in this.fields) {\r\n            if (index !== null) {\r\n                if (index < 0) {\r\n                    index = this.fields[key].length + index\r\n                }\r\n\r\n                if (index < 0 || index >= this.fields[key].length) {\r\n                    throw RangeError('Out of array bounds')\r\n                }\r\n\r\n                this.fields[key].splice(index, 1)\r\n            } else {\r\n                this.fields[key] = []\r\n            }\r\n        }\r\n        return this\r\n    }\r\n\r\n    append (key, value, type = null) {\r\n        if (!this.has(key)) {\r\n            if (type === null) {\r\n                throw Error('First item in array must have type set explicitly')\r\n            }\r\n            this._addField(key, 0, value, type)\r\n        } else {\r\n            let items = this.fields[key]\r\n            let last = items[items.length - 1]\r\n            if (type !== null && type !== last.type) {\r\n                throw Error(`Previous item(s) in array have type ${last.type}, not ${type}`)\r\n            }\r\n            if (type === null) type = last.type\r\n            this._addField(key, items.length, value, type)\r\n        }\r\n        return this\r\n    }\r\n\r\n    string (key, value, index = 0) {\r\n        this._addField(key, index, value + '', 'string')\r\n        return this\r\n    }\r\n\r\n    bytes (key, value, index = 0) {\r\n        if (Array.isArray(value) || (typeof Buffer !== 'undefined' && value instanceof Buffer)) {\r\n            this._addField(key, index, Array.from(value), 'bytes')\r\n            return this\r\n        }\r\n        throw Error(`${value ? value.constructor.name : value} cannot be cast to bytes.`)\r\n    }\r\n\r\n    bool (key, value, index = 0) {\r\n        this._addField(key, index, !!value, 'bool')\r\n        return this\r\n    }\r\n\r\n    float (key, value, index = 0) {\r\n        this._addField(key, index, value, 'float')\r\n        return this\r\n    }\r\n\r\n    double (key, value, index = 0) {\r\n        this._addField(key, index, value, 'double')\r\n        return this\r\n    }\r\n\r\n    fixed32 (key, value, index = 0) {\r\n        this._addField(key, index, value, 'fixed32')\r\n        return this\r\n    }\r\n\r\n    sfixed32 (key, value, index = 0) {\r\n        this._addField(key, index, value, 'sfixed32')\r\n        return this\r\n    }\r\n\r\n    fixed64 (key, value, index = 0) {\r\n        if (!(value instanceof Long)) {\r\n            value = Long.fromValue(value)\r\n        }\r\n        this._addField(key, index, value, 'fixed64')\r\n        return this\r\n    }\r\n\r\n    sfixed64 (key, value, index = 0) {\r\n        if (!(value instanceof Long)) {\r\n            value = Long.fromValue(value)\r\n        }\r\n        this._addField(key, index, value, 'sfixed64')\r\n        return this\r\n    }\r\n\r\n    message (key, cb, index = 0) {\r\n        if (typeof cb === 'number' && index === 0) {\r\n            index = cb\r\n            cb = undefined\r\n        }\r\n\r\n        let msg = new InputMessage()\r\n\r\n        this._addField(key, index, msg, 'message')\r\n\r\n        if (cb) {\r\n            cb(msg)\r\n        } else {\r\n            msg._parent = this\r\n            return msg\r\n        }\r\n    }\r\n\r\n    editMessage (key, cb, index = 0) {\r\n        if (typeof cb === 'number' && index === 0) {\r\n            index = cb\r\n            cb = undefined\r\n        }\r\n\r\n        if (!(key in this.fields) || !this.fields[key][index]) {\r\n            throw new Error(`${key}:${index} does not exist`)\r\n        }\r\n\r\n        const field = this.fields[key][index]\r\n        let msg\r\n        if (field.type === 'lengthDelimited') {\r\n            // from toInput() conversion\r\n            try {\r\n                msg = field.tryToInput()\r\n            } catch (e) {\r\n                throw new Error(`Failed to parse ${key}:${index} as message: ${e}`)\r\n            }\r\n            field.value = msg\r\n            field.type = 'message'\r\n        }\r\n\r\n        if (field.type !== 'message') {\r\n            throw new Error(`${key}:${index} is not a message`)\r\n        }\r\n\r\n        if (cb) {\r\n            cb(msg)\r\n        } else {\r\n            msg._parent = this\r\n            return msg\r\n        }\r\n    }\r\n\r\n    parent () {\r\n        return this._parent\r\n    }\r\n\r\n    end () {\r\n        if (this._parent === null) {\r\n            throw Error('Root doesn\\'t have parent')\r\n        }\r\n        return this._parent\r\n    }\r\n\r\n    unpacked (...fields) {\r\n        for (let i = 0; i < fields.length; i++) {\r\n            if (Array.isArray(fields[i])) {\r\n                this.unpacked(...fields[i])\r\n            } else {\r\n                this._unpacked[fields[i]] = 1\r\n            }\r\n        }\r\n        return this\r\n    }\r\n\r\n    _addField (key, index, value, type) {\r\n        if (!(key in this.fields)) {\r\n            this.fields[key] = []\r\n        }\r\n        if (Array.isArray(value) && type !== 'bytes') {\r\n            if (index !== 0) {\r\n                throw Error('index != 0 when inserting multiple values')\r\n            }\r\n            this.fields[key] = value.map(it => ({\r\n                type,\r\n                value: it,\r\n            }))\r\n        } else {\r\n            this.fields[key][index] = {\r\n                value,\r\n                type,\r\n            }\r\n        }\r\n    }\r\n\r\n    toWire () {\r\n        return new Serializer(this, this._keepDefault).run()\r\n    }\r\n\r\n    serialize () {\r\n        return this.toWire()\r\n    }\r\n\r\n    toHex () {\r\n        return toHex(this.toWire())\r\n    }\r\n\r\n    toBuffer () {\r\n        if (typeof Buffer === 'undefined') {\r\n            throw Error('Buffer is not supported in current environment')\r\n        }\r\n        return Buffer.from(this.toWire())\r\n    }\r\n\r\n    toUint8Array () {\r\n        if (typeof Uint8Array === 'undefined') {\r\n            throw Error('Uint8Array is not supported in current environment')\r\n        }\r\n        return new Uint8Array(this.toWire())\r\n    }\r\n\r\n    toArrayBuffer () {\r\n        return this.toUint8Array().buffer\r\n    }\r\n\r\n    toJSON () {\r\n        return ja.inputToJson(this, InputMessage)\r\n    }\r\n}\r\n\r\n// varints\r\nInputMessage._varints = [\r\n    { name: 'int32', from: MIN_INT32, to: MAX_INT32 },\r\n    { name: 'int64', from: MIN_INT64, to: MAX_INT64, long: true },\r\n    { name: 'uint32', from: MIN_UINT32, to: MAX_UINT32 },\r\n    { name: 'uint64', from: MIN_UINT64, to: MAX_UINT64, long: true, unsigned: true },\r\n    { name: 'sint32', from: MIN_INT32, to: MAX_INT32 },\r\n    { name: 'sint64', from: MIN_INT64, to: MAX_INT64, long: true },\r\n]\r\n\r\nInputMessage._varints.forEach((item) => {\r\n    InputMessage.prototype[item.name] = function _addVarintField (key, value, index = 0) {\r\n        if (typeof value === 'bigint') {\r\n            value = value.toString(10)\r\n        }\r\n        if (typeof value === 'string') {\r\n            value = item.long ? Long.fromString(value, item.unsigned) : parseInt(value, 10)\r\n        }\r\n        if (item.long) {\r\n            if (!(value instanceof Long)) {\r\n                value = Long.fromNumber(value, item.unsigned)\r\n            }\r\n        } else if (value < item.from || value > item.to) {\r\n            throw RangeError(`${value} is outside ${item.name} range.`)\r\n        }\r\n        this._addField(key, index, value, item.name)\r\n        return this\r\n    }\r\n})\r\n\r\nif (typeof Symbol !== 'undefined') {\r\n    InputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = InputMessage.prototype.toJSON\r\n}\r\n\r\nmodule.exports = InputMessage\r\n","const OutputMessage = require('./output-message')\r\nconst InputMessage = require('./input-message')\r\nconst Deserializer = require('./deserializer')\r\nconst ja = require('./json-api')\r\nconst utils = require('./utils')\r\n\r\nconst parse = v => new OutputMessage(v, new Deserializer(v).parse())\r\nconst create = () => new InputMessage()\r\n\r\nfunction _prepareJsonInput (ip, j) {\r\n    for (let key in j.fields) {\r\n        if (j.fields.hasOwnProperty(key)) {\r\n            for (let i = 0; i < j.fields[key].length; i++) {\r\n                if (j.fields[key][i].type === 'message') {\r\n                    let ip = new InputMessage()\r\n                    j.fields[key][i].value = _prepareJsonInput(ip, j.fields[key][i].value)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ip.unpacked(j.unpacked)\r\n    ip.fields = j.fields\r\n\r\n    return ip\r\n}\r\n\r\nconst fromJson = j => {\r\n    let ip = new InputMessage()\r\n    let data = ja.jsonToInput(j)\r\n    ip = _prepareJsonInput(ip, data)\r\n    return ip\r\n}\r\n\r\nconst fromHex = h => parse(utils.fromHex(h))\r\n\r\nmodule.exports = {\r\n    OutputMessage,\r\n    InputMessage,\r\n    parse,\r\n    fromHex,\r\n    create,\r\n    fromJson,\r\n}\r\n","const {\r\n    joinDouble,\r\n    joinFloat,\r\n    zigZagDecode,\r\n} = require('./math')\r\nconst {\r\n    keyByMultiple,\r\n    fromByteArray,\r\n    toHex,\r\n} = require('./utils')\r\nconst {\r\n    VARINT_TYPES,\r\n    PACKABLE_TYPES,\r\n} = require('./constants')\r\nconst {\r\n    readVarint,\r\n    readFixed32,\r\n    readFixed64,\r\n    lazyReadVarint,\r\n} = require('./readers')\r\nconst Deserializer = require('./deserializer')\r\nconst InputMessage = require('./input-message')\r\nconst LongBits = require('./longbits')\r\nconst Long = require('long')\r\nconst { outputToJson } = require('./json-api')\r\n\r\nclass OutputMessage {\r\n    constructor (data, fields = []) {\r\n        this.data = data\r\n        this.fields = keyByMultiple(fields, 'key')\r\n        this._cache = {}\r\n        this._knownFields = {}\r\n    }\r\n\r\n    _assertHas (key, index = 0) {\r\n        let has = this.has(key, index)\r\n        if (!has) {\r\n            this._throwHas(key, index)\r\n        }\r\n        return has\r\n    }\r\n\r\n    _checkType (key, index, type, sub = false) {\r\n        this._assertHas(key, index)\r\n        // check for sub type\r\n        if (sub) {\r\n            if (key in this._knownFields &&\r\n                (this._knownFields[key].indexOf('any') > -1 || this._knownFields[key].indexOf(type) > -1)\r\n            ) {\r\n                return true\r\n            } else {\r\n                return key in this._knownFields ? this._knownFields[key].indexOf(type) > -1 : true\r\n            }\r\n        }\r\n        return type === this._typeToWireType(this.type(key, index))\r\n\r\n    }\r\n\r\n    _assertType (key, index, type, sub = false) {\r\n        if (!this._checkType(key, index, type, sub)) {\r\n            throw Error(`Field ${key} is not of type ${type}`)\r\n        }\r\n        return true\r\n    }\r\n\r\n    _cached (func, key, index, getter) {\r\n        let tag = `${func}(${key};${index})`\r\n        if (!(tag in this._cache)) {\r\n            this._cache[tag] = getter()\r\n        }\r\n        return this._cache[tag]\r\n    }\r\n\r\n    _throwHas (key, index) {\r\n        throw Error(`Object does not have ${key}:${index} field`)\r\n    }\r\n\r\n    _typeToWireType (type) {\r\n        if (VARINT_TYPES.indexOf(type) > -1) {\r\n            return 'varint'\r\n        }\r\n        if (type === 'fixed32' || type === 'fixed64') return type\r\n        return 'lengthDelimited'\r\n    }\r\n\r\n    known (...fields) {\r\n        fields.forEach(it => {\r\n            if (typeof it === 'number') {\r\n                this._knownFields[it] = ['any']\r\n            } else if (Array.isArray((it))) {\r\n                this.known(...it)\r\n            } else if (typeof it === 'object') {\r\n                for (let key in it) {\r\n                    if (it.hasOwnProperty(key)) {\r\n                        let val = it[key]\r\n                        if (!Array.isArray(val)) val = [val]\r\n                        this._knownFields[key] = val\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return this\r\n    }\r\n\r\n    has (key, index = 0, ignoreKnown = false) {\r\n        let has = key in this.fields && index in this.fields[key]\r\n        if (!ignoreKnown && key in this._knownFields) {\r\n            return true\r\n        }\r\n        return has\r\n    }\r\n\r\n    length (key) {\r\n        return this._assertHas(key) && this.fields[key].length\r\n    }\r\n\r\n    type (key, index = 0) {\r\n        if (this.has(key, index, true)) {\r\n            return this.fields[key][index].type\r\n        } else if (key in this._knownFields) {\r\n            return this._knownFields[key][0]\r\n        } else {\r\n            this._throwHas(key, index)\r\n        }\r\n    }\r\n\r\n    array (key, type) {\r\n        if (this.has(key, 0, true)) {\r\n            let ret = []\r\n            let i = 0\r\n            for (let k = 0; k < this.length(key); k++) {\r\n                ret[i++] = this.get(key, type, k)\r\n            }\r\n            return ret\r\n        } else if (key in this._knownFields) {\r\n            return []\r\n        } else {\r\n            this._throwHas(key, 0)\r\n        }\r\n    }\r\n\r\n    iter (key, type) {\r\n        if (this.has(key, 0, true)) {\r\n            let index = 0\r\n            const self = this\r\n            const length = this.length(key)\r\n\r\n            let ret = {\r\n                next () {\r\n                    if (index >= length) {\r\n                        return { done: true, value: undefined }\r\n                    }\r\n\r\n                    let value = self.get(key, type, index)\r\n\r\n                    index += 1\r\n\r\n                    return {\r\n                        value,\r\n                        done: false,\r\n                    }\r\n                },\r\n            }\r\n\r\n            if (typeof Symbol !== 'undefined' && Symbol.iterator) {\r\n                ret[Symbol.iterator] = () => ret\r\n            }\r\n\r\n            return ret\r\n        } else if (key in this._knownFields) {\r\n            return {\r\n                next () {\r\n                    return { value: undefined, done: true }\r\n                },\r\n            }\r\n        } else {\r\n            this._throwHas(key, 0)\r\n        }\r\n    }\r\n\r\n    get (key, type, index = 0) {\r\n        return this._assertHas(key, index) && this[type].call(this, key, index)\r\n    }\r\n\r\n    string (key, index = 0) {\r\n        this._assertType(key, index, 'lengthDelimited')\r\n        this._assertType(key, index, 'string', true)\r\n        if (!this.has(key, index, true)) {\r\n            return ''\r\n        }\r\n        let it = this.fields[key][index].value\r\n        if (!('_string' in this.fields[key][index])) {\r\n            this.fields[key][index]._string = fromByteArray(this.data, it.start, it.end)\r\n        }\r\n        return this.fields[key][index]._string\r\n    }\r\n\r\n    bytes (key, index = 0) {\r\n        this._assertType(key, index, 'lengthDelimited')\r\n        this._assertType(key, index, 'bytes', true)\r\n        if (!this.has(key, index, true)) {\r\n            return []\r\n        }\r\n        if (!('_buffer' in this.fields[key][index])) {\r\n            let it = this.fields[key][index].value\r\n            this.fields[key][index]._buffer = this.data.slice(it.start, it.end)\r\n        }\r\n        return this.fields[key][index]._buffer\r\n    }\r\n\r\n    hex (key, index = 0) {\r\n        return toHex(this.bytes(key, index))\r\n    }\r\n\r\n    message (key, index = 0) {\r\n        this._assertType(key, index, 'lengthDelimited')\r\n        this._assertType(key, index, 'message', true)\r\n        if (!this.has(key, index, true)) {\r\n            return new OutputMessage()\r\n        }\r\n        if (!('_message' in this.fields[key][index])) {\r\n            let it = this.fields[key][index].value\r\n            let deserializer = new Deserializer(this.data)\r\n            deserializer.offset = it.start\r\n            deserializer.length = it.end\r\n            this.fields[key][index]._message = new OutputMessage(this.data, deserializer.parse())\r\n        }\r\n        return this.fields[key][index]._message\r\n    }\r\n\r\n    fixed32 (key, index = 0) {\r\n        this._assertType(key, index, 'fixed32')\r\n        if (!this.has(key, index, true)) {\r\n            return 0\r\n        }\r\n        return this.fields[key][index].value >>> 0\r\n    }\r\n\r\n    fixed64 (key, index = 0) {\r\n        this._assertType(key, index, 'fixed64')\r\n        if (!this.has(key, index, true)) {\r\n            return Long(0, 0)\r\n        }\r\n        return this.fields[key][index].value.toLong(false)\r\n    }\r\n\r\n    float (key, index = 0) {\r\n        this._assertType(key, index, 'float', true)\r\n        return this._cached('float', key, index, () => joinFloat(this.fixed32(key, index)))\r\n    }\r\n\r\n    double (key, index = 0) {\r\n        this._assertType(key, index, 'fixed64')\r\n        this._assertType(key, index, 'float', true)\r\n        return this._cached('double', key, index, () => joinDouble(\r\n            this.fields[key][index].value.lo,\r\n            this.fields[key][index].value.hi,\r\n        ))\r\n    }\r\n\r\n    _varint (key, index = 0) {\r\n        if (!this.has(key, index, true)) {\r\n            return LongBits.zero\r\n        }\r\n        this._assertType(key, index, 'varint')\r\n        if (!('_varint' in this.fields[key][index])) {\r\n            let offset = this.fields[key][index].value\r\n            this.fields[key][index]._varint = readVarint(offset, this.data)\r\n        }\r\n        return this.fields[key][index]._varint\r\n    }\r\n\r\n    int32 (key, index = 0) {\r\n        this._assertType(key, index, 'int32', true)\r\n        return this._varint(key, index).toNumber()\r\n    }\r\n\r\n    int64 (key, index = 0) {\r\n        this._assertType(key, index, 'int64', true)\r\n        return this._varint(key, index, true).toLong(false)\r\n    }\r\n\r\n    uint32 (key, index = 0) {\r\n        this._assertType(key, index, 'uint32', true)\r\n        return this._varint(key, index).toNumber(true)\r\n    }\r\n\r\n    uint64 (key, index = 0) {\r\n        this._assertType(key, index, 'uint64', true)\r\n        return this._varint(key, index).toLong(true)\r\n    }\r\n\r\n    bool (key, index = 0) {\r\n        this._assertType(key, index, 'bool', true)\r\n        return !!this._varint(key, index).toNumber()\r\n    }\r\n\r\n    sint32 (key, index = 0) {\r\n        this._assertType(key, index, 'sint32', true)\r\n        return this._cached('sint32', key, index, () => zigZagDecode(this.int32(key, index)))\r\n    }\r\n\r\n    sint64 (key, index = 0) {\r\n        this._assertType(key, index, 'sint64', true)\r\n        return this._cached('sint64', key, index, () => this._varint(key, index).clone().zzDecode().toLong())\r\n    }\r\n\r\n    sfixed32 (key, index = 0) {\r\n        this._assertType(key, index, 'sfixed32', true)\r\n        if (!this.has(key, index, true)) {\r\n            return 0\r\n        }\r\n        return this.fields[key][index].value\r\n    }\r\n\r\n    sfixed64 (key, index = 0) {\r\n        this._assertType(key, index, 'fixed64')\r\n        if (!this.has(key, index, true)) {\r\n            return Long(0, 0)\r\n        }\r\n        this._assertType(key, index, 'sfixed64', true)\r\n        return this.fixed64(key, index)\r\n    }\r\n\r\n    _processPacked (type, item, output) {\r\n        let state = {\r\n            offset: item.value.start,\r\n            data: this.data,\r\n            length: item.value.end,\r\n        }\r\n        if (VARINT_TYPES.indexOf(type) > -1) {\r\n            while (state.offset < state.length) {\r\n                let value = lazyReadVarint.apply(state)\r\n                output.push({\r\n                    value,\r\n                    type: 'varint',\r\n                })\r\n            }\r\n        } else if (\r\n            type === 'fixed32' ||\r\n            type === 'float' ||\r\n            type === 'sfixed32' ||\r\n            type === 'fixed64' ||\r\n            type === 'double' ||\r\n            type === 'sfixed64'\r\n        ) {\r\n            while (state.offset < state.length) {\r\n                let val = (type === 'fixed32' || type === 'float' || type === 'sfixed32'\r\n                    ? readFixed32\r\n                    : readFixed64).apply(state)\r\n                output.push({\r\n                    value: val,\r\n                    type: type === 'fixed32' || type === 'float' || type === 'sfixed32' ? 'fixed32' : 'fixed64',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    repeated (key, type, lengthDelimitedIndex = -1) {\r\n        this._assertHas(key)\r\n        if (!this.has(key, 0, true)) {\r\n            return []\r\n        }\r\n        if (PACKABLE_TYPES.indexOf(type) === -1) return // forwards-compatibility\r\n        let newFields = []\r\n        if (lengthDelimitedIndex !== -1) {\r\n            let item = this.fields[key][lengthDelimitedIndex]\r\n            if (item.type === 'lengthDelimited') {\r\n                this._processPacked(type, item, newFields)\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.fields[key].length; i++) {\r\n                let item = this.fields[key][i]\r\n                if (item.type === 'lengthDelimited') {\r\n                    this._processPacked(type, item, newFields)\r\n                } else {\r\n                    // data is not packed\r\n                    newFields.push(item)\r\n                }\r\n            }\r\n        }\r\n        this.fields[key] = newFields\r\n        return this\r\n    }\r\n\r\n    toJSON () {\r\n        return outputToJson(this)\r\n    }\r\n\r\n    toInput () {\r\n        const msg = new InputMessage()\r\n        const fields = {}\r\n\r\n        for (let key in this.fields) {\r\n            const values = this.fields[key]\r\n            fields[key] = []\r\n\r\n            for (let i = 0; i < values.length; i++) {\r\n                const val = values[i]\r\n\r\n                if (val.type === 'varint') {\r\n                    fields[key].push({\r\n                        type: 'varint',\r\n                        value: val._varint ? val._varint : readVarint(val.value, this.data),\r\n                    })\r\n                } else if (val.type === 'lengthDelimited') {\r\n                    const obj = {\r\n                        type: 'lengthDelimited',\r\n                        value: val._buffer ? val._buffer : this.data.slice(val.value.start, val.value.end),\r\n                    }\r\n                    obj.tryToInput = () => new OutputMessage(obj.value, new Deserializer(obj.value).parse()).toInput()\r\n                    fields[key].push(obj)\r\n                } else {\r\n                    fields[key].push(val)\r\n                }\r\n            }\r\n        }\r\n        msg.fields = fields\r\n\r\n        return msg\r\n    }\r\n}\r\n\r\n\r\nif (typeof Symbol !== 'undefined') {\r\n    OutputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = OutputMessage.prototype.toJSON\r\n}\r\n\r\n\r\nmodule.exports = OutputMessage\r\n","const {\r\n    writeNumberVarint,\r\n    writeLongVarint,\r\n    writeFixed64,\r\n    writeFixed32,\r\n    writeLengthDelimited,\r\n} = require('./writers')\r\nconst { toByteArray } = require('./utils')\r\nconst { splitFloat, splitDouble } = require('./math')\r\nconst { WIRE_TYPES, VARINT_TYPES } = require('./constants')\r\nconst Long = require('long')\r\nconst LongBits = require('./longbits')\r\nconst writers = {\r\n    varint: writeLongVarint,\r\n    fixed32: writeFixed32,\r\n    fixed64: writeFixed64,\r\n    lengthDelimited: writeLengthDelimited,\r\n}\r\n\r\nclass Serializer {\r\n    constructor (msg, keepDefault = false) {\r\n        this.msg = msg\r\n        this.data = []\r\n        this.pos = 0\r\n        this.keepDefault = keepDefault\r\n    }\r\n\r\n    _getPrimitiveType (type) {\r\n        if (VARINT_TYPES.indexOf(type) > -1) {\r\n            return 'varint'\r\n        }\r\n        if (type === 'fixed32' || type === 'fixed64') {\r\n            return type\r\n        }\r\n        if (type === 'float' || type === 'sfixed32') {\r\n            return 'fixed32'\r\n        }\r\n        if (type === 'double' || type === 'sfixed64') {\r\n            return 'fixed64'\r\n        }\r\n        if (type === 'string' || type === 'bytes' || type === 'message' || type === 'lengthDelimited') {\r\n            return 'lengthDelimited'\r\n        }\r\n        throw Error(`Can't find primitive for ${type}`)\r\n    }\r\n\r\n    _coerceTo (field, type) {\r\n        let value = field.value\r\n        if (type === 'lengthDelimited') {\r\n            switch (field.type) {\r\n            case 'message':\r\n                return new Serializer(value).run()\r\n            case 'string':\r\n                return toByteArray(value)\r\n            case 'bytes':\r\n            case 'lengthDelimited':\r\n                return field.value\r\n            default:\r\n                throw Error(`${field.type} cannot be coerced to ${type}`)\r\n            }\r\n        }\r\n        if (field.type === 'sint32' || field.type === 'sint64') {\r\n            return LongBits.from(value).zzEncode()\r\n        }\r\n        if (field.type === 'float') {\r\n            return splitFloat(value)\r\n        }\r\n        if (field.type === 'double') {\r\n            return splitDouble(value)\r\n        }\r\n        if (field.type === 'bool' && type === 'varint') {\r\n            return !!field.value\r\n        }\r\n        return field.value\r\n    }\r\n\r\n    _coerce (field) {\r\n        let type = this._getPrimitiveType(field.type)\r\n        return {\r\n            type,\r\n            value: this._coerceTo(field, type),\r\n        }\r\n    }\r\n\r\n    _preProcess () {\r\n        let ret = []\r\n        let packed = {}  // temp storage for further packing repeateds\r\n        let j = 0\r\n\r\n        for (let i in this.msg.fields) {\r\n            if (this.msg.fields.hasOwnProperty(i)) {\r\n                let vals = this.msg.fields[i]\r\n                for (let k = 0; k < vals.length; k++) {\r\n                    let field = vals[k]\r\n                    if (field === undefined) continue // sparse\r\n                    field = this._coerce(field)\r\n                    let { type, value } = field\r\n\r\n                    if (type === 'lengthDelimited' && value.length === 0 && !this.keepDefault) {\r\n                        // l-delim has 0 length, thus skipping.\r\n                        continue\r\n                    }\r\n\r\n                    if ((type === 'varint' || type === 'fixed32' || type === 'fixed64') && !this.msg._unpacked[i]) {\r\n                        // packing this boi\r\n                        if (!(i in packed)) {\r\n                            packed[i] = []\r\n                        }\r\n                        packed[i].push(field)\r\n                    } else {\r\n                        ret[j++] = {\r\n                            type,\r\n                            value,\r\n                            key: i,\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // second pass for packed\r\n        for (let i in packed) {\r\n            if (packed.hasOwnProperty(i)) {\r\n                if (packed[i].length > 1) {\r\n                    let obj = {\r\n                        data: [],\r\n                        pos: 0,\r\n                    }\r\n                    for (let k = 0; k < packed[i].length; k++) {\r\n                        let { type, value } = packed[i][k]\r\n                        if (type === 'varint' && typeof value === 'number') {\r\n                            writeNumberVarint.call(obj, value)\r\n                        } else {\r\n                            let writer = writers[type]\r\n                            writer.call(obj, value)\r\n                        }\r\n                    }\r\n                    ret[j++] = {\r\n                        key: i,\r\n                        type: 'lengthDelimited',\r\n                        value: obj.data,\r\n                    }\r\n                } else {\r\n                    let { type, value } = packed[i][0]\r\n                    ret[j++] = {\r\n                        type,\r\n                        value,\r\n                        key: i,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    run () {\r\n        let preprocessed = this._preProcess()\r\n\r\n        for (let i = 0; i < preprocessed.length; i++) {\r\n            let { key, type, value } = preprocessed[i]\r\n\r\n            if (!this.keepDefault && (!value || value.length === 0 || (value.lo === 0 && value.hi === 0))) {\r\n                continue\r\n            }\r\n\r\n            // header\r\n            writeNumberVarint.call(this, key * 8 + WIRE_TYPES[type])\r\n\r\n            if (type === 'varint' && typeof value === 'number') {\r\n                writeNumberVarint.call(this, value)\r\n            } else {\r\n                let writer = writers[type]\r\n                writer.call(this, value)\r\n            }\r\n        }\r\n\r\n        return this.data\r\n    }\r\n}\r\n\r\nmodule.exports = Serializer\r\n"],"sourceRoot":""}