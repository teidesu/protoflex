{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./node_modules/long/src/long.js","webpack:///./src/utils.js","webpack:///./src/longbits.js","webpack:///./src/json-api.js","webpack:///./src/math.js","webpack:///./src/readers.js","webpack:///./src/deserializer.js","webpack:///./src/index.js","webpack:///./src/output-message.js","webpack:///./src/input-message.js","webpack:///./src/serializer.js","webpack:///./src/writers.js"],"names":["VARINT_TYPES","PACKABLE_TYPES","PROTOBUF_TYPES","WIRE_TYPES","varint","fixed64","lengthDelimited","fixed32","WIRE_TYPES_NAMES","undefined","DEFAULT_VALUES","int32","int64","uint32","uint64","sint32","sint64","bool","sfixed32","sfixed64","bytes","string","message","double","float","module","exports","TWO_TO_20","TWO_TO_23","TWO_TO_32","TWO_TO_33","TWO_TO_52","TWO_TO_63","TWO_TO_64","MIN_UINT32","MAX_UINT32","MIN_INT32","MAX_INT32","MIN_INT64","MAX_INT64","MIN_UINT64","MAX_UINT64","MAX_FLOAT","MIN_FLOAT","MIN_DOUBLE","MAX_DOUBLE","keyByMultiple","arr","key","ret","forEach","v","push","toHex","ar","toByteArray","i","length","RangeError","t","toString","fromHex","str","Error","j","parseInt","isNaN","c","charCodeAt","fromByteArray","start","end","out","c1","String","fromCharCode","c2","c3","c4","u","join","require","Long","LongBits","lo","hi","unsigned","mask","value","zero","sign","fromNumber","fromString","low","high","toNumber","zzEncode","zzDecode","inferTypeByValue","Buffer","Uint8Array","Array","isArray","constructor","name","hasOwnProperty","indexOf","_coerceInputTo","type","jsonToInput","p","val","from","json","JSON","parse","unpacked","fields","inputToJson","msg","index","field","itype","_unpacked","outputToJson","f","data","slice","e","_varint","toLong","_knownFields","typ","zigZagDecode","isBigint","and","shiftRight","xor","joinDouble","exp","mant","NaN","Infinity","Math","pow","joinFloat","splitFloat","round","floor","log","LN2","splitDouble","mantHigh","mantLow","maxDoubleExponent","minDoubleExponent","x","lazyReadVarint","offset","readVarint","fullyReadVarint","call","readFixed32","readFixed64","readLengthDelimited","len","Deserializer","ArrayBuffer","_parseField","header","_parseHeader","func","OutputMessage","InputMessage","ja","utils","create","_prepareJsonInput","ip","fromJson","h","_cache","has","_throwHas","sub","_assertHas","_typeToWireType","_checkType","getter","tag","it","known","ignoreKnown","k","get","self","next","done","Symbol","iterator","_assertType","_string","_buffer","deserializer","_message","_cached","clone","item","output","state","apply","lengthDelimitedIndex","newFields","_processPacked","prototype","for","toJSON","Serializer","_parent","editable","ind","set","splice","_addField","items","last","fromValue","map","run","toWire","toUint8Array","buffer","_varints","to","long","_addVarintField","writeNumberVarint","writeLongVarint","writeFixed64","writeFixed32","writeLengthDelimited","writers","pos","_getPrimitiveType","_coerceTo","packed","vals","_coerce","obj","writer","preprocessed","_preProcess","bits"],"mappings":"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;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,qDAAqD,cAAc;;AAEnE;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA,uBAAuB;;AAEvB;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,sBAAsB,8CAA8C;AAC/E,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB,8CAA8C;AAC/E,WAAW,SAAS;AACpB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,kBAAkB;AAC7F;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,iFAAiF,oBAAoB;AACrG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,oFAAoF,uBAAuB;AAC3G;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yEAAyE,mBAAmB;AAC5F;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,kBAAkB;AACrE;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,oBAAoB;AACnG;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,oBAAoB;AAChG;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,kBAAkB;AACtF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,qBAAqB;AAClH;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,sBAAsB;AACnI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1yCA,SAASC,aAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AAC9B,MAAIC,GAAG,GAAG,EAAV;AACAF,KAAG,CAACG,OAAJ,CAAY,UAACC,CAAD,EAAO;AACf,QAAIA,CAAC,CAACH,GAAD,CAAD,IAAUC,GAAd,EAAmB;AACfA,SAAG,CAACE,CAAC,CAACH,GAAD,CAAF,CAAH,CAAYI,IAAZ,CAAiBD,CAAjB;AACH,KAFD,MAEO;AACHF,SAAG,CAACE,CAAC,CAACH,GAAD,CAAF,CAAH,GAAc,CAACG,CAAD,CAAd;AACH;AACJ,GAND;AAOA,SAAOF,GAAP;AACH;;AAG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","file":"protoflex.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PB\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PB\"] = factory();\n\telse\n\t\troot[\"PB\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","const VARINT_TYPES = [\n    'int32',\n    'int64',\n    'uint32',\n    'uint64',\n    'sint32',\n    'sint64',\n    'varint',\n    'bool',\n]\nconst PACKABLE_TYPES = [\n    ...VARINT_TYPES,\n    'fixed32',\n    'fixed64',\n    'sfixed32',\n    'sfixed64',\n    'double',\n    'float',\n]\n\nconst PROTOBUF_TYPES = [\n    'int32',\n    'int64',\n    'uint32',\n    'uint64',\n    'sint32',\n    'sint64',\n    'bool',\n    'fixed32',\n    'fixed64',\n    'sfixed32',\n    'sfixed64',\n    'bytes',\n    'string',\n    'message',\n    'double',\n    'float',\n]\n\nconst WIRE_TYPES = {\n    varint: 0,\n    fixed64: 1,\n    lengthDelimited: 2,\n    fixed32: 5,\n}\n\nconst WIRE_TYPES_NAMES = [\n    'varint',\n    'fixed64',\n    'lengthDelimited',\n    undefined,\n    undefined,\n    'fixed32',\n]\nconst DEFAULT_VALUES = {\n    int32: 0,\n    int64: 0,\n    uint32: 0,\n    uint64: 0,\n    sint32: 0,\n    sint64: 0,\n    bool: false,\n    fixed32: 0,\n    fixed64: 0,\n    sfixed32: 0,\n    sfixed64: 0,\n    bytes: '',\n    string: '',\n    message: null,\n    double: 0,\n    float: 0,\n}\n\n\nmodule.exports = {\n    TWO_TO_20: 1048576,\n    TWO_TO_23: 8388608,\n    TWO_TO_32: 4294967296,\n    TWO_TO_33: 8589934592,\n    TWO_TO_52: 4503599627370496,\n    TWO_TO_63: 9223372036854775808,\n    TWO_TO_64: 18446744073709551616,\n\n    VARINT_TYPES,\n    PACKABLE_TYPES,\n    WIRE_TYPES,\n    WIRE_TYPES_NAMES,\n    PROTOBUF_TYPES,\n    DEFAULT_VALUES,\n\n    MIN_UINT32: 0,\n    MAX_UINT32: 0xFFFFFFFF,\n    MIN_INT32: -0x80000000,\n    MAX_INT32: 0x7FFFFFFF,\n    MIN_INT64: '-9223372036854775808',\n    MAX_INT64: '9223372036854775807',\n    MIN_UINT64: 0,\n    MAX_UINT64: '18446744073709551615',\n    MAX_FLOAT: 3.4028234663852886e+38,\n    MIN_FLOAT: 1.1754943508222875e-38,\n    MIN_DOUBLE: 2.2250738585072014e-308,\n    MAX_DOUBLE: 1.7976931348623157e+308,\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","function keyByMultiple (arr, key) {\n    let ret = {}\n    arr.forEach((v) => {\n        if (v[key] in ret) {\n            ret[v[key]].push(v)\n        } else {\n            ret[v[key]] = [v]\n        }\n    })\n    return ret\n}\n\n\nfunction toHex (ar) {\n    if (typeof ar === 'string') {\n        ar = toByteArray(ar)\n    }\n    let ret = ''\n    for (let i = 0; i < ar.length; i++) {\n        if (ar[i] > 255 || ar[i] < 0) throw RangeError(`${ar[i]} is not in range [0, 255]`)\n        let t = ar[i].toString(16)\n        ret += t.length > 1 ? t : '0' + t\n    }\n    return ret\n}\n\nfunction fromHex (str) {\n    if (str.length % 2 !== 0) throw Error('Invalid hex')\n    let ret = []\n    for (let i = 0, j = 0; j < str.length; i++, j += 2) {\n        let v = parseInt(str[j] + str[j + 1], 16)\n        if (isNaN(v)) {\n            throw Error('Invalid hex')\n        }\n        ret[i] = v\n    }\n    return ret\n}\n\nfunction toByteArray (str) {\n    let ret = []\n    let j = 0\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i)\n        if (c < 0x80) {\n            ret[j++] = c\n        } else if (c < 0x800) {\n            ret[j++] = 0xc0 | (c >> 6)\n            ret[j++] = 0x80 | (c & 0x3f)\n        } else if (c < 0xd800 || c >= 0xe000) {\n            ret[j++] = 0xe0 | (c >> 12)\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\n            ret[j++] = 0x80 | (c & 0x3f)\n        } else {\n            // pair\n            i++\n            c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff))\n\n            ret[j++] = 0xf0 | (c >> 18)\n            ret[j++] = 0x80 | ((c >> 12) & 0x3f)\n            ret[j++] = 0x80 | ((c >> 6) & 0x3f)\n            ret[j++] = 0x80 | (c & 0x3f)\n        }\n    }\n    return ret\n}\n\nfunction fromByteArray (bytes, start = 0, end = bytes.length) {\n    if (!bytes) return ''\n    let out = []\n    let j = 0\n\n    for (let i = start; i < end; i++) {\n        let c1 = bytes[i]\n        if (c1 > 0xff) throw Error('Invalid byte array')\n\n        if (c1 < 0x80) {\n            out[j++] = String.fromCharCode(c1)\n        } else if (c1 > 0xbf && c1 < 0xe0) {\n            let c2 = bytes[++i]\n            out[j++] = String.fromCharCode(\n                (c1 & 0x1f) << 6 | c2 & 0x3f\n            )\n        } else if (c1 > 0xdf && c1 < 0xf0) {\n            let c2 = bytes[++i]\n            let c3 = bytes[++i]\n            out[j++] = String.fromCharCode((c1 & 0xf) << 12 | (c2 & 0x3f) << 6 | c3 & 0x3f)\n        } else {\n            // pair\n            let c2 = bytes[++i]\n            let c3 = bytes[++i]\n            let c4 = bytes[++i]\n            let u = (\n                (c1 & 0x07) << 18 |\n                (c2 & 0x3f) << 12 |\n                (c3 & 0x3f) << 6 |\n                (c4 & 0x3f)\n            ) - 0x10000\n            out[j++] = String.fromCharCode(0xd800 | (u >> 10))\n            out[j++] = String.fromCharCode(0xdc00 | (u & 0x3ff))\n\n        }\n    }\n\n    return out.join('')\n}\n\nmodule.exports = {\n    keyByMultiple,\n\n    toByteArray,\n    fromByteArray,\n    toHex,\n    fromHex\n}\n","const { TWO_TO_32 } = require('./constants')\nconst Long = require('long')\n\nclass LongBits {\n    constructor (lo, hi) {\n        this.lo = lo >>> 0\n        this.hi = hi >>> 0\n    }\n\n    toNumber (unsigned = false) {\n        if (!unsigned && this.hi >>> 31) {\n            let lo = ~this.lo + 1 >>> 0\n            let hi = ~this.hi >>> 0\n            if (!lo) {\n                hi = hi + 1 >>> 0\n            }\n            return -(lo + hi * TWO_TO_32)\n        }\n        return this.lo + this.hi * TWO_TO_32\n    }\n\n    toLong (unsigned) {\n        return new Long(this.lo, this.hi, unsigned)\n    }\n\n    zzEncode () {\n        let mask = this.hi >>> 31\n        this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\n        this.lo = (this.lo << 1 ^ mask) >>> 0\n        return this\n    }\n\n    zzDecode () {\n        let mask = -(this.lo & 1)\n        this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\n        this.hi = (this.hi >>> 1 ^ mask) >>> 0\n        return this\n    }\n\n    clone () {\n        return new LongBits(this.lo, this.hi)\n    }\n\n    static fromNumber (value) {\n        if (value === 0) {\n            return zero\n        }\n        let sign = value < 0\n        if (sign) {\n            value = -value\n        }\n        let lo = value >>> 0\n        let hi = (value - lo) / TWO_TO_32 >>> 0\n        if (sign) {\n            hi = ~hi >>> 0\n            lo = ~lo >>> 0\n            if (++lo > TWO_TO_32) {\n                lo = 0\n                if (++hi > TWO_TO_32) {\n                    hi = 0\n                }\n            }\n        }\n        return new LongBits(lo, hi)\n    }\n\n    static from (value) {\n        if (typeof value === 'number') {\n            return LongBits.fromNumber(value)\n        }\n        if (typeof value === 'string') {\n            value = Long.fromString(value)\n        }\n        if (value.low || value.high) {\n            return new LongBits(value.low >>> 0, value.high >>> 0)\n        } else if (value.lo || value.hi) {\n            return new LongBits(value.lo >>> 0, value.hi >>> 0)\n        } else {\n            return zero\n        }\n    }\n}\n\nconst zero = new LongBits(0, 0)\nzero.toNumber = () => 0\nzero.zzEncode = zero.zzDecode = function () { return this }\nzero.length = () => 1\n\nLongBits.zero = zero\n\nmodule.exports = LongBits\n","const Long = require('long')\nconst { PROTOBUF_TYPES, DEFAULT_VALUES } = require('./constants')\nconst { toByteArray, fromByteArray } = require('./utils')\nconst LongBits = require('./longbits')\n\nfunction inferTypeByValue (value) {\n    if (value === null || value === undefined || (typeof value === 'number' && isNaN(value))) {\n        return null\n    }\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\n        instanceof Uint8Array) {\n        return 'bytes'\n    }\n    if (Array.isArray(value)) {\n        return 'repeated'\n    }\n    if (typeof value === 'string') {\n        return 'string'\n    }\n    if (typeof value === 'number') {\n        return value % 1 === 0 ? 'int32' : 'float'\n    }\n    if (typeof value === 'bigint') {\n        return 'int64'\n    }\n    if (typeof value === 'boolean') {\n        return 'bool'\n    }\n    if (value.constructor.name === 'Object') {\n        for (let key in value) {\n            if (value.hasOwnProperty(key) && key !== 'unpacked') {\n                if (key === 'value') {\n                    return inferTypeByValue(value.value)\n                }\n                if (PROTOBUF_TYPES.indexOf(key) > -1) {\n                    return key\n                }\n                return 'message'\n            }\n        }\n        return 'message'\n    }\n    if (value instanceof Long) {\n        return value.unsigned ? 'uint64' : 'int64'\n    }\n    return null\n}\n\nfunction _coerceInputTo (value, type) {\n    if (type === 'message') {\n        return jsonToInput(value)\n    }\n    if (type === 'repeated') {\n        let ret = []\n        for (let p = 0; p < value.length; p++) {\n            let val = value[p]\n            let type = inferTypeByValue(val)\n            if (val && val.constructor.name === 'Object' && type !== 'message') {\n                val = val[type]\n            }\n            ret[p] = {\n                type,\n                value: _coerceInputTo(val, type),\n            }\n        }\n        return ret\n    }\n    if (typeof Buffer !== 'undefined' && value instanceof Buffer || typeof Uint8Array !== 'undefined' && value\n        instanceof Uint8Array) {\n        return Array.from(value)\n    }\n    if ((type === 'int64' || type === 'uint64' || type === 'sint64' || type === 'fixed64') && !(value\n        instanceof Long)) {\n        return typeof value === 'number' ? Long.fromNumber(value, type === 'uint64') :\n               typeof value === 'bigint' ?\n               Long.fromString(value.toString(), type === 'uint64') :\n               Long.fromString(value, type === 'uint64')\n    }\n    if (type === 'int32' || type === 'uint32' || type === 'sint32' || type === 'fixed32') {\n        return parseInt(value)\n    }\n    if (type === 'bytes') {\n        if (!Array.isArray(value)) {\n            return toByteArray(value)\n        }\n        return value\n    }\n    if (type === 'string') {\n        if (Array.isArray(value)) {\n            return fromByteArray(value)\n        }\n        return value\n    }\n    if (value && value.constructor.name === 'Object' && type !== 'message') {\n        return value[type]\n    }\n    return value\n}\n\nfunction jsonToInput (json) {\n    if (typeof json === 'string') {\n        json = JSON.parse(json)\n    }\n\n    let ret = {}\n    let unpacked = []\n\n    for (let j in json) {\n        if (json.hasOwnProperty(j)) {\n            if (!isNaN(parseInt(j))) {\n                if (!ret[j]) {\n                    ret[j] = []\n                }\n                let type = inferTypeByValue(json[j])\n                if (type === null) continue\n                let value = json[j]\n                if (value && value.constructor.name === 'Object' && type !== 'message') {\n                    if (value.unpacked) {\n                        unpacked[unpacked.length] = j\n                    }\n                    value = 'value' in value ? value.value : value[type]\n                }\n\n                value = _coerceInputTo(value, type)\n\n                if (type === 'repeated') {\n                    for (let i = 0; i < value.length; i++) {\n                        ret[j][ret[j].length] = value[i]\n                    }\n                } else {\n                    ret[j][ret[j].length] = {\n                        type,\n                        value,\n                    }\n                }\n            }\n        }\n    }\n\n    return {\n        fields: ret,\n        unpacked,\n    }\n}\n\nfunction inputToJson (msg, constructor) {\n    let ret = {}\n    let fields = msg.fields\n\n    for (let key in fields) {\n        if (fields.hasOwnProperty(key)) {\n            if (!ret[key]) {\n                ret[key] = []\n            }\n\n            for (let index = 0; index < fields[key].length; index++) {\n                let field = fields[key][index]\n                if (field === undefined) continue // sparse\n\n                let value = field.value\n\n                if (value instanceof Long) {\n                    value = value.toString()\n                }\n\n                if (value instanceof constructor) {\n                    value = inputToJson(value, constructor)\n                }\n\n                let itype = inferTypeByValue(value)\n\n                if (itype !== field.type) {\n                    value = {\n                        [field.type]: value\n                    }\n                }\n\n                ret[key][ret[key].length] = value\n            }\n        }\n    }\n\n    for (let key in ret) {\n        if (ret.hasOwnProperty(key)) {\n            if (ret[key].length === 1) {\n                ret[key] = ret[key][0]\n            } else if (msg._unpacked[key]) {\n                ret[key] = {\n                    unpacked: true,\n                    value: ret[key],\n                }\n            }\n        }\n    }\n\n    return ret\n}\n\nfunction outputToJson (msg) {\n    let ret = {}\n    let fields = msg.fields\n\n    for (let key in fields) {\n        if (fields.hasOwnProperty(key)) {\n            if (!ret[key]) {\n                ret[key] = []\n            }\n            for (let i = 0; i < fields[key].length; i++) {\n                let f = fields[key][i]\n                let v = f.value\n                if (f.type === 'lengthDelimited') {\n                    v = msg.data.slice(v.start, v.end)\n                    try {\n                        v = outputToJson(msg.message(key, i))\n                    } catch (e) {\n                        v = fromByteArray(v)\n                    }\n                }\n                if (f.type === 'varint') {\n                    v = msg._varint(key, i)\n                }\n                if (v instanceof LongBits) {\n                    v = v.toLong().toString()\n                }\n\n                ret[key][ret[key].length] = v\n            }\n        }\n    }\n\n    for (let key in msg._knownFields) {\n        if (msg._knownFields.hasOwnProperty(key) && msg._knownFields[key].length) {\n            let typ = msg._knownFields[key][0]\n            if (!(key in ret)) {\n                let val = DEFAULT_VALUES[typ]\n                if (typeof val === 'number') val += ''\n                if (val instanceof LongBits) val = val.toLong()\n                if (val instanceof Long) val = val.toString()\n                ret[key] = [val]\n            }\n        }\n    }\n\n    for (let key in ret) {\n        if (ret.hasOwnProperty(key) && ret[key].length === 1) {\n            ret[key] = ret[key][0]\n        }\n    }\n    return ret\n}\n\nmodule.exports = {\n    jsonToInput,\n    outputToJson,\n    inputToJson,\n}\n","const { TWO_TO_52, TWO_TO_32, TWO_TO_23, TWO_TO_20, MIN_FLOAT, MAX_FLOAT, MIN_DOUBLE, MAX_DOUBLE } = require('./constants')\n\nfunction zigZagDecode (val, isBigint = false) {\n    if (!isBigint) {\n        return val & 0x1 ? (val >> 1) ^ (~0) : val >> 1\n    }\n    return val.and(0x1) ? val.shiftRight(1).xor(~0) : val.shiftRight(1)\n}\n\nfunction joinDouble (lo, hi) {\n    let sign = (hi >> 31) * 2 + 1\n    let exp = (hi >> 20) & 0x7ff\n    let mant = TWO_TO_32 * (hi & 0xfffff) + lo\n\n    if (exp === 0x7ff) {\n        if (mant) {\n            return NaN\n        } else {\n            return sign * Infinity\n        }\n    }\n\n    if (exp === 0) {\n        return sign * Math.pow(2, -1074) * mant\n    } else {\n        return sign * Math.pow(2, exp - 1075) * (mant + TWO_TO_52)\n    }\n}\n\nfunction joinFloat (lo) {\n    let sign = (lo >> 31) * 2 + 1\n    let exp = (lo >> 23) & 0x7ff\n    let mant = lo & 0x7fffff\n\n    if (exp === 0xff) {\n        if (mant) {\n            return NaN\n        } else {\n            return sign * Infinity\n        }\n    }\n\n    if (exp === 0) {\n        return sign * Math.pow(2, -149) * mant\n    } else {\n        return sign * Math.pow(2, exp - 150) * (mant + TWO_TO_23)\n    }\n}\n\nfunction splitFloat (value) {\n    let sign = value < 0 ? 1 : 0\n    if (sign) {\n        value = -value\n    }\n    let exp\n    let mant\n\n    if (value === 0) {\n        return 1 / value < 0 ? 0x80000000 : 0\n    }\n\n    if (isNaN(value)) {\n        return 0x7FFFFFFF\n    }\n\n    if (value > MAX_FLOAT) {\n        return ((sign << 31) | (0x7F800000)) >>> 0\n    }\n\n    if (value < MIN_FLOAT) {\n        mant = Math.round(value / Math.pow(2, -149))\n        return ((sign << 31) | mant) >>> 0\n    }\n\n    exp = Math.floor(Math.log(value) / Math.LN2)\n    mant = value * Math.pow(2, -exp)\n    mant = Math.round(mant * TWO_TO_23) & 0x7FFFFF\n\n    return ((sign << 31) | ((exp + 127) << 23) | mant) >>> 0\n}\n\nfunction splitDouble (value) {\n    let sign = value < 0 ? 1 : 0\n    if (sign) {\n        value = -value\n    }\n    let exp\n    let mant\n    let mantHigh\n    let mantLow\n\n    if (value === 0) {\n        return { hi: 1 / value < 0 ? 0x80000000 : 0, lo: 0 }\n    }\n\n    if (isNaN(value)) {\n        return { hi: 0x7FFFFFFF, lo: 0xFFFFFFFF }\n    }\n\n    if (value > MAX_DOUBLE) {\n        return { hi: ((sign << 31) | (0x7FF00000)) >>> 0, lo: 0 }\n    }\n\n    if (value < MIN_DOUBLE) {\n        mant = value / Math.pow(2, -149)\n        mantHigh = value / TWO_TO_32\n        return {\n            hi: ((sign << 31) | mantHigh) >>> 0,\n            lo: mant >>> 0,\n        }\n    }\n\n    let maxDoubleExponent = 1023\n    let minDoubleExponent = -1022\n    let x = value\n    exp = 0\n    if (x >= 2) {\n        while (x >= 2 && exp < maxDoubleExponent) {\n            exp++\n            x = x / 2\n        }\n    } else {\n        while (x < 1 && exp > minDoubleExponent) {\n            x = x * 2\n            exp--\n        }\n    }\n    mant = value * Math.pow(2, -exp)\n\n    mantHigh = (mant * TWO_TO_20) & 0xFFFFF\n    mantLow = (mant * TWO_TO_52) >>> 0\n\n    return {\n        hi: ((sign << 31) | ((exp + 1023) << 20) | mantHigh) >>> 0,\n        lo: mantLow\n    }\n}\n\nmodule.exports = {\n    splitDouble,\n    splitFloat,\n    joinDouble,\n    joinFloat,\n    zigZagDecode,\n}\n","const LongBits = require('./longbits')\n\nfunction lazyReadVarint () {\n    let offset = this.offset\n    while (this.data[this.offset++] & 0x80) {}\n    return offset\n}\n\nfunction readVarint (offset, data, length = data.length) {\n    let ret = new LongBits(0, 0)\n    let i = 0\n    if (length - offset > 4) {\n        for (; i < 4; ++i) {\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << 28) >>> 0\n        ret.hi = (ret.hi | (data[offset] & 0x7f) >> 4) >>> 0\n        if (data[offset++] < 0x80) {\n            return ret\n        }\n        i = 0\n    } else {\n        for (; i < 3; ++i) {\n            if (offset >= length) {\n                throw RangeError('Unexpected end while reading varint')\n            }\n            ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n        ret.lo = (ret.lo | (data[offset] & 0x7f) << i * 7) >>> 0\n        return ret\n    }\n    if (length - offset > 4) {\n        for (; i < 5; ++i) {\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n    } else {\n        for (; i < 5; ++i) {\n            if (offset >= length) {\n                throw RangeError('Unexpected end while reading varint')\n            }\n            ret.hi = (ret.hi | (data[offset] & 0x7f) << i * 7 + 3) >>> 0\n            if (data[offset++] < 0x80) {\n                return ret\n            }\n        }\n    }\n    throw Error('Invalid varint encoding')\n}\n\nfunction fullyReadVarint () {\n    let offset = lazyReadVarint.call(this)\n    return readVarint(offset, this.data, this.length)\n}\n\nfunction readFixed32 () {\n    return this.data[this.offset++] |\n        this.data[this.offset++] << 8 |\n        this.data[this.offset++] << 16 |\n        this.data[this.offset++] << 24\n\n}\n\nfunction readFixed64 () {\n    let lo = readFixed32.call(this)\n    let hi = readFixed32.call(this)\n    return new LongBits(lo, hi)\n}\n\nfunction readLengthDelimited () {\n    let len = fullyReadVarint.call(this).toNumber(true)\n    let start = this.offset\n    return {\n        start,\n        end: this.offset += len,\n        length: len,\n    }\n}\n\nmodule.exports = {\n    readVarint,\n    readFixed32,\n    readFixed64,\n    readLengthDelimited,\n    lazyReadVarint,\n    fullyReadVarint,\n}\n","const {\n    WIRE_TYPES_NAMES,\n} = require('./constants')\nconst {\n    readFixed32,\n    readFixed64,\n    readLengthDelimited,\n    lazyReadVarint,\n    fullyReadVarint\n} = require('./readers')\n\nclass Deserializer {\n    constructor (data) {\n        if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n            data = new Uint8Array(data)\n        }\n        if (!(Array.isArray(data)\n            || (typeof Buffer !== 'undefined' && data instanceof Buffer)\n            || (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array)\n        )) {\n            throw Error('Input for deserializer must be an array/buffer')\n        }\n        this.data = data\n        this.offset = 0\n        this.length = data.length\n    }\n\n    parse () {\n        let ret = []\n        while (this.offset < this.length) {\n            const field = this._parseField()\n            ret.push(field)\n        }\n        if (this.offset > this.length) {\n            throw Error('Buffer exhausted')\n        }\n        return ret\n    }\n\n    _parseField () {\n        let header = this._parseHeader()\n        let type = header.type\n        let key = header.key\n        let start = this.offset\n        let func = {\n            0: lazyReadVarint,\n            1: readFixed64,\n            2: readLengthDelimited,\n            5: readFixed32,\n        }[type]\n        if (!func) {\n            throw Error('Unknown wire type: ' + type)\n        }\n        let value = func.call(this)\n        return {\n            key,\n            value,\n            type: WIRE_TYPES_NAMES[type],\n        }\n    }\n\n    _parseHeader () {\n        let value = fullyReadVarint.call(this).toNumber(true)\n\n        return {\n            type: value & 0x07,\n            key: value >> 3\n        }\n    }\n}\n\nmodule.exports = Deserializer\n","const OutputMessage = require('./output-message')\nconst InputMessage = require('./input-message')\nconst Deserializer = require('./deserializer')\nconst ja = require('./json-api')\nconst utils = require('./utils')\n\nconst parse = v => new OutputMessage(v, new Deserializer(v).parse())\nconst create = () => new InputMessage()\n\nfunction _prepareJsonInput (ip, j) {\n    for (let key in j.fields) {\n        if (j.fields.hasOwnProperty(key)) {\n            for (let i = 0; i < j.fields[key].length; i++) {\n                if (j.fields[key][i].type === 'message') {\n                    let ip = new InputMessage()\n                    j.fields[key][i].value = _prepareJsonInput(ip, j.fields[key][i].value)\n                }\n            }\n        }\n    }\n\n    ip.unpacked(j.unpacked)\n    ip.fields = j.fields\n\n    return ip\n}\n\nconst fromJson = j => {\n    let ip = new InputMessage()\n    let data = ja.jsonToInput(j)\n    ip = _prepareJsonInput(ip, data)\n    return ip\n}\n\nconst fromHex = h => parse(utils.fromHex(h))\n\nmodule.exports = {\n    OutputMessage,\n    InputMessage,\n    parse,\n    fromHex,\n    create,\n    fromJson,\n}\n","const {\n    joinDouble,\n    joinFloat,\n    zigZagDecode,\n} = require('./math')\nconst {\n    keyByMultiple,\n    fromByteArray,\n    toHex,\n} = require('./utils')\nconst {\n    VARINT_TYPES,\n    PACKABLE_TYPES,\n} = require('./constants')\nconst {\n    readVarint,\n    readFixed32,\n    readFixed64,\n    lazyReadVarint,\n} = require('./readers')\nconst Deserializer = require('./deserializer')\nconst LongBits = require('./longbits')\nconst Long = require('long')\nconst { outputToJson } = require('./json-api')\n\nclass OutputMessage {\n    constructor (data, fields = []) {\n        this.data = data\n        this.fields = keyByMultiple(fields, 'key')\n        this._cache = {}\n        this._knownFields = {}\n    }\n\n    _assertHas (key, index = 0) {\n        let has = this.has(key, index)\n        if (!has) {\n            this._throwHas(key, index)\n        }\n        return has\n    }\n\n    _checkType (key, index, type, sub = false) {\n        this._assertHas(key, index)\n        // check for sub type\n        if (sub) {\n            if (key in this._knownFields &&\n                (this._knownFields[key].indexOf('any') > -1 || this._knownFields[key].indexOf(type) > -1)\n            ) {\n                return true\n            } else {\n                return key in this._knownFields ? this._knownFields[key].indexOf(type) > -1 : true\n            }\n        }\n        return type === this._typeToWireType(this.type(key, index))\n\n    }\n\n    _assertType (key, index, type, sub = false) {\n        if (!this._checkType(key, index, type, sub)) {\n            throw Error(`Field ${key} is not of type ${type}`)\n        }\n        return true\n    }\n\n    _cached (func, key, index, getter) {\n        let tag = `${func}(${key};${index})`\n        if (!(tag in this._cache)) {\n            this._cache[tag] = getter()\n        }\n        return this._cache[tag]\n    }\n\n    _throwHas (key, index) {\n        throw Error(`Object does not have ${key}:${index} field`)\n    }\n\n    _typeToWireType (type) {\n        if (VARINT_TYPES.indexOf(type) > -1) {\n            return 'varint'\n        }\n        if (type === 'fixed32' || type === 'fixed64') return type\n        return 'lengthDelimited'\n    }\n\n    known (...fields) {\n        fields.forEach(it => {\n            if (typeof it === 'number') {\n                this._knownFields[it] = ['any']\n            } else if (Array.isArray((it))) {\n                this.known(...it)\n            } else if (typeof it === 'object') {\n                for (let key in it) {\n                    if (it.hasOwnProperty(key)) {\n                        let val = it[key]\n                        if (!Array.isArray(val)) val = [val]\n                        this._knownFields[key] = val\n                    }\n                }\n            }\n        })\n        return this\n    }\n\n    has (key, index = 0, ignoreKnown = false) {\n        let has = key in this.fields && index in this.fields[key]\n        if (!ignoreKnown && key in this._knownFields) {\n            return true\n        }\n        return has\n    }\n\n    length (key) {\n        return this._assertHas(key) && this.fields[key].length\n    }\n\n    type (key, index = 0) {\n        if (this.has(key, index, true)) {\n            return this.fields[key][index].type\n        } else if (key in this._knownFields) {\n            return this._knownFields[key][0]\n        } else {\n            this._throwHas(key, index)\n        }\n    }\n\n    array (key, type) {\n        if (this.has(key, 0, true)) {\n            let ret = []\n            let i = 0\n            for (let k = 0; k < this.length(key); k++) {\n                ret[i++] = this.get(key, type, k)\n            }\n            return ret\n        } else if (key in this._knownFields) {\n            return []\n        } else {\n            this._throwHas(key, 0)\n        }\n    }\n\n    iter (key, type) {\n        if (this.has(key, 0, true)) {\n            let index = 0\n            const self = this\n            const length = this.length(key)\n\n            let ret = {\n                next() {\n                    if (index >= length) {\n                        return { done: true, value: undefined }\n                    }\n\n                    let value = self.get(key, type, index)\n\n                    index += 1\n\n                    return {\n                        value,\n                        done: false\n                    }\n                }\n            }\n\n            if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n                ret[Symbol.iterator] = () => ret\n            }\n\n            return ret\n        } else if (key in this._knownFields) {\n            return { next () { return { value: undefined, done: true } } }\n        } else {\n            this._throwHas(key, 0)\n        }\n    }\n\n    get (key, type, index = 0) {\n        return this._assertHas(key, index) && this[type].call(this, key, index)\n    }\n\n    string (key, index = 0) {\n        this._assertType(key, index, 'lengthDelimited')\n        this._assertType(key, index, 'string', true)\n        if (!this.has(key, index, true)) {\n            return ''\n        }\n        let it = this.fields[key][index].value\n        if (!('_string' in this.fields[key][index])) {\n            this.fields[key][index]._string = fromByteArray(this.data, it.start, it.end)\n        }\n        return this.fields[key][index]._string\n    }\n\n    bytes (key, index = 0) {\n        this._assertType(key, index, 'lengthDelimited')\n        this._assertType(key, index, 'bytes', true)\n        if (!this.has(key, index, true)) {\n            return []\n        }\n        if (!('_buffer' in this.fields[key][index])) {\n            let it = this.fields[key][index].value\n            this.fields[key][index]._buffer = this.data.slice(it.start, it.end)\n        }\n        return this.fields[key][index]._buffer\n    }\n\n    hex (key, index = 0) {\n        return toHex(this.bytes(key, index))\n    }\n\n    message (key, index = 0) {\n        this._assertType(key, index, 'lengthDelimited')\n        this._assertType(key, index, 'message', true)\n        if (!this.has(key, index, true)) {\n            return new OutputMessage()\n        }\n        if (!('_message' in this.fields[key][index])) {\n            let it = this.fields[key][index].value\n            let deserializer = new Deserializer(this.data)\n            deserializer.offset = it.start\n            deserializer.length = it.end\n            this.fields[key][index]._message = new OutputMessage(this.data, deserializer.parse())\n        }\n        return this.fields[key][index]._message\n    }\n\n    fixed32 (key, index = 0) {\n        this._assertType(key, index, 'fixed32')\n        if (!this.has(key, index, true)) {\n            return 0\n        }\n        return this.fields[key][index].value >>> 0\n    }\n\n    fixed64 (key, index = 0) {\n        this._assertType(key, index, 'fixed64')\n        if (!this.has(key, index, true)) {\n            return Long(0, 0)\n        }\n        return this.fields[key][index].value.toLong(false)\n    }\n\n    float (key, index = 0) {\n        this._assertType(key, index, 'float', true)\n        return this._cached('float', key, index, () => joinFloat(this.fixed32(key, index)))\n    }\n\n    double (key, index = 0) {\n        this._assertType(key, index, 'fixed64')\n        this._assertType(key, index, 'float', true)\n        return this._cached('double', key, index, () => joinDouble(\n            this.fields[key][index].value.lo,\n            this.fields[key][index].value.hi,\n        ))\n    }\n\n    _varint (key, index = 0) {\n        if (!this.has(key, index, true)) {\n            return LongBits.zero\n        }\n        this._assertType(key, index, 'varint')\n        if (!('_varint' in this.fields[key][index])) {\n            let offset = this.fields[key][index].value\n            this.fields[key][index]._varint = readVarint(offset, this.data)\n        }\n        return this.fields[key][index]._varint\n    }\n\n    int32 (key, index = 0) {\n        this._assertType(key, index, 'int32', true)\n        return this._varint(key, index).toNumber()\n    }\n\n    int64 (key, index = 0) {\n        this._assertType(key, index, 'int64', true)\n        return this._varint(key, index, true).toLong(false)\n    }\n\n    uint32 (key, index = 0) {\n        this._assertType(key, index, 'uint32', true)\n        return this._varint(key, index).toNumber(true)\n    }\n\n    uint64 (key, index = 0) {\n        this._assertType(key, index, 'uint64', true)\n        return this._varint(key, index).toLong(true)\n    }\n\n    bool (key, index = 0) {\n        this._assertType(key, index, 'bool', true)\n        return !!this._varint(key, index).toNumber()\n    }\n\n    sint32 (key, index = 0) {\n        this._assertType(key, index, 'sint32', true)\n        return this._cached('sint32', key, index, () => zigZagDecode(this.int32(key, index)))\n    }\n\n    sint64 (key, index = 0) {\n        this._assertType(key, index, 'sint64', true)\n        return this._cached('sint64', key, index, () => this._varint(key, index).clone().zzDecode().toLong())\n    }\n\n    sfixed32 (key, index = 0) {\n        this._assertType(key, index, 'sfixed32', true)\n        if (!this.has(key, index, true)) {\n            return 0\n        }\n        return this.fields[key][index].value\n    }\n\n    sfixed64 (key, index = 0) {\n        this._assertType(key, index, 'fixed64')\n        if (!this.has(key, index, true)) {\n            return Long(0, 0)\n        }\n        this._assertType(key, index, 'sfixed64', true)\n        return this.fixed64(key, index)\n    }\n\n    _processPacked (type, item, output) {\n        let state = {\n            offset: item.value.start,\n            data: this.data,\n            length: item.value.end,\n        }\n        if (VARINT_TYPES.indexOf(type) > -1) {\n            while (state.offset < state.length) {\n                let value = lazyReadVarint.apply(state)\n                output.push({\n                    value,\n                    type: 'varint',\n                })\n            }\n        } else if (\n            type === 'fixed32' ||\n            type === 'float' ||\n            type === 'sfixed32' ||\n            type === 'fixed64' ||\n            type === 'double' ||\n            type === 'sfixed64'\n        ) {\n            while (state.offset < state.length) {\n                let val = (type === 'fixed32' || type === 'float' || type === 'sfixed32'\n                           ? readFixed32\n                           : readFixed64).apply(state)\n                output.push({\n                    value: val,\n                    type: type === 'fixed32' || type === 'float' || type === 'sfixed32' ? 'fixed32' : 'fixed64',\n                })\n            }\n        }\n    }\n\n    repeated (key, type, lengthDelimitedIndex = -1) {\n        this._assertHas(key)\n        if (!this.has(key, 0, true)) {\n            return []\n        }\n        if (PACKABLE_TYPES.indexOf(type) === -1) return // forwards-compatibility\n        let newFields = []\n        if (lengthDelimitedIndex !== -1) {\n            let item = this.fields[key][lengthDelimitedIndex]\n            if (item.type === 'lengthDelimited') {\n                this._processPacked(type, item, newFields)\n            }\n        } else {\n            for (let i = 0; i < this.fields[key].length; i++) {\n                let item = this.fields[key][i]\n                if (item.type === 'lengthDelimited') {\n                    this._processPacked(type, item, newFields)\n                } else {\n                    // data is not packed\n                    newFields.push(item)\n                }\n            }\n        }\n        this.fields[key] = newFields\n        return this\n    }\n\n    toJSON () {\n        return outputToJson(this)\n    }\n}\n\n\nif (typeof Symbol !== 'undefined') {\n    OutputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = OutputMessage.prototype.toJSON\n}\n\n\n\nmodule.exports = OutputMessage\n","const Long = require('long')\nconst {\n    MIN_INT32,\n    MIN_INT64,\n    MIN_UINT32,\n    MIN_UINT64,\n    MAX_INT32,\n    MAX_INT64,\n    MAX_UINT32,\n    MAX_UINT64,\n} = require('./constants')\nconst Serializer = require('./serializer')\nconst ja = require('./json-api')\nconst { toHex } = require('./utils')\n\n/**\n * @class protoflex.InputMessage\n */\nclass InputMessage {\n    constructor () {\n        this.fields = {}\n        this._parent = null\n        this._unpacked = {}\n    }\n\n    has (key, index = 0) {\n        return key in this.fields && index in this.fields[key]\n    }\n\n    get (key, type = null, index = 0) {\n        if (!this.has(key)) {\n            throw Error(`Message does not have ${key}:${index}`)\n        }\n        if (typeof type === 'number' && index === 0) {\n            index = type\n            type = null\n        }\n        let it = this.fields[key][index]\n        if (type !== null && type !== it.type) {\n            throw Error(`${key}:${index} is not ${type}`)\n        } else {\n            return it.value\n        }\n    }\n\n    array (key, type = null) {\n        if (!this.has(key)) {\n            throw Error(`Message does not have ${key}`)\n        }\n\n        let ret = []\n        for (let i = 0; i < this.fields[key].length; i++) {\n            let it = this.fields[key][i]\n            if (it === undefined) {\n                ret[i] = undefined\n            } else if (type !== null && it.type !== type) {\n                throw Error(`${key}:${i} is not ${type}`)\n            } else {\n                ret[i] = it.value\n            }\n        }\n        return ret\n    }\n\n    iter (key, editable = false, type = null) {\n        if (!this.has(key)) {\n            throw Error(`Message does not have ${key}`)\n        }\n\n        let index = 0\n        let self = this\n        let length = self.fields[key].length\n\n        let ret = {\n            next() {\n                if (index >= length) {\n                    return { done: true, value: undefined }\n                }\n\n                if (self.fields[key].length !== length) {\n                    throw Error('Data size changed during iteration')\n                }\n                let typ = self.fields[key][index].type\n\n                if (type !== null && typ !== type) {\n                    throw Error(`${key}:${index} is not ${type}`)\n                }\n\n                let value\n                if (editable) {\n                    let ind = index\n\n                    value = {\n                        get() {\n                            return self.fields[key][ind].value\n                        },\n                        set(v) {\n                            self[typ](key, v, ind)\n                        }\n                    }\n                } else {\n                    value = self.fields[key][index].value\n                }\n\n                index += 1\n\n                return {\n                    value,\n                    done: false\n                }\n            }\n        }\n\n        if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n            ret[Symbol.iterator] = () => ret\n        }\n\n        return ret\n    }\n\n    clear (key = null, index = null) {\n        if (key === null) {\n            this.fields = {}\n        } else if (key in this.fields) {\n            if (index !== null) {\n                if (index < 0) {\n                    index = this.fields[key].length + index\n                }\n\n                if (index < 0 || index >= this.fields[key].length) {\n                    throw RangeError('Out of array bounds')\n                }\n\n                this.fields[key].splice(index, 1)\n            } else {\n                this.fields[key] = []\n            }\n        }\n        return this\n    }\n\n    append (key, value, type = null) {\n        if (!this.has(key)) {\n            if (type === null) {\n                throw Error('First item in array must have type set explicitly')\n            }\n            this._addField(key, 0, value, type)\n        } else {\n            let items = this.fields[key]\n            let last = items[items.length - 1]\n            if (type !== null && type !== last.type) {\n                throw Error(`Previous item(s) in array have type ${last.type}, not ${type}`)\n            }\n            if (type === null) type = last.type\n            this._addField(key, items.length, value, type)\n        }\n        return this\n    }\n\n    string (key, value, index = 0) {\n        this._addField(key, index, value + '', 'string')\n        return this\n    }\n\n    bytes (key, value, index = 0) {\n        if (Array.isArray(value) || (typeof Buffer !== 'undefined' && value instanceof Buffer)) {\n            this._addField(key, index, Array.from(value), 'bytes')\n            return this\n        }\n        throw Error(`${value ? value.constructor.name : value} cannot be cast to bytes.`)\n    }\n\n    bool (key, value, index = 0) {\n        this._addField(key, index, !!value, 'bool')\n        return this\n    }\n\n    float (key, value, index = 0) {\n        this._addField(key, index, value, 'float')\n        return this\n    }\n\n    double (key, value, index = 0) {\n        this._addField(key, index, value, 'double')\n        return this\n    }\n\n    fixed32 (key, value, index = 0) {\n        this._addField(key, index, value, 'fixed32')\n        return this\n    }\n\n    sfixed32 (key, value, index = 0) {\n        this._addField(key, index, value, 'sfixed32')\n        return this\n    }\n\n    fixed64 (key, value, index = 0) {\n        if (!(value instanceof Long)) {\n            value = Long.fromValue(value)\n        }\n        this._addField(key, index, value, 'fixed64')\n        return this\n    }\n\n    sfixed64 (key, value, index = 0) {\n        if (!(value instanceof Long)) {\n            value = Long.fromValue(value)\n        }\n        this._addField(key, index, value, 'sfixed64')\n        return this\n    }\n\n    message (key, index = 0) {\n        let msg = new InputMessage()\n        msg._parent = this\n        this._addField(key, index, msg, 'message')\n        return msg\n    }\n\n    parent () {\n        return this._parent\n    }\n\n    end () {\n        if (this._parent === null) {\n            throw Error('Root doesn\\'t have parent')\n        }\n        return this._parent\n    }\n\n    unpacked (...fields) {\n        for (let i = 0; i < fields.length; i++) {\n            if (Array.isArray(fields[i])) {\n                this.unpacked(...fields[i])\n            } else {\n                this._unpacked[fields[i]] = 1\n            }\n        }\n        return this\n    }\n\n    _addField (key, index, value, type) {\n        if (!(key in this.fields)) {\n            this.fields[key] = []\n        }\n        if (Array.isArray(value) && type !== 'bytes') {\n            if (index !== 0) {\n                throw Error('index != 0 when inserting multiple values')\n            }\n            this.fields[key] = value.map(it => ({\n                type,\n                value: it,\n            }))\n        } else {\n            this.fields[key][index] = {\n                value,\n                type,\n            }\n        }\n    }\n\n    toWire () {\n        return new Serializer(this).run()\n    }\n\n    serialize () {\n        return this.toWire()\n    }\n\n    toHex () {\n        return toHex(this.toWire())\n    }\n\n    toBuffer () {\n        if (typeof Buffer === 'undefined') {\n            throw Error('Buffer is not supported in current environment')\n        }\n        return Buffer.from(this.toWire())\n    }\n\n    toUint8Array () {\n        if (typeof Uint8Array === 'undefined') {\n            throw Error('Uint8Array is not supported in current environment')\n        }\n        return new Uint8Array(this.toWire())\n    }\n\n    toArrayBuffer () {\n        return this.toUint8Array().buffer\n    }\n\n    toJSON () {\n        return ja.inputToJson(this, InputMessage)\n    }\n}\n\n// varints\nInputMessage._varints = [\n    { name: 'int32', from: MIN_INT32, to: MAX_INT32 },\n    { name: 'int64', from: MIN_INT64, to: MAX_INT64, long: true },\n    { name: 'uint32', from: MIN_UINT32, to: MAX_UINT32 },\n    { name: 'uint64', from: MIN_UINT64, to: MAX_UINT64, long: true, unsigned: true },\n    { name: 'sint32', from: MIN_INT32, to: MAX_INT32 },\n    { name: 'sint64', from: MIN_INT64, to: MAX_INT64, long: true },\n]\n\nInputMessage._varints.forEach((item) => {\n    InputMessage.prototype[item.name] = function _addVarintField (key, value, index = 0) {\n        if (typeof value === 'bigint') {\n            value = value.toString(10)\n        }\n        if (typeof value === 'string') {\n            value = item.long ? Long.fromString(value, item.unsigned) : parseInt(value, 10)\n        }\n        if (item.long) {\n            if (!(value instanceof Long)) {\n                value = Long.fromNumber(value, item.unsigned)\n            }\n        } else if (value < item.from || value > item.to) {\n            throw RangeError(`${value} is outside ${item.name} range.`)\n        }\n        this._addField(key, index, value, item.name)\n        return this\n    }\n})\n\nif (typeof Symbol !== 'undefined') {\n    InputMessage.prototype[Symbol.for('nodejs.util.inspect.custom')] = InputMessage.prototype.toJSON\n}\n\nmodule.exports = InputMessage\n","const {\n    writeNumberVarint,\n    writeLongVarint,\n    writeFixed64,\n    writeFixed32,\n    writeLengthDelimited\n} = require('./writers')\nconst { toByteArray } = require('./utils')\nconst { splitFloat, splitDouble } = require('./math')\nconst { WIRE_TYPES, VARINT_TYPES } = require('./constants')\nconst Long = require('long')\nconst LongBits = require('./longbits')\nconst writers = {\n    varint: writeLongVarint,\n    fixed32: writeFixed32,\n    fixed64: writeFixed64,\n    lengthDelimited: writeLengthDelimited,\n}\n\nclass Serializer {\n    constructor (msg) {\n        this.msg = msg\n        this.data = []\n        this.pos = 0\n    }\n\n    _getPrimitiveType (type) {\n        if (VARINT_TYPES.indexOf(type) > -1) {\n            return 'varint'\n        }\n        if (type === 'fixed32' || type === 'fixed64') {\n            return type\n        }\n        if (type === 'float' || type === 'sfixed32') {\n            return 'fixed32'\n        }\n        if (type === 'double' || type === 'sfixed64') {\n            return 'fixed64'\n        }\n        if (type === 'string' || type === 'bytes' || type === 'message') {\n            return 'lengthDelimited'\n        }\n        throw Error(`Can't find primitive for ${type}`)\n    }\n\n    _coerceTo (field, type) {\n        let value = field.value\n        if (type === 'lengthDelimited') {\n            switch (field.type) {\n            case 'message':\n                return new Serializer(value).run()\n            case 'string':\n                return toByteArray(value)\n            case 'bytes':\n            case 'lengthDelimited':\n                return field.value\n            default:\n                throw Error(`${field.type} cannot be coerced to ${type}`)\n            }\n        }\n        if (field.type === 'sint32' || field.type === 'sint64') {\n            return LongBits.from(value).zzEncode()\n        }\n        if (field.type === 'float') {\n            return splitFloat(value)\n        }\n        if (field.type === 'double') {\n            return splitDouble(value)\n        }\n        if (field.type === 'bool' && type === 'varint') {\n            return !!field.value\n        }\n        return field.value\n    }\n\n    _coerce (field) {\n        let type = this._getPrimitiveType(field.type)\n        return {\n            type,\n            value: this._coerceTo(field, type),\n        }\n    }\n\n    _preProcess () {\n        let ret = []\n        let packed = {}  // temp storage for further packing repeateds\n        let j = 0\n\n        for (let i in this.msg.fields) {\n            if (this.msg.fields.hasOwnProperty(i)) {\n                let vals = this.msg.fields[i]\n                for (let k = 0; k < vals.length; k++) {\n                    let field = vals[k]\n                    if (field === undefined) continue // sparse\n                    field = this._coerce(field)\n                    let { type, value } = field\n\n                    if (type === 'lengthDelimited' && value.length === 0) {\n                        // l-delim has 0 length, thus skipping.\n                        continue\n                    }\n\n                    if ((type === 'varint' || type === 'fixed32' || type === 'fixed64') && !this.msg._unpacked[i]) {\n                        // packing this boi\n                        if (!(i in packed)) {\n                            packed[i] = []\n                        }\n                        packed[i].push(field)\n                    } else {\n                        ret[j++] = {\n                            type,\n                            value,\n                            key: i\n                        }\n                    }\n                }\n            }\n        }\n\n        // second pass for packed\n        for (let i in packed) {\n            if (packed.hasOwnProperty(i)) {\n                if (packed[i].length > 1) {\n                    let obj = {\n                        data: [],\n                        pos: 0\n                    }\n                    for (let k = 0; k < packed[i].length; k++) {\n                        let { type, value } = packed[i][k]\n                        if (type === 'varint' && typeof value === 'number') {\n                            writeNumberVarint.call(obj, value)\n                        } else {\n                            let writer = writers[type]\n                            writer.call(obj, value)\n                        }\n                    }\n                    ret[j++] = {\n                        key: i,\n                        type: 'lengthDelimited',\n                        value: obj.data\n                    }\n                } else {\n                    let { type, value } = packed[i][0]\n                    ret[j++] = {\n                        type,\n                        value,\n                        key: i\n                    }\n                }\n            }\n        }\n\n        return ret\n    }\n\n    run () {\n        let preprocessed = this._preProcess()\n\n        for (let i = 0; i < preprocessed.length; i++) {\n            let { key, type, value } = preprocessed[i]\n\n            if (!value || value.length === 0) {\n                continue\n            }\n\n            // header\n            writeNumberVarint.call(this, key * 8 + WIRE_TYPES[type])\n\n            if (type === 'varint' && typeof value === 'number') {\n                writeNumberVarint.call(this, value)\n            } else {\n                let writer = writers[type]\n                writer.call(this, value)\n            }\n        }\n\n        return this.data\n    }\n}\n\nmodule.exports = Serializer\n","const Long = require('long')\nconst LongBits = require('./longbits')\n\nfunction writeNumberVarint (val) {\n    if (val === 0) {\n        this.data[this.pos] = val\n    }\n    if (val < 0) {\n        // filling 9 bytes\n        for (let i = 0; i < 9; i++) {\n            this.data[this.pos++] = (val & 0x7f) | 0x80\n            val >>= 7\n        }\n        // and 10th byte: sign\n        this.data[this.pos++] = 0x1\n    } else {\n        while (val > 127) {\n            this.data[this.pos++] = (val & 0x7f) | 0x80\n            val >>>= 7\n        }\n        this.data[this.pos++] = val\n    }\n}\n\nfunction writeLongVarint (val) {\n    if (val instanceof Long) {\n        val = LongBits.from(val)\n    }\n    while (val.hi) {\n        this.data[this.pos++] = val.lo & 127 | 128\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\n        val.hi >>>= 7\n    }\n    while (val.lo > 0x7f) {\n        this.data[this.pos++] = val.lo & 127 | 128\n        val.lo = val.lo >>> 7\n    }\n    this.data[this.pos++] = val.lo\n}\n\nfunction writeFixed32 (val) {\n    this.data[this.pos++] = val & 0xff\n    this.data[this.pos++] = val >>> 8 & 0xff\n    this.data[this.pos++] = val >>> 16 & 0xff\n    this.data[this.pos++] = val >>> 24 & 0xff\n}\n\nfunction writeFixed64 (val) {\n    let bits = LongBits.from(val)\n    writeFixed32.call(this, bits.lo)\n    writeFixed32.call(this, bits.hi)\n}\n\nfunction writeLengthDelimited (val) {\n    writeNumberVarint.call(this, val.length)\n    for (let i = 0; i < val.length; i++) {\n        this.data[this.pos++] = val[i]\n    }\n}\n\nmodule.exports = {\n    writeLongVarint,\n    writeNumberVarint,\n    writeFixed32,\n    writeFixed64,\n    writeLengthDelimited\n}\n"],"sourceRoot":""}